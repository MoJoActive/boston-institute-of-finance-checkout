{"version":3,"file":"cart-summary-5deedf28.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isBuyNowCart } from '../common/utility';\r\nimport OrderSummary from '../order/OrderSummary';\r\n\r\nimport EditLink from './EditLink';\r\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\r\nimport { RedeemableProps } from './Redeemable';\r\nimport withRedeemable from './withRedeemable';\r\n\r\nexport type WithCheckoutCartSummaryProps = {\r\n    checkout: Checkout;\r\n    cartUrl: string;\r\n    isUpdatedCartSummayModal: boolean;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    storeCreditAmount?: number;\r\n} & RedeemableProps;\r\n\r\nconst CartSummary: FunctionComponent<WithCheckoutCartSummaryProps> = ({ cartUrl, ...props }) => {\r\n    const headerLink = isBuyNowCart() ? null : <EditLink url={cartUrl} />;\r\n\r\n    return withRedeemable(OrderSummary)({\r\n        ...props,\r\n        cartUrl,\r\n        headerLink,\r\n    });\r\n};\r\n\r\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface EditLinkProps {\r\n    className?: string;\r\n    url: string;\r\n}\r\n\r\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url }) => (\r\n    <a\r\n        className={className || 'cart-header-link'}\r\n        data-test=\"cart-edit-link\"\r\n        href={url}\r\n        id=\"cart-edit-link\"\r\n        target=\"_top\"\r\n    >\r\n        <TranslatedString id=\"cart.edit_cart_action\" />\r\n    </a>\r\n);\r\n\r\nexport default memo(EditLink);\r\n","import { Coupon } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface AppliedCouponProps {\r\n    coupon: Coupon;\r\n}\r\n\r\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\r\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\r\n        <span className=\"redeemable-info-header\">\r\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\r\n                {coupon.displayName}\r\n            </span>{' '}\r\n            <TranslatedString id=\"redeemable.coupon_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\r\n            {coupon.code}\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedCoupon);\r\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\n\r\nexport interface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n}\r\n\r\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\r\n    giftCertificate,\r\n}) => (\r\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\r\n        <span className=\"redeemable-info-header\">\r\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\r\n                <ShopperCurrency amount={giftCertificate.used} />\r\n            </span>{' '}\r\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\">\r\n            {giftCertificate.remaining > 0 && (\r\n                <span className=\"redeemable-info-subHeader--remaining\">\r\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\r\n                    <span data-test=\"giftCertificate-remaining\">\r\n                        <ShopperCurrency amount={giftCertificate.remaining} />\r\n                    </span>\r\n                </span>\r\n            )}\r\n\r\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedGiftCertificate);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconRemove: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconRemove);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconRemove } from '../ui/icon';\r\n\r\nimport './AppliedRedeemable.scss';\r\n\r\nexport interface AppliedRedeemableProps {\r\n    isRemoving: boolean;\r\n    onRemove(): void;\r\n}\r\n\r\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\r\n    children,\r\n    isRemoving,\r\n    onRemove,\r\n}) => (\r\n    <div className=\"form-checklist-header\">\r\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"redeemable.applied_text\" />\r\n            </span>\r\n        </div>\r\n\r\n        <div className=\"form-label form-label-redeemable\">\r\n            <div className=\"redeemable\">\r\n                {children}\r\n                <div className=\"redeemable-column redeemable-actions\">\r\n                    <button\r\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\r\n                        data-test=\"redeemable-remove\"\r\n                        disabled={isRemoving}\r\n                        onClick={onRemove}\r\n                        type=\"button\"\r\n                    >\r\n                        <IconRemove />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AppliedRedeemable;\r\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { AppliedCoupon } from '../coupon';\r\nimport { AppliedGiftCertificate } from '../giftCertificate';\r\n\r\nimport AppliedRedeemable from './AppliedRedeemable';\r\n\r\ninterface AppliedCouponProps {\r\n    coupon: Coupon;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\r\n    coupon,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(coupon.code);\r\n    }, [coupon, onRemoved]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\r\n                <AppliedCoupon coupon={coupon} />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\ninterface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\r\n    giftCertificate,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(giftCertificate.code);\r\n    }, [giftCertificate, onRemoved]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\r\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport interface AppliedRedeemablesProps {\r\n    coupons?: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    isRemovingGiftCertificate?: boolean;\r\n    isRemovingCoupon?: boolean;\r\n    onRemovedCoupon(code: string): void;\r\n    onRemovedGiftCertificate(code: string): void;\r\n}\r\n\r\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\r\n    coupons = [],\r\n    giftCertificates = [],\r\n    isRemovingCoupon = false,\r\n    isRemovingGiftCertificate = false,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n}) => {\r\n    if (!coupons.length && !giftCertificates.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul\r\n            className=\"form-checklist optimizedCheckout-form-checklist\"\r\n            data-test=\"redeemables-list\"\r\n        >\r\n            {coupons.map((coupon) => (\r\n                <AppliedCouponChecklistItem\r\n                    coupon={coupon}\r\n                    isRemoving={isRemovingCoupon}\r\n                    key={coupon.code}\r\n                    onRemoved={onRemovedCoupon}\r\n                />\r\n            ))}\r\n\r\n            {giftCertificates.map((giftCertificate) => (\r\n                <AppliedGiftCertificateChecklistItem\r\n                    giftCertificate={giftCertificate}\r\n                    isRemoving={isRemovingGiftCertificate}\r\n                    key={giftCertificate.code}\r\n                    onRemoved={onRemovedGiftCertificate}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(AppliedRedeemables);\r\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport { FieldProps, FormikProps, withFormik } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, KeyboardEvent, memo, useCallback } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { FormContextType, FormField, FormProvider, Label, TextInput } from '../ui/form';\r\nimport { Toggle } from '../ui/toggle';\r\n\r\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\r\n\r\nexport interface RedeemableFormValues {\r\n    redeemableCode: string;\r\n}\r\n\r\nexport type ReedemableChildrenProps = Pick<\r\n    RedeemableProps,\r\n    | 'onRemovedCoupon'\r\n    | 'onRemovedGiftCertificate'\r\n    | 'isRemovingGiftCertificate'\r\n    | 'isRemovingCoupon'\r\n    | 'coupons'\r\n    | 'giftCertificates'\r\n>;\r\n\r\nexport type RedeemableProps = {\r\n    appliedRedeemableError?: RequestError;\r\n    isApplyingRedeemable?: boolean;\r\n    isRemovingRedeemable?: boolean;\r\n    removedRedeemableError?: RequestError;\r\n    showAppliedRedeemables?: boolean;\r\n    shouldCollapseCouponCode?: boolean;\r\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\r\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\r\n    clearError(error: Error): void;\r\n} & AppliedRedeemablesProps;\r\n\r\nconst Redeemable: FunctionComponent<\r\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\r\n> = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => (\r\n    <Toggle openByDefault={!shouldCollapseCouponCode}>\r\n        {({ toggle, isOpen }) => (\r\n            <>\r\n                {shouldCollapseCouponCode && (\r\n                    <a\r\n                        aria-controls=\"redeemable-collapsable\"\r\n                        aria-expanded={isOpen}\r\n                        className=\"redeemable-label\"\r\n                        data-test=\"redeemable-label\"\r\n                        href=\"#\"\r\n                        onClick={preventDefault(toggle)}\r\n                    >\r\n                        <TranslatedString id=\"redeemable.toggle_action\" />\r\n                    </a>\r\n                )}\r\n                {!shouldCollapseCouponCode && (\r\n                    <div className=\"redeemable-label\">\r\n                        <TranslatedString id=\"redeemable.toggle_action\" />\r\n                    </div>\r\n                )}\r\n                {(isOpen || !shouldCollapseCouponCode) && (\r\n                    <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\r\n                        <RedeemableForm {...formProps} />\r\n                        {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\r\n                    </div>\r\n                )}\r\n            </>\r\n        )}\r\n    </Toggle>\r\n);\r\n\r\nconst RedeemableForm: FunctionComponent<\r\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\r\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\r\n    const handleKeyDown = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\r\n            if (appliedRedeemableError) {\r\n                clearError(appliedRedeemableError);\r\n            }\r\n\r\n            // note: to prevent submitting main form, we manually intercept\r\n            // the enter key event and submit the \"subform\".\r\n            if (event.keyCode === 13) {\r\n                setSubmitted(true);\r\n                submitForm();\r\n                event.preventDefault();\r\n            }\r\n        }),\r\n        [appliedRedeemableError, clearError, submitForm],\r\n    );\r\n\r\n    const handleSubmit = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\r\n            setSubmitted(true);\r\n            submitForm();\r\n        }),\r\n        [],\r\n    );\r\n\r\n    const renderLabel = useCallback(\r\n        (name: string) => (\r\n            <Label hidden htmlFor={name}>\r\n                <TranslatedString id=\"redeemable.code_label\" />\r\n            </Label>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const renderErrorMessage = useCallback((errorCode: string) => {\r\n        switch (errorCode) {\r\n            case 'min_purchase':\r\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\r\n\r\n            case 'not_applicable':\r\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\r\n\r\n            default:\r\n                return <TranslatedString id=\"redeemable.code_invalid_error\" />;\r\n        }\r\n    }, []);\r\n\r\n    const renderInput = useCallback(\r\n        (setSubmitted: FormContextType['setSubmitted']) =>\r\n            ({ field }: FieldProps) =>\r\n                (\r\n                    <>\r\n                        {appliedRedeemableError &&\r\n                            appliedRedeemableError.errors &&\r\n                            appliedRedeemableError.errors[0] && (\r\n                                <Alert type={AlertType.Error}>\r\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code)}\r\n                                </Alert>\r\n                            )}\r\n\r\n                        <div className=\"form-prefixPostfix\">\r\n                            <TextInput\r\n                                {...field}\r\n                                aria-label={language.translate('redeemable.code_label')}\r\n                                className=\"form-input optimizedCheckout-form-input\"\r\n                                onKeyDown={handleKeyDown(setSubmitted)}\r\n                                testId=\"redeemableEntry-input\"\r\n                            />\r\n\r\n                            <Button\r\n                                className=\"form-prefixPostfix-button--postfix\"\r\n                                id=\"applyRedeemableButton\"\r\n                                isLoading={isApplyingRedeemable}\r\n                                onClick={handleSubmit(setSubmitted)}\r\n                                testId=\"redeemableEntry-submit\"\r\n                                variant={ButtonVariant.Secondary}\r\n                            >\r\n                                <TranslatedString id=\"redeemable.apply_action\" />\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                ),\r\n        [\r\n            appliedRedeemableError,\r\n            handleKeyDown,\r\n            handleSubmit,\r\n            isApplyingRedeemable,\r\n            language,\r\n            renderErrorMessage,\r\n        ],\r\n    );\r\n\r\n    const renderContent = useCallback(\r\n        memoizeOne(({ setSubmitted }: FormContextType) => (\r\n            <FormField\r\n                input={renderInput(setSubmitted)}\r\n                label={renderLabel}\r\n                name=\"redeemableCode\"\r\n            />\r\n        )),\r\n        [renderLabel, renderInput],\r\n    );\r\n\r\n    return (\r\n        <fieldset className=\"form-fieldset redeemable-entry\">\r\n            <FormProvider>{renderContent}</FormProvider>\r\n        </fieldset>\r\n    );\r\n};\r\n\r\nexport default withLanguage(\r\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\r\n        mapPropsToValues() {\r\n            return {\r\n                redeemableCode: '',\r\n            };\r\n        },\r\n\r\n        async handleSubmit(\r\n            { redeemableCode },\r\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\r\n        ) {\r\n            const code = redeemableCode.trim();\r\n\r\n            try {\r\n                await applyGiftCertificate(code);\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    clearError(error);\r\n                }\r\n\r\n                applyCoupon(code);\r\n            }\r\n        },\r\n\r\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\r\n            return object({\r\n                redeemableCode: string().required(\r\n                    language.translate('redeemable.code_required_error'),\r\n                ),\r\n            });\r\n        },\r\n    })(memo(Redeemable)),\r\n);\r\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToRedeemableProps from './mapToRedeemableProps';\r\n\r\nexport default function mapToCartSummaryProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutCartSummaryProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getConfig, getCustomer, getCheckout },\r\n        },\r\n    } = context;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n    const customer = getCustomer();\r\n    const redeemableProps = mapToRedeemableProps(context);\r\n\r\n    if (!checkout || !config || !redeemableProps || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const { isStoreCreditApplied, grandTotal } = checkout;\r\n    const { storeCredit } = customer;\r\n    const updatedCartModal = config?.checkoutSettings.features['CHECKOUT-7403.updated_cart_summary_modal'] ?? false;\r\n\r\n    return {\r\n        checkout,\r\n        shopperCurrency: config.shopperCurrency,\r\n        cartUrl: config.links.cartLink,\r\n        storeCurrency: config.currency,\r\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\r\n        isUpdatedCartSummayModal: updatedCartModal,\r\n        ...redeemableProps,\r\n    };\r\n}\r\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { RedeemableProps } from './Redeemable';\r\n\r\nexport default function mapToRedeemableProps(\r\n    context: CheckoutContextProps,\r\n): RedeemableProps | null {\r\n    const {\r\n        checkoutService,\r\n        checkoutState: {\r\n            data: { getConfig, getCoupons, getGiftCertificates },\r\n            statuses: {\r\n                isApplyingCoupon,\r\n                isApplyingGiftCertificate,\r\n                isRemovingCoupon,\r\n                isRemovingGiftCertificate,\r\n            },\r\n            errors: {\r\n                getApplyCouponError,\r\n                getApplyGiftCertificateError,\r\n                getRemoveCouponError,\r\n                getRemoveGiftCertificateError,\r\n            },\r\n        },\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n\r\n    if (!config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\r\n        applyCoupon: checkoutService.applyCoupon,\r\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\r\n        clearError: checkoutService.clearError,\r\n        coupons: getCoupons() || EMPTY_ARRAY,\r\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\r\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\r\n        isRemovingCoupon: isRemovingCoupon(),\r\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\r\n        onRemovedCoupon: checkoutService.removeCoupon,\r\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\r\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\r\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\r\n    };\r\n}\r\n","import React, { ComponentType, FunctionComponent } from 'react';\r\n\r\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\r\n\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport Redeemable from './Redeemable';\r\n\r\nexport default function withRedeemable(\r\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\r\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\r\n    return (props) => {\r\n        const {\r\n            checkout,\r\n            storeCurrency,\r\n            shopperCurrency,\r\n            headerLink,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            storeCreditAmount,\r\n            isUpdatedCartSummayModal = false,\r\n            ...redeemableProps\r\n        } = props;\r\n\r\n        return (\r\n            <OriginalComponent\r\n                {...mapToOrderSummarySubtotalsProps(checkout)}\r\n                additionalLineItems={\r\n                    <Redeemable\r\n                        {...{\r\n                            ...redeemableProps,\r\n                            onRemovedCoupon,\r\n                            onRemovedGiftCertificate,\r\n                        }}\r\n                    />\r\n                }\r\n                headerLink={headerLink}\r\n                isUpdatedCartSummayModal={isUpdatedCartSummayModal}\r\n                lineItems={checkout.cart.lineItems}\r\n                onRemovedCoupon={onRemovedCoupon}\r\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\r\n                shopperCurrency={shopperCurrency}\r\n                storeCreditAmount={storeCreditAmount}\r\n                storeCurrency={storeCurrency}\r\n                total={checkout.outstandingBalance}\r\n            />\r\n        );\r\n    };\r\n}\r\n","import { Checkout } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummarySubtotalsProps } from '../order';\r\nimport { hasSelectedShippingOptions } from '../shipping';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    subtotal,\r\n    cart: { discountAmount, isTaxIncluded },\r\n    giftCertificates,\r\n    consignments,\r\n    handlingCostTotal,\r\n    shippingCostBeforeDiscount,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n}: Checkout): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: subtotal,\r\n        discountAmount,\r\n        giftCertificates,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        shippingAmount: hasSelectedShippingOptions(consignments)\r\n            ? shippingCostBeforeDiscount\r\n            : undefined,\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        taxes,\r\n        isTaxIncluded,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n        {children}\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n                {additionalLineItems}\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection>\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\r\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\r\n    };\r\n}\r\n"],"names":["cartUrl","props","headerLink","url","memo","className","href","id","target","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","height","viewBox","width","xmlns","d","children","isRemoving","onRemove","disabled","onClick","type","AppliedCouponChecklistItem","onRemoved","handleRemove","useCallback","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","noop","submitForm","language","handleKeyDown","memoizeOne","setSubmitted","event","keyCode","preventDefault","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","renderInput","field","errors","Alert","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","renderContent","FormField","input","label","FormProvider","withLanguage","withFormik","mapPropsToValues","redeemableCode","applyCoupon","applyGiftCertificate","trim","Error","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","updatedCartModal","checkoutSettings","features","shopperCurrency","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","isUpdatedCartSummayModal","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","removeCoupon","removeGiftCertificate","removedRedeemableError","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","cart","discountAmount","isTaxIncluded","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","Redeemable","lineItems","total","outstandingBalance","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","physicalItems","filter","item","parentId","digitalItems","removeBundledItems","displayInclusiveTax","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","storeCurrencyCode","tax","index","OrderSummaryPrice"],"sourceRoot":""}