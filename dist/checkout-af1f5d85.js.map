{"version":3,"file":"checkout-af1f5d85.js","mappings":"+IA0BA,SAFyB,E,SAAAA,oBAAiDC,E,sECxB3D,SAASC,EACpBC,EACAC,GAEA,IAAIC,EAEJ,YAJA,IAAAD,IAAAA,EAAA,IAIO,WACH,OAAIC,IAIJA,EAAmBF,EAAQ,aAAIC,GAGnC,CACJ,CCgGA,QA7F0B,SAAC,G,IAAEE,EAAe,kBAAEC,EAAQ,WAC5CC,GAAiB,IAAAC,UACnB,WAAM,OAAAP,EAAoC,EAAAQ,kBAAmB,CAACJ,GAAxD,GACN,CAACA,IAECK,GAAiB,IAAAF,UACnB,WAAM,OAAAP,EAAoC,EAAAU,kBAAmB,CAACN,EAAgBO,WAAxE,GACN,CAACP,IA8DCD,EAAoC,CACtCS,cA5DkB,WAClBN,IAAiBO,uBACjBJ,IAAiBG,eACrB,EA0DIE,mBAxDuB,SAACC,GACxBT,IAAiBQ,mBAAmBC,GACpCN,IAAiBO,cAAcD,EACnC,EAsDIE,gBApDoB,SAACC,GACrBZ,IAAiBW,gBAAgBC,EACrC,EAmDIC,eAjDmB,WACnBb,IAAiBc,qBACjBX,IAAiBU,gBACrB,EA+CIE,mBA7CuB,SAACC,GACxBb,IAAiBY,mBAAmBC,EACxC,EA4CIC,uBA1C2B,SAACC,GAC5Bf,IAAiBc,uBAAuBC,EAC5C,EAyCIC,0BAvC8B,WAC9BhB,IAAiBgB,2BACrB,EAsCIC,8BApCkC,SAACF,GACnCf,IAAiBiB,8BAA8BF,EACnD,EAmCIG,oBAjCwB,WACxBlB,IAAiBkB,qBACrB,EAgCIC,sBA9B0B,SAACC,GAC3BpB,IAAiBmB,sBAAsBC,EAC3C,EA6BIC,eA3BmB,SAACN,GACpBf,IAAiBqB,eAAeN,EACpC,EA0BIO,gBAxBoB,WACpBtB,IAAiBsB,iBACrB,EAuBIC,gBArBoB,WACpBvB,IAAiBuB,iBACrB,EAoBIC,aAlBiB,WACjBxB,IAAiBwB,cACrB,GAmBA,OACI,gBAACC,EAAA,WAAyB,CAACC,MAAO,CAAEhC,iBAAgB,IAC/CE,EAGb,C,kBC7GA,IAAK+B,E,iBAAL,SAAKA,GACD,oBACA,qBACH,CAHD,CAAKA,IAAAA,EAAW,KAKhB,S,yGCeA,QAfwB,SACpBC,EACAC,GAEA,IAAMC,GAAU,IAAAC,MAAKF,EAAW,CAAEG,KAAMJ,EAAQK,cAC1CC,GAAUJ,IAAW,IAAAK,SAAQL,EAAQM,cAAgB,GAAKN,EAAQM,aAClEC,GAAQ,IAAAN,MAAKG,EAAQ,CAAEF,KAAMJ,EAAQU,sBAE3C,OAAO,gCACAV,GAAO,CACVW,iBAAkBT,EAAUA,EAAQU,KAAOZ,EAAQE,QACnDW,kBAAmBJ,EAAQA,EAAMG,KAAOZ,EAAQc,iBAExD,ECwFA,SAAe,EAAAC,EAAA,IArBR,SACHC,EACA,G,IAAEhB,EAAO,UAAEiB,EAAI,OAIP,EAEJD,EAAO,mBAFKE,EAAmB,sBAAEC,EAAuB,0BAAEC,EAAwB,2BAItF,MAAO,CACHnB,UAAWiB,IACXG,OACIJ,IAASlB,EAAA,UACHoB,EAAwBnB,EAAQK,aAChCY,IAASlB,EAAA,WACTqB,EAAyBpB,EAAQK,kBACjC3C,EAElB,GAEA,EAAqD,IAAA4D,OAvEjD,SAAC,G,IAAErB,EAAS,YAAEoB,EAAM,SAAWE,EAA0B,UACnDvB,EAAU,EAAgBuB,EAA4BtB,GAQ5D,OAPiBoB,GAEX,EAAAG,EAAA,GACIxB,EACAqB,EAAOI,QAAO,SAACC,GAAU,OAACA,EAAMC,MAAP,OAH5B,IAAApB,SAAQP,IAOX,uBAAK4B,UAAU,mCACT5B,EAAQ6B,WAAa7B,EAAQ8B,WAC3B,qBAAGF,UAAU,oBACT,wBAAMA,UAAU,cAAc,UAAG5B,EAAQ6B,UAAS,MAClD,wBAAMD,UAAU,eAAe5B,EAAQ8B,YAI7C9B,EAAQ+B,OAAS/B,EAAQgC,UACvB,qBAAGJ,UAAU,iBACT,wBAAMA,UAAU,gBAAgB,UAAG5B,EAAQgC,QAAO,MAClD,wBAAMJ,UAAU,OAAO5B,EAAQ+B,QAIvC,uBAAKH,UAAU,OACX,qBAAGA,UAAU,gCACT,wBAAMA,UAAU,kBAAkB,UAAG5B,EAAQiC,SAAQ,MACpDjC,EAAQkC,UACL,wBAAMN,UAAU,kBAAkB,aAAM5B,EAAQkC,YAIxD,qBAAGN,UAAU,iBACR5B,EAAQmC,MAAQ,wBAAMP,UAAU,YAAY,UAAG5B,EAAQmC,KAAI,OAC3DnC,EAAQa,mBACL,wBAAMe,UAAU,UAAU,UAAG5B,EAAQa,kBAAiB,OAEzDb,EAAQoC,YACL,wBAAMR,UAAU,eAAe,UAAG5B,EAAQoC,WAAU,QAEvDpC,EAAQW,kBACL,wBAAMiB,UAAU,gBAAgB,UAAG5B,EAAQW,iBAAgB,SAjC7D,IAuCtB,I,sGC5Ea0B,EAAmB,WAMhC,SAAe,IAAAC,UAAQ,SAAuC,G,IAC1DC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAE3B,OAAO,SAAO,iBACPD,EACEd,QAAO,SAAC,GAAe,OAAP,QAAO,IACvBgB,QAAO,SAACC,EAAQ,G,IAAE9B,EAAI,OAAE+B,EAAQ,WAAEC,EAAK,QAcpC,OAbAF,EAAO9B,IAAQ,UAEX+B,IACAD,EAAO9B,GAAQ8B,EAAO9B,GACjBiC,OACAF,SAASH,EAAU,WAAY,CAAEI,MAAK,EAAEhC,KAAI,MAGrD8B,EAAO9B,GAAQ8B,EAAO9B,GAAMkC,QACxBT,EACAG,EAAU,UAAW,CAAE5B,KAAI,EAAEgC,MAAK,KAG/BF,CACX,GAAG,CAAC,KACTK,QACC,EAAAC,EAAA,GAAoC,CAAET,WAAU,EAAEC,UAAS,IAEnE,ICxBO,SAASS,EACZC,GAEA,IAAMC,EAAoE,CACtE9C,YAAa,kBACbwB,UAAW,qBACXC,SAAU,oBACVE,QAAS,uBACTC,SAAU,yBACVC,SAAU,yBACVC,KAAM,eACNrB,gBAAiB,gBACjBJ,oBAAqB,gBACrB0B,WAAY,sBACZL,MAAO,wBAGX,OAAO,SAACd,EAAM,G,IAAE2B,EAAK,QAAEhC,EAAI,OAAEwC,EAAG,MAAEC,EAAG,MACjC,GAAKH,EAIL,MAAa,aAATjC,EACIkC,EAAiCvC,GAC1BsC,EAASV,UACZ,UAAGW,EAAiCvC,GAAK,oBAI1CsC,EAASV,UAAU,gCAAiC,CAAEI,MAAK,IAGzD,QAAT3B,GAAkBoC,EACXH,EAASV,UAAU,2BAA4B,CAAEI,MAAK,EAAES,IAAG,IAGzD,QAATpC,GAAkBmC,EACXF,EAASV,UAAU,2BAA4B,CAAEI,MAAK,EAAEQ,IAAG,IAGzD,YAATnC,EACOiC,EAASV,UAAU,mCAAoC,CAAEI,MAAK,SADzE,CAGJ,CACJ,CAEA,SAAe,IAAAN,UAAQ,SAA8C,G,IACjEC,EAAU,aACVW,EAAQ,WAER,OAAOI,EAA8B,CACjCf,WAAU,EACVC,UAAWS,EAAyBC,IAE5C,G,6DChEe,SAAS1B,EAAexB,EAAkBuC,GAGrD,OAFsB,OAAqC,CAAEA,WAAU,IAElDgB,aAAY,OAAuBhB,EAAYvC,GACxE,C,6DCDe,SAASwD,EACpBnC,EACArB,GAEA,IAAMyD,GAAS,iBACRpC,EAAOoB,QACN,SAACiB,EAAmB,G,IA2E5BC,EA3E8B/C,EAAI,OAAEe,EAAM,SAAEiC,EAAS,YAAWC,EAAY,UAChE,GAAIlC,EAAQ,CACH+B,EAAkBI,eACnBJ,EAAkBI,aAAe,CAAC,GAGtC,IAAMpC,EACF1B,GACAA,EAAQ8D,cACR9D,EAAQ8D,aAAa3D,MAAK,SAAC,GAAgB,OAAP,YAAmBS,CAAZ,IAEzCmD,EAAarC,GAASA,EAAMqC,WAQlC,OANAL,EAAkBI,aAAalD,GAiCnD,SACIgD,EACAG,EACAF,GAEA,GAAIE,QACA,OAUR,SAAyBH,EAAoBC,GACzC,GAAIA,GAAgBD,IAAc,SAC9B,OAAO,IAAII,KAAKH,GAGpB,GAAID,IAAc,aACd,MAAO,GAGX,OAAOC,GAAgB,EAC3B,CApBeI,CAAgBL,EAAWC,GAGtC,GAAID,IAAc,UAAmD,iBAAfG,EAClD,OAAOA,EAAa,IAAIC,KAAKD,QAAcrG,EAG/C,OAAOqG,CACX,CA/C2DG,CACnCN,EACAG,EACAF,GAGGH,C,CAOX,MAmDS,kBAFrBC,EArDyC/C,IAuDY,sBAAd+C,IAtDvBD,EAAkB9C,GAASZ,GAAWA,EAAQY,IAAU,IAGrD8C,CACX,GACA,CAAC,IAeT,OAXAD,EAAOU,mBAAoB,OAGIzG,IAA3B+F,EAAO3C,kBACP2C,EAAO3C,gBAAkB,SAGMpD,IAA/B+F,EAAO/C,sBACP+C,EAAO/C,oBAAsB,IAG1B+C,CACX,C,kDCpDA,SAFsB,E,SAAA,GAAgB,IAAkB,CAAEW,kBAAmB,iB,yGC6C7E,SAAe,QAhBR,SACH,EACA,G,IADEC,EAAa,gBACbrE,EAAO,UAGL,EACAqE,EAAa,KADLlD,EAAuB,0BAG7BmD,GAAWC,EAH+B,iBAKhD,MAAO,CACHlD,OAAQF,EAAwBnB,EAAQK,aACxCmE,SAAUF,GAAYA,EAASE,SAEvC,GAEA,EAA4D,IAAAlD,OA5BxD,SAAC,G,IAAEtB,EAAO,UAAE,IAAAwE,SACZ,YADoB,IAAG,MAAW,GACrBrE,MAAK,SAACsE,GAAY,MAAuB,cAAvBA,EAAQC,UAAR,IAEvB,yBACI,gBAAC,IAAgB,CAACC,GAAG,uCAK1B,gBAAC,IAAa,CAAC3E,QAASA,EAASiB,KAAM,aAClD,I,wLC7BA,wBAIA,QAHI,YAAA2D,YAAA,WACI,OAAO,CACX,EACJ,EAJA,G,0BCAA,cACI,WAAYC,GAAZ,MACI,YAAM,CACFjE,KAAM,sCACNiE,QAAO,KACT,K,OAEF,OAAe,EAAMC,EAAiCC,W,CAC1D,CACJ,OATsD,oBAStD,EATA,CAAsDC,EAAA,G,QCItD,WACI,WAAoBC,EAAsCC,GAAtC,KAAAD,mBAAAA,EAAsC,KAAAC,YAAAA,CAA+B,CAe7F,OAbI,YAAAN,YAAA,W,IAAA,WAAY,kDACR,IAAMK,EAAqBE,EAAI1D,QAAO,SAACkD,GAAO,SAAKM,mBAAmBG,QAAQT,IAAO,CAAvC,IAE9C,GAAkC,IAA9BM,EAAmBI,OACnB,OAAO,EAGX,MAAM,IAAIP,EACNQ,KAAKJ,YAAY1C,UAAU,sCAAuC,CAC9D+C,QAASN,EAAmBO,KAAK,QAG7C,EACJ,EAhBA,G,eCCMC,EAAsB,CAAC,WAAY,WAAY,YAAa,WAAY,YAAa,SAAU,c,gICQrG,uE,OAII,EAAAhF,MAA+B,CAC3BiF,WAAW,G,CA2BnB,QAhC8C,oBAU1C,YAAAC,kBAAA,sBACYC,EAAiBN,KAAKO,MAAK,aAEnCP,KAAKQ,UAAYC,YAAW,WACxB,EAAKC,SAAS,CAAEN,WAAW,GAC/B,GAAGE,EACP,EAEA,YAAAK,qBAAA,WACIC,cAAcZ,KAAKQ,UACvB,EAEA,YAAAK,OAAA,WACY,IAAAC,EAAad,KAAKO,MAAK,SACvBH,EAAcJ,KAAK7E,MAAK,UAEhC,OACI,gBAAC4F,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAWb,GAC9C,gBAACc,EAAA,EAAc,CAACC,KAAM,CAAEC,IAAKN,GAAYzB,GAAG,4BAGxD,EACJ,EAhCA,CAA8C,EAAAgC,e,ICfzCC,E,6CAAL,SAAKA,GACD,gBACA,gBACA,mCACA,iCACA,wDACA,gCACH,CAPD,CAAKA,IAAAA,EAAgB,KASrB,U,0BCkBA,QAjBI,SAAC,G,IAAEC,EAAY,eAAE7I,EAAQ,WAAEuI,EAAS,YAE9BO,EACF,uBAAKlF,UAAU,oCACVmF,MAAMF,GACFG,KAAK,GACLC,KAAI,SAACC,EAAIC,GAAM,OACZ,uBAAKvF,UAAU,qBAAqBwF,IAAK,6BAAsBD,IAC3D,uBAAKvF,UAAU,mBAFP,KAQ5B,OAAO,gBAACyF,EAAA,GAAe,iBAAK,CAAErJ,SAAQ,EAAEuI,UAAS,EAAEe,oBAbxB,EAa4CR,SAAQ,IACnF,ECrBe,SAASS,EAAiBC,GACrC,MAAO,oBAAqBA,CAChC,CCJA,IAAMC,EAAY,WAGLC,EAA8B,CACvC,YACAD,EACA,wBACA,kBACA,wBACA,WACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,uBACA,yBACA,mBACA,kBACA,qBACA,2B,kBCZJ,yB,8CA6BA,QA7B4C,oBACxC,YAAA9B,kBAAA,W,MACU,EAA8EL,KAAKO,MAAjF8B,EAAW,cAAEC,EAAU,aAAEC,EAA2B,8BAAEC,EAAQ,WAAEC,EAAO,UAEzEC,GAAeH,GAA6C,oBAAbC,GAA+C,0BAAbA,EAEjF,CAAC,EADD,CAAEG,aAhBa,IAmBrBL,IAAU,GACNE,SAAQ,IACPA,IAAQ,gCACFE,GAAY,CACfE,UAAWP,EACXI,QAAO,I,GAGnB,EAEA,YAAA9B,qBAAA,WACU,MAA6BX,KAAKO,OAExCsC,EAFoB,gBAEP,CAAEL,SAFe,YAGlC,EAEA,YAAA3B,OAAA,WACY,IAAAwB,EAAgBrC,KAAKO,MAAK,YAElC,OAAO,uBAAKlB,GAAIgD,GACpB,EACJ,EA7BA,CAA4C,EAAAhB,e,eCV7B,SAASyB,EACpBC,GAEA,IAAI3B,EAUJ,OAPIA,EADA2B,IAAW,EAAAC,EAAA,KACL,uCAAgCD,EAAQE,YAExC,UAAGf,OAAOgB,SAASC,SAASC,QAAQ,MAAO,IAAG,uBAGxDlB,OAAOgB,SAASE,QAAQhC,GAEjB,IAAIiC,QAAQ,EAAAC,KACvB,CCcA,QAxB+D,SAAC,GAC5D,IAAAhB,EAAU,aACVG,EAAO,UACJc,GAAI,cAHqD,0BAKtDC,GAAgB,IAAAC,YAAWC,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,GACG,OAAAvB,GAAW,gCACJuB,GAAO,CACVC,SAAU,CACNlB,UAAWW,EAAKlB,YAChB0B,cAAeP,aAAa,EAAbA,EAAe5F,SAASV,UAAU,sBACjD8G,cAAeR,aAAa,EAAbA,EAAe5F,SAASV,UAAU,sBACjDuF,QAAO,EACPwB,mBAAoBnB,KAP5B,GAUJ,CAACR,EAAYkB,EAAef,EAASc,EAAKlB,cAG9C,OAAO,gBAAC,GAAc,eAACC,WAAYqB,GAAuBJ,GAC9D,ECdA,QAZkE,SAAChD,GAK/D,OAJA,IAAA2D,YAAU,WACNC,GACJ,GAAG,IAGC,uBAAK7H,UAAU,sBACX,gBAAC,GAAc,iBAAKiE,IAGhC,EAIA,IAAM4D,EAAuB,W,MACzB,GAAKC,SAASC,cAAc,8BAA5B,CAIA,IAAMzB,EAAYwB,SAASC,cAAc,kCACnCC,EAAoC,QAArB,EAAA1B,aAAS,EAATA,EAAW2B,kBAAU,eAAEF,cAAc,2BAEtDzB,GAAa0B,EACbA,EAAaE,MAAMC,OAAS,OAIhChE,WAAW0D,EAAsB,G,CACrC,ECDA,QAvBqE,SAAC,GAClE,IAAA3B,EAAQ,WACRF,EAAU,aACVG,EAAO,UACJc,GAAI,cAJ2D,qCAM5DC,GAAgB,IAAAC,YAAWC,EAAA,GAC3BC,GAAoB,IAAAC,cACtB,SAACC,G,MACG,OAAAvB,GAAW,gCACJuB,KAAO,MACTrB,GAAW,CACRI,UAAWW,EAAKlB,YAChBI,QAAO,EACPiC,WAAY5B,GACf,IANL,GAQJ,CAACR,EAAYkB,EAAef,EAASc,EAAKlB,cAG9C,OAAO,gBAAC,GAAc,eAACC,WAAYqB,EAAmBnB,SAAUA,GAAce,GAClF,ECqCA,SApDmF,SAAC,GAChF,QAAAhB,4BAAAA,OAA2B,OAAO,EAClCE,EAAO,UACPD,EAAQ,WACLe,GAAI,cAJyE,sDAMhF,OAAQf,GACJ,IAAK,WACD,OACI,gBAAC,GAAc,eACXH,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAIhB,IAAK,YACD,OACI,gBAAC,GAAiB,eACdlB,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAIhB,IAAK,iBACL,IAAK,uBACD,OACI,gBAAC,GAAoB,eACjBlB,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAKpB,OAAO,gBAAC,GAAc,eACdlB,YAAa,UAAGG,EAAQ,kBACxBD,4BAA6BA,EAC7BT,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,GAEhB,EClCA,IAAMoB,GAAgB,SAACC,GACnB,IAAMC,EAAQ,CACV,WACA,wBACA,kBACA,sBACA,uBACA,kBAGJ,OAAOD,EAAUE,MAAK,SAACC,EAAGC,GAAM,OAAAH,EAAM/E,QAAQkF,GAAKH,EAAM/E,QAAQiF,EAAjC,GACpC,EAwHA,UAAe,EAAAtJ,EAAA,IAzCf,SAA2C,G,MACvCsD,EAAa,gBACbtG,EAAe,kBAGX,EAUCsG,EAAa,KATVkG,EAAS,YACTC,EAAW,cAGXC,EAKHpG,EAAa,+BAFVqG,EAEHrG,EAAa,kCACZsG,EAASJ,IACTK,GAA2F,QAAhD,EAAAD,aAAM,EAANA,EAAQE,iBAAiBC,+BAAuB,QAAI,IP3GpFrJ,QAAO,SAACqG,GACrB,QAAIA,IAAaL,IAAcF,EAAiBC,WAIA,IAAzCE,EAAkBtC,QAAQ0C,EACrC,IOsGMiD,EAAWP,IAEjB,IAAKG,GAAwC,IAA9BC,EAAmBvF,UAAiB0F,aAAQ,EAARA,EAAUC,SACzD,OAAO,KAGX,IAAMzE,EAAYqE,EAAmBnJ,QACjC,SAACqG,GAAa,OAAAmD,QAAQP,EAA2B5C,KAAc2C,EAAsB3C,EAAvE,IAChBzC,SAAWuF,EAAmBvF,OAC1B6F,EAAuBN,EAAmBnJ,QAAO,SAACqG,GAAa,OAAA2C,EAAsB3C,EAAtB,IAC/DqD,EAAoB,CAAC,iBAAkB,uBAAwB,uBAC/DC,EAAmBR,EAAmBS,MAAK,SAAA1G,GAAM,OAAAwG,EAAkBG,SAAS3G,EAA3B,IAEvD,MAAO,CACH5G,gBAAe,EACfsG,cAAa,EACbuG,mBAAoBX,GAAcW,GAClCM,qBAAoB,EACpB3E,UAAS,EACT6E,iBAAgB,EAExB,GAEA,EAtH4H,SACxH,G,IACIR,EAAkB,qBAClB7M,EAAe,kBACfsG,EAAa,gBACbkH,EAAoB,uBACpBhF,EAAS,YACT6E,EAAgB,mBAChBI,EAAmB,sBACnBN,EAAoB,uBACpBO,EAAgB,mBAEZvI,GAAa,SAAW,SAE1BgH,EAAY3D,EAAYqE,EAAqBM,EAEnD,IACIK,EAAqBrB,E,CACvB,MAAOwB,GACL,OAAO,I,CAGX,GAAIN,GAAoBI,EACpB,OAAO,KA4BX,OACI,uBAAK5J,UAAU,4BACVkI,MAAQ0B,EAAsB,CAAEG,SAAU,WAAYC,KAAM,IAAKC,IAAK,cAAYnO,GAEnF,yBACI,gBAACoO,EAAA,EAAgB,CAACnH,GAAG,4BAEzB,uBAAK/C,UAAW,IAAW,CACvB,sBAA4C,IAArBsI,EAAU7E,OACjC,sBAA4C,IAArB6E,EAAU7E,OACjC,sBAA4C,IAArB6E,EAAU7E,OACjC,sBAA4C,IAArB6E,EAAU7E,OACjC,sBAA4C,IAArB6E,EAAU7E,OACjC,sBAAuB6E,EAAU7E,OAAS,KAE1C,gBAAC,EAA8B,CAACwB,aAAcqD,EAAU7E,OAAQkB,UAAWA,GACvE,uBAAK3E,UAAU,kBAzCHgJ,EAAmB3D,KAAI,SAACa,GAChD,IC5DJiE,ED4DUC,GC5DVD,ED4DyD,CAAEpH,GAAImD,IC1DxD,EAAAmE,EAAA,GACHF,EACA,EAAQ,SD0DR,OAAKC,EAWE,gBAACA,EAAsB,CAClBjO,gBAAiBA,EACjBsG,cAAeA,EACfsD,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACL5E,SAAUA,EACV4E,SAAUA,EACV2D,iBAAkBA,IAjBnB,gBAAC,GAAwB,CAC5BtD,aAAcpK,EAAgBmO,qBAC9BtE,WAAY7J,EAAgBoO,mBAC5BtE,6BAA6B,EAC7BT,IAAKU,EACLA,SAAUA,EACVC,QAAS0D,GAarB,OAuBQ,uBAAK7J,UAAU,sBAAqB,4BAAM,gBAACkK,EAAA,EAAgB,CAACnH,GAAG,qBAG3E,I,gBEnGA,SAfqB,WACjB,IAAMyH,GAAmB,IAAArD,YAAWlJ,GAAA,GAEpC,IAAKuM,EACD,MAAM,IAAIC,MAAM,2DAGpB,OAAO,IAAAnO,UACH,WAAM,OACFJ,iBAAkBsO,EAAiBtO,iBADjC,GAGN,CAACsO,GAET,E,4CCiFA,UAAe,IAAA9K,OAvEgE,SAAC,G,IAC5EgL,EAAgC,mCAChCxE,EAAQ,WACRoE,EAAoB,uBACpBK,EAA4B,+BAC5BJ,EAAkB,qBAClB,IAAAV,iBAAAA,OAAgB,IAAG,IAAA7C,KAAI,EAEjB,GAAsC,IAAA4D,WAAkB,GAAvDC,EAAc,KAAEC,EAAiB,KAChC5O,EAAqB,KAAc,iBA2B3C,IAzBA,IAAA0L,YAAU,WACN0C,EAAqB,CAAEpE,SAAQ,IAE/B,IACIqE,EAAmB,CACfrE,SAAQ,EACR6E,KAAM,CACFC,OAAQ,SAACC,EAAgB5N,GACrByN,EAAkBG,GAEd5N,GACAnB,EAAiBoB,uBAAuB,CAAC2N,eAAc,GAE/D,I,CAGV,MAAOnB,GACLD,EAAiBC,E,CAGrB,OAAO,WACHQ,EAAqB,CAAEpE,SAAQ,GACnC,CACJ,GAAG,CAACqE,EAAoBD,EAAsBpE,EAAU2D,KAEnDgB,EACD,OAAO,KAGX,IC9DFK,EDkEE,OACI,uBAAKlL,UAAU,qBAAqBmL,QClEjC,SAACC,GACJA,EAAMC,kBAEFH,GACAA,EAAGE,EAEX,GD6DQ,qBAAGpL,UAAU,8BACT,gBAACkK,EAAA,EAAgB,CACbrF,KAAM,CACFyG,SAAU,OACVC,aAAc,iBAElBxI,GAAG,8BAGX,gBAACyI,GAAA,GAAM,CACHxL,UAAU,4DAA2D,YAC3D,2BACV2E,UAAW+F,EACXS,QAnBc,kE,iEACtB,SAAMR,EAA6B,CAAEzE,SAAQ,K,cAA7C,S,aAoBQ,gBAACuF,GAAA,EAAQ,CAACC,oBAAoB,yCAC9B,gBAACxB,EAAA,EAAgB,CACbrF,KAAM,CAAE0G,aAAc,iBACtBxI,GAAG,gCAKvB,IEdA,UAAe,EAAA5D,EAAA,IAzBsB,SAAC,G,IAClChD,EAAe,kBACfsG,EAAa,gBAGT,EAEAA,EAAa,KAFLE,EAAW,cAAEgG,EAAS,YAClB+B,EACZjI,EAAa,0CAEXC,EAAWC,IACXoG,EAASJ,IAEf,OAAKjG,GAAaqG,EAIX,CACHuB,qBAAsBnO,EAAgBmO,qBACtCK,6BAA8BxO,EAAgBwO,6BAC9CJ,mBAAoBpO,EAAgBoO,mBACpCG,iCAAkCA,IAClCiB,2BAA4B5C,EAAOE,iBAAiB0C,iCAA8B7P,GAR3E,IAUf,GAEA,EAA0D,IAAA4D,OAjDtD,SAAC,GACD,IAAAiM,EAA0B,6BAC1BhB,EAA4B,+BACzB1D,GAAI,cAHN,+DAKO/K,EAAqB,KAAc,iBAQ3C,OAAIyP,IAA+BC,GAAA,OACxB,gBAAC,IAAsB,eAClBjB,6BAR2B,SAACpD,GAGxC,OAFArL,EAAiBsB,4BAEVmN,EAA6BpD,EACxC,EAKgBrB,SAAUyF,GACN1E,IAIb,IACX,K,gBC7CM,GAAY,WAGL,GAA8B,CACvC,YACA,GACA,wBACA,kBACA,wBACA,WACA,aACA,iBACA,sBACA,uBACA,mBACA,mBACA,wBACA,eACA,qBACA,uBACA,yBACA,mBACA,kBACA,qBACA,4BAmHW,IAAAvH,OA3FwD,SAAC,GACpE,IAAAiK,EAAoB,uBACpBxD,EAAO,UACP,IAAA0F,eAAAA,OAAc,IAAG,GAAK,EACtB,IAAA5F,4BAAAA,OAA2B,OAAO,EAClCqC,EAAS,YACT,IAAAwD,SAAAA,OAAQ,IAAG,GAAK,EACb7E,GAAI,cAP6D,0GAS9D8E,EAnBgC,SAACzD,GACvC,OAAO,EAAYzI,QAAO,SAACqG,GACvB,QAAIA,IAAa,KAAcP,EAAiBC,WAIA,IAAzC,GAAkBpC,QAAQ0C,EACrC,GACJ,CAW+B8F,CAA2B1D,QAAAA,EAAa,IAEnE,GAAkC,IAA9ByD,EAAmBtI,OACnB,OAAO,KAGX,GAAIkG,EACA,IACIA,EAAqBoC,E,CACvB,MAAOjC,GACL,KAAIA,aAAiBW,OAAStE,GAG1B,MAAM2D,EAGV,OALI3D,EAAQ2D,GAKL,I,CAIf,OACI,iCACM+B,IAAmBC,GACjB,yBACI,gBAAC5B,EAAA,EAAgB,CAACnH,GAAG,+BAI7B,uBAAK/C,UAAU,kBACV+L,EAAmB1G,KAAI,SAACa,GACrB,MAAiB,aAAbA,EAEI,gBAAC,GAAc,eACXH,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAKC,cAAbf,EAEI,gBAAC,GAAiB,eACdH,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAKC,mBAAbf,GAA8C,yBAAbA,EAE7B,gBAAC,GAAoB,eACjBH,YAAa,UAAGG,EAAQ,kBACxBV,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,IAMZ,gBAAC,GAAc,eACXlB,YAAa,UAAGG,EAAQ,kBACxBD,4BAA6BA,EAC7BT,IAAKU,EACLA,SAAUA,EACVC,QAASA,GACLc,GAGhB,KAIhB,IC9IA,IAAMgF,GAA4B,CAAC,aAEtBC,GAA2B,SAAChG,GACrC,OAAO+F,GAA0BzI,QAAQ0C,IAAa,CAC1D,EAEe,SAASiG,GACpBhD,EACAzG,EACAwD,GAEA,QAAIgG,GAAyBhG,KAIzBiD,EAASC,UAKN,IAAAgD,OACH1J,EAASE,UACT,SAACC,GAAY,OAAmD,IAAnD,WAA0BA,EAAQC,WAAlC,GAErB,CCyGA,UAAe,EAAA3D,EAAA,IAzCf,SAA4C,G,QAC1ChD,EAAe,kBACfsG,EAAa,gBAGX,EAEEA,EAAa,KAFP4J,EAAiB,oBAAE1J,EAAW,cAAEiG,EAAW,cACvC0D,EACV7J,EAAa,sBAEX8J,EAAiBF,IACjB3J,EAAWC,IACXwG,EAAWP,IAEjB,IAAK2D,IAAmB7J,IAAayG,EACnC,OAAO,KAGT,IAAMjD,EACJxD,EAASE,UAAyC,IAA7BF,EAASE,SAASa,OAAef,EAASE,SAAS,GAAGE,WAAa,GAEpF0J,EAAcC,KAAKC,MAAMC,eAAeC,QAAQ,gBAAkB,MAClEzM,EAAQqM,EAC6C,QAAvD,EAAAA,aAAW,EAAXA,EAAajO,MAAK,SAACsO,GAAW,MAAc,aAAdA,EAAEC,OAAF,WAAyB,eAAE3K,WACzD,KACE/B,EAAUoM,EAC2C,QAAvD,EAAAA,aAAW,EAAXA,EAAajO,MAAK,SAACsO,GAAW,MAAc,aAAdA,EAAEC,OAAF,WAAyB,eAAE3K,WACzD,KAEJ,MAAO,CACL9E,MAAOkP,EAAelP,OAAS8L,EAAS9L,MACxC4C,UAAWsM,EAAetM,WAAakJ,EAASlJ,UAChDC,SAAUqM,EAAerM,UAAYiJ,EAASjJ,SAC9CC,MAAK,EACLC,QAAO,EACP8F,SAAQ,EACR6G,WAAYZ,GAAWhD,EAAUzG,EAAUwD,GAC3CoG,aAAcA,IACdU,QAAS7Q,EAAgB8Q,gBAE7B,GAEA,EArG2F,SAAC,G,IAC1F5P,EAAK,QACL4C,EAAS,YACTC,EAAQ,WACRC,EAAK,QACLC,EAAO,UACP8F,EAAQ,WACR6G,EAAU,aACVT,EAAY,eACZ,IAAAY,UAAAA,OAAS,IAAG,IAAAlG,KAAI,EAChB,IAAAmG,eAAAA,OAAc,IAAG,IAAAnG,KAAI,EACrBgG,EAAO,UAqBP,OACE,uBAAKhN,UAAU,eAAc,YAAW,0BACtC,uBAAKA,UAAU,qDAAoD,YAAW,iBAC5E,2BACGC,E,IAAYC,GAEf,2BAAM7C,GACN,2BAAM8C,GACN,2BAAMC,IAGR,uBAAKJ,UAAU,wBACZ+M,GACC,gBAACvB,GAAA,GAAM,CACL7G,UAAW2H,EACXnB,QAlCiC,kE,oGAEnCe,GAAyBhG,GAC3B,GAAM8G,EAAQ,CAAE9G,SAAQ,KADtB,M,cACF,SACAgH,EAAU,CAAEE,aAAa,IACzBxH,OAAOgB,SAASyG,S,aAEhB,SAAML,K,OAAN,SACAE,EAAU,CAAEE,aAAa,I,uDAGvB,EAAAE,GAAA,GAAgB,IAAyB,2BAAf,EAAMjO,KAClC6N,EAAU,CAAEE,aAAa,IAEzBD,EAAe,G,+BAqBXI,KAAM/B,GAAA,QACNgC,OAAO,gBACPC,QAASjC,GAAA,cAAuB,SAQ5C,ICnEA,SApBkE,SAAC,G,IAAEpP,EAAQ,WAAEuI,EAAS,YAC9EO,EACF,uBAAKlF,UAAU,mCACX,uBAAKA,UAAU,2BACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,8DAEnB,uBAAKA,UAAU,wDACX,uBAAKA,UAAU,0CAM/B,OAAO,gBAACyF,EAAA,GAAe,iBAAK,CAAErJ,SAAQ,EAAEuI,UAAS,EAAEO,SAAQ,IAC/D,E,oGCpBawI,GACT,mGCyBJ,SAASC,GACLrM,GAEA,OAAO,SAACjC,EAAM,G,IAAE2B,EAAK,QAAEQ,EAAG,MAAEC,EAAG,MAC3B,GAAKH,EAIL,MAAa,aAATjC,EACOiC,EAASV,UAAU,0BAA2B,CAAEI,MAAK,IAGnD,QAAT3B,GAAkBoC,EACXH,EAASV,UAAU,qBAAsB,CAAEI,MAAK,EAAES,IAAG,IAGnD,QAATpC,GAAkBmC,EACXF,EAASV,UAAU,qBAAsB,CAAEI,MAAK,EAAEQ,IAAG,IAGnD,YAATnC,EACOiC,EAASV,UAAU,oCAAqC,CAAEI,MAAK,SAD1E,CAGJ,CACJ,CAEA,UAAe,KAAAN,UAAQ,SAA2C,G,IAC9DC,EAAU,aACVW,EAAQ,WACR,IAAAsM,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,OAAO,SAAO,CACV/N,WAAW,WAASc,SAASO,EAASV,UAAU,sCAChDV,UAAU,WAASa,SAASO,EAASV,UAAU,qCAC/CqN,UAAU,WACLlN,SAASO,EAASV,UAAU,qCAAuCiN,GACnE3M,QACG4M,EACAxM,EAASV,UAAU,4CAA8CiN,GAEpE3M,QACG6M,EACAzM,EAASV,UAAU,4CAA8CiN,GAEpErM,IACGwM,EACA1M,EAASV,UAAU,iDAEtBa,IAAI,IAAKH,EAASV,UAAU,kDAEhCO,OCrEM,SAAkC,G,IAC7CG,EAAQ,WAER,OAAO,SAAO,CACVjE,OAAO,WACFoE,IAAI,KACJP,QAAQwM,GAAcpM,EAASV,UAAU,iCACzCG,SAASO,EAASV,UAAU,mCAEzC,CD4DgBsN,CAAyB,CAAE5M,SAAQ,KAC1CH,QACG,EAAAC,GAAA,GAAoC,CAChCT,WAAU,EACVC,UAAW+M,GAAgCrM,KAG3D,I,4BEeA,UAAe,EAAA6M,EAAA,IACb,KAAAC,YAAgF,CAC9EC,aAAc,SAAOxM,EAAQ,G,IAAE,IAAAoC,MAASqK,EAAQ,WAAEC,EAAa,gBAAEC,EAAM,S,0IAC/DC,EAAmB,CACvBC,KAAM,UAA+C,QAA3C,EAA6B,QAA9B,EAAC9I,OAAe+I,sBAAc,eAAEC,oBAAY,eAAEC,UAAS,eAClB,QAA3C,EAA6B,QAA9B,EAACjJ,OAAe+I,sBAAc,eAAEC,oBAAY,eAAEE,SAEhDC,KAAM,mEACNC,OAAQ,SAAC3R,GAGP,IAFA,IAAI4R,EAAU,GAEL1J,EAAI,EAAGA,EAAIlI,EAAMoG,OAAQ8B,IAAK,CACrC,IAAM2J,EACJ7R,EAAM8R,WAAW5J,GACjBkJ,EAAiBM,KAAKI,WAAW5J,EAAIkJ,EAAiBM,KAAKtL,QAC3DgL,EAAiBC,KAAKS,WAAW5J,EAAIkJ,EAAiBC,KAAKjL,QAE7DwL,GAAWG,OAAOC,aAAaC,OAAOJ,G,CAGxC,OAAOK,KAAKN,EACd,GAGIO,ECtHG,SAAwC,GACnD,IAAAC,EAAsB,yBACtBvN,EAAY,eACTL,GAAM,cAH0C,2CAKnD,OAAO,gCACAA,GAAM,CACT4N,uBAAwBA,GAA0BA,EAAuBhM,OAAS,EAClFvB,cAAc,EAAAwN,GAAA,GAAkCxN,IAExD,CD4G2ByN,CAA+B9N,GAEpD8K,eAAeiD,QAAQ,cAAenD,KAAKoD,UAAUL,EAAatN,e,iBAMhE,O,sBAAA,GAAMqM,EAAc,CAClBlR,MAAOwE,EAAOxE,MACd4C,UAAW4B,EAAO5B,UAClBC,SAAU2B,EAAO3B,SACjB+N,SAAUQ,EAAiBO,OAAOnN,EAAOxE,OACzC6E,aAAcsN,EAAatN,gB,cAL7B,S,sBAQM+L,EAAWQ,EAAiBO,OAAOnN,EAAOxE,O,iBAG9C,O,sBAAA,GAAMmR,EAAO,CAAEnR,MAAOwE,EAAOxE,MAAO4Q,SAAQ,K,cAA5C,S,oEAIJK,EAASzM,G,YAEXiO,iBAAkB,SAAC,GACjB,MAAO,CACL7P,UAAW,GACXC,SAAU,GACV7C,MAAO,GACP4Q,SAAU,gBACV/L,aAAc,CAAC,EACfuN,uBAPyC,2BAOU,GAAK,CAAC,KAE7D,EACAM,iBAAkB,SAAC,G,MAAEzO,EAAQ,WAAEX,EAAU,aACjCiN,EAEL,QAF4B,EAAAjN,EAAWpC,MACtC,SAAC,GAAqB,OAAP,cAAO,WACvB,eAAEyR,aAEH,IAAKpC,EACH,MAAM,IAAInD,MAAM,iCASlB,OANewF,GAAkC,CAC/C3O,SAAQ,EACRX,WAAU,EACViN,sBAAsB,EAAAsC,GAAA,GAAwBtC,IAIlD,GA1EF,EAjEE,SAAC,G,IAAEjN,EAAU,aAAEwP,EAAiB,oBAAEC,EAAsB,yBAC1D,OACE,gBAACC,GAAA,EAAI,CACHrQ,UAAU,gBACV+C,GAAG,8BACHyK,OAAO,+BAEP,gBAAC8C,GAAA,EAAQ,KACP,uBAAKtQ,UAAU,uBACZW,EACEd,QAAO,SAACC,GAAU,MAAe,aAAfA,EAAMd,IAAN,IAClBa,QAAO,SAACC,GAAU,MAAe,aAAfA,EAAMd,IAAN,IAClBqG,KAAI,SAACvF,GACJ,MAAmB,cAAfA,EAAMd,MACD,gCAAKc,GAAK,CAAEkB,MAAO,uBAGT,aAAflB,EAAMd,MACD,gCAAKc,GAAK,CAAEkB,MAAO,sBAGT,UAAflB,EAAMd,MACD,gCAAKc,GAAK,CAAEkB,MAAO,kBAGR,UAAhBlB,EAAMkB,OACD,gCAAKlB,GAAK,CAAEkB,MAAO,kBAGR,YAAhBlB,EAAMkB,OACD,gCAAKlB,GAAK,CAAEkB,MAAO,oBAGrBlB,CACT,IACCuF,KAAI,SAACvF,GAAU,OACd,gBAACyQ,GAAA,EAAgB,CACfC,aAAc1Q,EAAMd,KACpByR,WAAY,8BAAuB3Q,EAAMd,MACzCc,MAAOA,EACPsQ,uBAAwBA,EACxB5K,IAAK1F,EAAMiD,GACX/B,MAAOlB,EAAMkB,MACb0P,gBAAiB5Q,EAAMC,OAAS,oBAAiBjE,GARrC,MActB,uBAAKkE,UAAU,gBACb,gBAACwL,GAAA,GAAM,CACLmF,SAAUR,EACVpN,GAAG,2BACHyK,OAAO,2BACPnO,KAAK,SACLoO,QAASjC,GAAA,YAAqB,aAOxC,KETA,8E,OAIE,EAAA3M,MAAuB,CACrB+R,SAAS,GAsUH,EAAAC,oBAAiE,6D,uDAC/D,EAA4BnN,KAAKO,MAAK,uBAAtB,IAAG,IAAA+C,KAAI,K,WAazB,EAAA8J,0BAAwC,WACxC,MAA8D,EAAK7M,MAAjE8M,EAAU,aAAE,IAAAC,iBAAAA,OAAgB,IAAG,IAAAhK,KAAI,EAAEiK,EAAkB,qBAE3DA,GACFF,EAAWE,GAGbD,EAAiB,QACnB,E,CAgDF,QAjZuB,oBAQf,YAAAjN,kBAAN,W,0IACQ,EAKFL,KAAKO,MAJPsG,EAAkB,qBAClB,IAAA2G,QAAAA,OAAO,IAAG,IAAAlK,KAAI,EACd,IAAA6C,iBAAAA,OAAgB,IAAG,IAAA7C,KAAI,EACvB2E,EAA0B,6B,8CAItBA,GAA8BA,IAA+BC,GAAA,YAC/D,GAAMrB,EAAmB,CAAErE,SAAUyF,KADnC,M,OACF,S,sDAGF9B,EAAiB,G,oBAGnBnG,KAAKU,SAAS,CAAEwM,SAAS,IAEzBM,I,YAGI,YAAA7M,qBAAN,W,wIACQ,EAIFX,KAAKO,MAHP,IAAAqG,qBAAAA,OAAoB,IAAG,IAAAtD,KAAI,EAC3B2E,EAA0B,6BAC1B,IAAA9B,iBAAAA,OAAgB,IAAG,IAAA7C,KAAI,E,iBAIvB,O,sBAAA,GAAMsD,EAAqB,CAAEpE,SAAUyF,K,cAAvC,S,+BAEA9B,EAAiB,G,+BAIrB,YAAAtF,OAAA,WAEU,IAAAqM,EAAYlN,KAAK7E,MAAK,QAK9B,OACE,gBAAC,GAAgB,CAAC8F,WAAYiM,GAI3BlN,KAAKyN,0BAGZ,EAoGQ,YAAAA,wBAAR,WACQ,MAQFzN,KAAKO,MAPPmN,EAAqB,wBACrBjB,EAAiB,oBACjBc,EAAkB,qBAClBI,EAAwB,2BACxBjB,EAAsB,yBACtB7B,EAAa,gBACbC,EAAM,SAGR,OACE,gBAAC,GAAiB,CAChBD,cAAeA,EACf0C,mBAAoBA,EACpBtQ,WAAYyQ,EACZjB,kBAAmBA,EACnBC,uBAAwBA,EACxBkB,SAAU5N,KAAKoN,0BACfxC,SAAU5K,KAAKmN,oBACfQ,yBAA0BA,EAC1B7C,OAAQA,GAGd,EA2NF,EAjZA,CAAuB,EAAA+C,WAmevB,UAAe,EAAAC,EAAA,IAAc,EAAArS,EAAA,IAhFtB,SAAwC,G,IAC7ChD,EAAe,kBACfsG,EAAa,gBAGX,EAiBEA,EAAa,KAhBb4J,EAAiB,oBACjBoF,EAAwB,2BACxB9O,EAAW,cACXiG,EAAW,cACX8I,EAAc,iBACd/I,EAAS,YAEX,EASElG,EAAa,OATLkP,EAAc,iBAAEC,EAAmB,sBAAEC,EAA6B,gCAC5E,EAQEpP,EAAa,SAPbqP,EAAmB,sBACnBpH,EAAgC,mCAChCqH,EAAsB,yBACtBC,EAAW,cACXC,EAAoB,uBACpBC,EAAyB,4BAIvB3F,EAAiBF,IACjB3J,EAAWC,IACXwG,EAAWP,IACXuJ,EAAcT,IACd3I,EAASJ,IAEf,IAAKjG,IAAaqG,EAChB,OAAO,KAIP,MAMEA,EAAmF,iBALnFqJ,EAAgB,mBAChBf,EAAwB,2BACxBgB,EAAoB,uBACpBC,EAAwB,2BAI5B,MAAO,CACLlB,sBAAuBK,IACvBc,aAAcxJ,EAAOyJ,cAAcC,qBACnCC,kBAAmB3J,EAAOE,iBAAiBC,wBAC3C6H,WAAY5U,EAAgB4U,WAC5BxC,cAAepS,EAAgBwW,sBAC/BC,gBAAiBzW,EAAgByW,gBACjCC,eAAgB1W,EAAgB2W,gBAChCC,uBAAwBhK,EAAOyJ,cAAcQ,wBAC7C1I,qBAAsBnO,EAAgBmO,qBACtCK,6BAA8BxO,EAAgBwO,6BAC9CtN,OAAOkP,aAAc,EAAdA,EAAgBlP,SAAS8L,aAAQ,EAARA,EAAU9L,OAC1C4C,UAAWkJ,aAAQ,EAARA,EAAUlJ,UACrBgT,kBAAmBlK,EAAOmK,MAAMC,mBAChC5I,mBAAoBpO,EAAgBoO,mBACpC4F,kBAAmB+B,IACnBjB,mBAAoBY,IACpBuB,gBAAgB7G,aAAc,EAAdA,EAAgBxJ,IAChC+O,oBAAqBA,IACrBpH,iCAAkCA,IAClCmB,eAAgBkG,IAChBM,qBAAoB,EACpBC,yBAAwB,EACxBe,eAAgBtK,EAAOE,iBAAiBqK,qBACxCtB,YAAaA,IACbC,qBAAsBA,IACtBE,YAAW,EACXoB,iBAAkB3B,IAClBQ,iBAAgB,EAChBzG,2BAA4B5C,EAAOE,iBAAiB0C,iCAA8B7P,EAClFuV,yBAAwB,EACxB7C,OAAQrS,EAAgBqX,eACxBC,YAAa9B,IACbvB,wBAAwB,EAAAA,GAAA,GAAuBrH,EAAOE,kBAE1D,GAE6B,CAA6CyK,K,kDCljB1E,UAAe,EAAAC,GAAA,IANoB,WAAM,OACrC,uBAAKxL,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,8PAFyB,ICqBzC,UAAe,IAAArU,OAfkD,SAAC,G,IAAEuD,EAAO,UAAO,OAC9E,gBAAC+Q,GAAA,EAAK,CACFtI,oBAAoB,mCACpBuI,KAAM,gBAAC,GAAO,MACd5U,KAAM2U,GAAA,QAEN,wBACIE,wBAAyB,CACrBC,OAAQ,cAAmBlR,IAC9B,YACS,6BAV4D,ICqBlF,UAAe,IAAAvD,OArB0D,SAAC,G,IAChE0U,GAD4E,cACnD,IAAIvT,QAC/B,SAACwT,EAAQC,GAAc,iDAAID,GAAQ,GAAGC,EAAUF,SAAO,EAAhC,GACvB,IAGJ,OAAKA,EAAQ3Q,OAKT,uBAAKzD,UAAU,kBACX,sBAAIA,UAAU,sBACToU,EAAQ/O,KAAI,SAACkP,EAAQC,GAAU,OAC5B,gBAAC,GAAe,CAAChP,IAAKgP,EAAOvR,QAASsR,EAAOE,MADjB,MANjC,IAYf,I,4BCxBe,SAASC,GACpBC,EACAC,GAEA,OAAID,EAAalR,OAAS,OAKtB,IAAAgG,MAAKkL,GAAc,SAACE,GAAgB,OAAAA,EAAYC,YAAYrR,MAAxB,OACpC,EAAAsR,GAAA,GAAuBJ,EAAcC,GAM7C,C,oDCuCA,UAAe,IAAAlV,OA3CsD,SAAC,G,IACpEmV,EAAW,cACXG,EAAI,OACJC,EAAW,cACX1I,EAAc,iBAEWnO,EAAoCyW,EAAW,gBAAtCK,EAA2BL,EAAW,uBAExE,OACE,uBAAK7U,UAAU,qBACb,gBAACmV,GAAA,EAAa,CAAC/W,QAASA,EAASiB,KAAMlB,GAAA,aAEvC,uBAAK6B,UAAU,mCACX5B,EAAQ6B,WAAa7B,EAAQ8B,WAC7B,qBAAGF,UAAU,oBACX,wBAAMA,UAAU,cAAc,UAAG5B,EAAQ6B,UAAS,MAClD,wBAAMD,UAAU,eAAe5B,EAAQ8B,YAIzCqM,aAAc,EAAdA,EAAwBlP,QACxB,qBAAG2C,UAAU,iBACX,wBAAMA,UAAU,SAAUuM,EAAuBlP,UAKrD4X,GAAe,gBAACG,GAAA,EAAyB,CAACJ,KAAMA,EAAMH,YAAaA,IAEpEK,GACC,2BACE,uBAAKlV,UAAU,+DACb,gBAACqV,GAAA,EAAoB,CACnBC,8BAA8B,EAC9BC,OAAQL,MAOtB,I,SCtDA,YACI,mBACI,YAAM,CACFlW,KAAM,0BACNiE,SAAS,EAAAuS,EAAA,KAAqB5U,UAAU,0CACxC6U,OAAO,EAAAD,EAAA,KAAqB5U,UAAU,+CACxC,K,OAEF,OAAe,EAAM8U,EAA2BvS,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,GCsBxD,UAAe,IAAA1D,OAlB0D,SAAC,GACtE,OADiF,YAM7E,uBAAKM,UAAU,uBACX,uBAAKA,UAAU,8DACX,uBAAKA,UAAU,YAEf,oCAAgB,YAAYA,UAAU,QAAQ2V,KAAK,SAC/C,gBAACzL,EAAA,EAAgB,CAACnH,GAAG,2BAT1B,IAcf,I,oECdA,UAAe,EAAA4Q,GAAA,IANsB,WAAM,OACvC,uBAAKxL,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,sDAF2B,ICsE3C,UAAe,IAAArU,OApDwD,SAAC,G,IACpEkW,EAAO,UACPC,EAAQ,WACRC,EAAU,aACVC,EAAU,aACVC,EAAM,SACNC,EAAO,UACP5W,EAAI,OAEJ,OACI,uBACIW,UAAW,IAAW,aAAc,CAChC,eAAgB+V,EAChB,eAAgBA,IAAeF,IAEnC1K,SAAS,EAAA+K,GAAA,GAAeH,GAAcC,EAAS,WAAM,OAAAA,EAAO3W,EAAP,EAAe,EAAA2H,OAEpE,uBAAKhH,UAAU,uCACX,gBAAC,GAAS,CACN0L,oBAAqB,IACjB,qBACA,yBACA,CAAE,+BAAgCoK,MAI1C,sBAAI9V,UAAU,qDAAqD4V,IAGvE,uBACI5V,UAAU,qEAAoE,YACpE,cAER6V,GAAYC,GAAcG,GAG/BF,IAAeF,GACZ,uBAAK7V,UAAU,wCACX,gBAACwL,GAAA,GAAM,iBACYqK,EACftI,KAAM/B,GAAA,QACNgC,OAAO,mBACPC,QAASjC,GAAA,cAET,gBAACtB,EAAA,EAAgB,CAACnH,GAAG,yBAM7C,I,SC7CA,uE,OACI,EAAAlE,MAAQ,CACJsX,UAAU,GAGN,EAAAC,cAAe,IAAAC,aACf,EAAAC,YAAa,IAAAD,aAkLb,EAAAE,oBAAqE,SAACC,EAAMC,GAChFD,EAAKE,iBAAiB,iBAAiB,SAAC,GAAQ,WAC7BF,GACXC,GAER,GACJ,EAEQ,EAAAE,eAAiB,WACA,EAAK1S,MAAK,UAG3B,EAAKG,SAAS,CAAE+R,UAAU,GAElC,E,CACJ,QAvM0C,oBAUtC,YAAApS,kBAAA,WACyBL,KAAKO,MAAK,UAG3BP,KAAKkT,WAEb,EAEA,YAAAC,mBAAA,SAAmBC,GACP,IAAAjB,EAAanS,KAAKO,MAAK,SAE3B4R,GAAYA,IAAaiB,EAAUjB,UACnCnS,KAAKkT,WAEb,EAEA,YAAAvS,qBAAA,WACQX,KAAKqT,aACLnR,OAAOoR,aAAatT,KAAKqT,YAEzBrT,KAAKqT,gBAAajb,EAE1B,EAEA,YAAAyI,OAAA,W,MACU,EACFb,KAAKO,MADD2R,EAAO,UAAEC,EAAQ,WAAEC,EAAU,aAAEC,EAAU,aAAEC,EAAM,SAAEiB,EAAU,aAAEhB,EAAO,UAAE5W,EAAI,OAG5E8W,EAAazS,KAAK7E,MAAK,SAE/B,OACI,sBACImB,UAAW,IAAW,gBAAiB,kCAAgC,KACnE,EAAC,yBAAkBX,MAAWA,E,IAElC6X,IAAKxT,KAAK0S,cAEV,uBAAKpW,UAAU,wBACX,gBAAC,GAAkB,CACf4V,QAASA,EACTC,SAAUA,EACVC,WAAYA,EACZC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACT5W,KAAMA,KAIb4X,GAAcd,IAAaN,GACxB,uBAAK7V,UAAU,sBAAqB,YAAW,mBAC1CiX,GAIRvT,KAAKyT,gBAGlB,EAEQ,YAAAA,cAAR,sBACU,EAAiCzT,KAAKO,MAApC7H,EAAQ,WAAEyZ,EAAQ,WAAEuB,EAAM,SAElC,OACI,gBAACC,GAAA,EAAU,MACN,SAACC,GAAY,OACV,gBAAC,GAAAC,cAAa,CACVC,eAAgB,EAAKjB,oBACrBkB,WAAW,wBACXC,OAAQJ,EACRK,MAAOL,EACPM,GAAI/B,EACJgC,cAAY,EACZC,SAAW,EAAKnB,eAChBoB,QAAU,CAAC,EACXC,eAAa,GAEb,mCACeZ,EACXpX,UAAU,wBACVkX,IAAK,EAAKZ,YAETT,EAAWzZ,EAAW,MAjBrB,GAuB1B,EAEQ,YAAAwa,UAAR,sBACUqB,EC3HFrS,OAAOsS,WAAW,sBAAe,KAAgB,QAE5ChX,QDyHsB,EAAIwC,KAAKyU,qBAExCzU,KAAKU,SAAS,CAAE+R,UAAU,IAE1BzS,KAAKqT,WAAanR,OAAOzB,YAAW,WAChC,IAAMiU,EAAQ,EAAKC,gBACbtO,EAAW,EAAKuO,oBAChB,EAA8B,EAAKrU,MAAjC5E,EAAI,OAAE,IAAAkZ,WAAAA,OAAU,IAAG,IAAAvR,KAAI,EAE3BoR,GACAA,EAAMI,aAGO1c,IAAbiO,GAA2B0O,MAAM1O,IACjCnE,OAAO8S,SAAS,EAAG3O,GAGvBwO,EAAWlZ,GAEX,EAAK0X,gBAAajb,CACtB,GAAGmc,EACP,EAEQ,YAAAI,cAAR,WACI,IAAM/R,EAAY5C,KAAK0S,aAAauC,QAEpC,GAAKrS,EAML,OAFcA,EAAUyB,cAA2B,iCAEnCjM,CACpB,EAEQ,YAAAwc,kBAAR,WACI,IAAMhS,EAAY5C,KAAKkV,qBACf9C,EAAepS,KAAKO,MAAK,WAEjC,GAAKqC,GAAaV,SAAWA,OAAOqE,IAApC,CAIA,IAAM4O,EAAY/C,EAAa,EAAIlQ,OAAOkT,YAAc,EAIxD,OAFIxS,EAAUyS,wBAAwB9O,KAAOrE,OAAOoT,SAAWpT,OAAOqT,aAE7CJ,C,CAC7B,EAKQ,YAAAD,mBAAR,WAGI,IAFA,IAAItS,EAAgC5C,KAAK0S,aAAauC,QAE/CrS,GAAaA,EAAU4S,eAAe,CACzC,GAAI5S,EAAU4S,cAAcC,UAAUC,SAAS,iBAC3C,OAAO9S,EAAU4S,cAGrB5S,EAAYA,EAAU4S,a,CAG1B,OAAOxV,KAAK0S,aAAauC,QAAUjV,KAAK0S,aAAauC,aAAU7c,CACnE,EAEQ,YAAAqc,mBAAR,WACI,YAA0Brc,IAAtB4H,KAAK2V,eAKT3V,KAAK2V,aAKG,IAJJC,WACI5V,KAAK4S,WAAWqC,QACVY,iBAAiB7V,KAAK4S,WAAWqC,SAASa,mBAC1C,OARH9V,KAAK2V,YAYpB,EAiBJ,EAvMA,CAA0C,EAAA9H,WE3B1C,IAAKkI,IAAL,SAAKA,GACD,oBACA,sBACA,oBACA,qBACH,CALD,CAAKA,KAAAA,GAAgB,KAOrB,Y,wCCeA,SApB6B,SAACzE,EAAajM,GACvC,QAAKiM,MAIDA,EAAKJ,UAAU8E,cAAcjQ,MAAK,SAACkQ,GAAa,OAAAA,EAASC,kBAAT,QAKhD7Q,GACAA,EAAOE,iBAAiB4Q,SAAS,8CACjC7E,EAAKJ,UAAUkF,cAER9E,EAAKJ,UAAUkF,YAAYrW,OAAS,EAInD,ECJA,IAAMsW,IAAwB,KAAAC,iBAC5B,SAAC,GAAgC,OAA1B,OAA+BrX,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BiG,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+ByD,mBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B1D,WAAL,IACjC,SAACjG,EAAUyG,EAAUoD,EAAgBxD,G,MAC7BkR,KAAe9Q,GAAYA,EAAS9L,OAAWkP,GAAkBA,EAAelP,OAChF6c,KACJxX,IAAYA,EAASE,WACjBF,EAASE,SAAS6G,MAAK,SAAC5G,GAAY,kBAA0BA,EAAQC,aAAe,CAAjD,IAEpCsG,KAAaD,IAAYA,EAASC,SAClC0M,EAAamE,GAAYC,EACzBnE,EAAaD,IAAeoE,GAAiB9Q,EAYnD,OALG8Q,IACDnR,aAAM,EAANA,EAAQE,iBAAiB0C,8BAA+BC,GAAA,aACxDqO,GACA7Q,EAGO,CACL/J,KAAM,YACNwW,UAAU,EACVC,WAA6D,QAAjD,OAAwCha,KAAxCqN,aAAQ,EAARA,EAAUgR,kCAAuC,QAAIrE,EACjEC,WAAU,EACVqE,YAAY,GAIT,CACL/a,KAAM,YACNwW,UAAU,EACVC,WAAU,EACVC,WAAU,EACVqE,YAAY,EAEhB,IAGIC,IAAuB,KAAAL,iBAC3B,SAAC,GAAgC,OAA1B,OAA+BrX,aAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+B0J,mBAAL,IACjC,SAAC,G,IAAExH,EAAI,OACC0H,EAAiB1H,EAAKwH,oBAE5B,OAAOE,EAAiB1H,EAAKtF,wBAAwBgN,EAAe9N,aAAe,IACrF,IACA,SAACiE,EAAU6J,EAAgB+N,GACzB,IAAMC,IAAahO,IACf,EAAA3M,GAAA,GAAe2M,EAAgB+N,GAE7BJ,KACJxX,IAAYA,EAASE,WACjBF,EAASE,SAAS6G,MAAK,SAAC5G,GAAY,kBAA0BA,EAAQC,aAAe,CAAjD,IAEpCgT,EAAayE,GAAcL,EAMjC,MAJExX,IAAYA,EAASE,WACjBF,EAASE,SAAS6G,MAAK,SAAC5G,GAAY,MAAuB,cAAvBA,EAAQC,UAAR,IAGpB,CACpB,IAAM0X,EAA6BF,EAAqBza,QACtD,SAAC,GAAoC,OAA5B,QAA4B,IAEjC4a,EAAkBD,EAA2B/W,OAAS,EACtDiX,GACJnO,IAAkBkO,IACd,EAAA7a,GAAA,GAAe2M,EAAgBiO,GAGrC,MAAO,CACLnb,KAAM,WACNwW,UAAU,EACVC,WAAY4E,EACZ3E,WAAY2E,GAAkCD,EAC9CL,YAAY,E,CAIhB,MAAO,CACL/a,KAAM,WACNwW,UAAU,EACVC,WAAU,EACVC,WAAYD,IAAeoE,EAC3BE,YAAY,EAEhB,IAGIO,IAAwB,KAAAX,iBAC5B,SAAC,GAAgC,OAA1B,OAA+BY,oBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BC,iBAAL,IACjC,SAAC,GAAgC,OAA1B,OAA+BC,SAAL,IACjC,SAAC,G,IAAEjW,EAAI,OACCkW,EAAkBlW,EAAK+V,qBAE7B,OAAOG,EACHlW,EAAKrF,yBAAyBub,EAAgBtc,aAC9C,IACN,IACA,SAAC,GAAgC,OAA1B,OAA+BkK,WAAL,IACjC,SAACoS,EAAiBpG,EAAcK,EAAMgG,EAAuBjS,GAC3D,IAAMwR,IAAaQ,IACf,EAAAnb,GAAA,GAAemb,EAAiBC,GAE9BC,IAAatG,IAAe,EAAAuG,GAAA,GAA2BvG,GACvDwG,GACJnG,IAAQL,IAAe,EAAAI,GAAA,GAAuBJ,EAAcK,EAAKJ,WAC7DkB,EAAayE,GAAcU,IAAeE,EAC1Cf,EAAa,GAAqBpF,EAAMjM,GAE9C,MAAO,CACL1J,KAAM,YACNwW,UAAU,EACVC,WAAU,EACVC,WAAYD,GAAcsE,EAC1BA,WAAU,EAEd,IAGIgB,IAAuB,KAAApB,iBAC3B,SAAC,GAAgC,OAA1B,OAA+BqB,UAAL,IACjC,SAAC9S,GACC,IAAMuN,IAAavN,GAAQA,EAAMuN,WAEjC,MAAO,CACLzW,KAAM,WACNwW,UAAU,EACVC,WAAU,EACVC,WAAYD,EACZsE,YAAY,EAEhB,IA8BF,UA3BgC,KAAAJ,gBAC9BD,GACAY,GACAN,GACAe,IACA,SAACE,EAAcC,EAAcC,EAAaC,GACxC,IAAMC,GAAQ,IAAAC,SAAQ,CAACL,EAAcC,EAAcC,EAAaC,IAE1DG,EACJF,EAAMnd,MAAK,SAACtB,GAAS,OAACA,EAAK6Y,YAAc7Y,EAAKmd,UAAzB,KAAwCsB,EAAMA,EAAMjY,OAAS,GAEpF,OAAOiY,EAAMrW,KAAI,SAACpI,EAAMuX,GACtB,IAAMqH,EAAqBH,EACxBI,MAAM,EAAGtH,GACTpI,OAAM,SAAC2P,GAAa,OAAAA,EAASjG,aAAeiG,EAAS3B,UAAjC,IAEvB,OAAO,gCACFnd,GAAI,CACP4Y,SAAU+F,EAAkBvc,OAASpC,EAAKoC,KAC1C+X,QAAQ,EAERrB,WAAY8F,GAAsB5e,EAAK8Y,YAE3C,GACF,ICtIF,IAAMiG,IAAU,IAAAC,OAAK,WACjB,SAAAC,EAAA,IACI,WACI,kFAFR,IASEC,IAAc,IAAAF,OAAK,WACrB,SAAAC,EAAA,IACI,WACI,gEAFR,IASEE,IAAoB,IAAAH,OAAK,WAC3B,SAAAC,EAAA,IACI,WACI,gEAFR,IASEG,IAAU,IAAAJ,OAAK,WACjB,SAAAC,EAAA,IACI,WACI,gEAFR,IASEI,IAAW,IAAAL,OAAK,WAClB,SAAAC,EAAA,IACI,WACI,kFAFR,IAwDJ,0E,OAII,EAAArd,MAAuB,CACnB0d,yBAAyB,EACzBnP,aAAa,EACboP,eAAe,EACfC,qBAAqB,EACrBvB,4BAA4B,EAC5BwB,qBAAqB,EACrBC,cAAc,GA2YV,EAAAC,0BAAwC,WACpC,IAAAH,EAAwB,EAAK5d,MAAK,oBAE1C,EAAKuF,SAAS,CAAEqY,qBAAsBA,GAC1C,EAEQ,EAAAI,6BAA4E,SAChFtV,GAEM,MAA8B,EAAKtD,MAAjCyX,EAAK,QAAExf,EAAgB,mBACzB4gB,GAAkB,IAAAC,WAAUrB,EAAO,CAAE7F,UAAU,IAC/CmH,EAAaF,GAAmB,GAAKpB,EAAMoB,GAEjD,GAAKE,EAAL,CAIA,IAAMC,EAAevB,EAAMwB,KAAKzb,IAAIqb,EAAkB,EAAG,IAErDG,GACA/gB,EAAiBW,mBAAmBogB,EAAa5d,MAGrD,EAAK8d,eAAeH,EAAW3d,KAAMkI,E,CACzC,EAEQ,EAAAf,4BAA0D,SAACC,GACzD,MAA8B,EAAKxC,MAAjCyX,EAAK,QAAkB,mBAEd7e,mBAAmB6e,EAAMA,EAAMjY,OAAS,GAAGpE,MAExD,EAAK+d,mBACL,EAAKA,kBAAkBC,eAG3B,EAAKjZ,SAAS,CAAEoY,eAAe,IAAQ,WACnChW,EAA4BC,EAChC,GACJ,EAEQ,EAAAkD,qBAAyD,SAACrB,GACtD,IAAAgV,EAAoB,EAAKrZ,MAAK,gBAEtC,OAAOqZ,EAAgBta,YAAW,MAA3Bsa,EAA+BhV,EAC1C,EAEQ,EAAAiV,uBAA4D,WAChE,EAAKJ,eAAe,YACxB,EAEQ,EAAAK,0BAAgE,SAAC,G,IAAE3Y,EAAI,OACrE,EACF,EAAKhG,MAD2B4e,EAA8B,6BAAEC,EAAc,iBAG1EhC,EAAU,EAAKzX,MAAK,MAEtB0Z,GAAgC,EAAAzC,GAAA,GAClCrW,EAAKgW,mBAAqB,IAI1B4C,IACCE,IACD,IAAAZ,WAAUrB,EAAO,CAAErc,KAAM,eACrB,IAAA0d,WAAUrB,EAAO,CAAErc,KAAMqe,MAE7B,EAAKP,eAAe,aACpB,EAAK/Y,SAAS,CAAE0F,MAAO,IAAI,MAG/B,EAAK1F,SAAS,CAAE8W,2BAA4ByC,GAChD,EAEQ,EAAAC,sBAAoC,WACxC,EAAKxZ,SAAS,CAAE0F,WAAOhO,GAC3B,EAEQ,EAAA+hB,eAAmD,SAACxe,GAC3B,EAAK4E,MAAK,iBAEtBjH,gBAAgBqC,EACrC,EAEQ,EAAAye,qBAA+C,SAAChU,GACpD,EAAKiU,YAAYjU,GAIjB,EAAK1F,SAAS,CAAE0F,MAAK,GACzB,EAEQ,EAAAiU,YAAsC,SAACjU,GACnB,EAAK7F,MAAK,YAEtB+Z,IAAIlU,GAEZ,EAAKsT,mBACL,EAAKA,kBAAkBa,UAAUnU,EAEzC,EAEQ,EAAAoU,eAAmD,SAAC7e,GACxD,EAAK8d,eAAe9d,EACxB,EAEQ,EAAA8e,YAA0B,WAC9B,EAAKtB,6BAA6B,CAAEuB,WAAW,GACnD,EAEQ,EAAAC,6BAA8D,SAACC,GACnE,EAAKla,SAAS,CAAEuY,aAAc2B,GAClC,EAEQ,EAAAC,cAAuD,SAAC,G,IAAEnR,EAAW,cACnE,EAAiE,EAAKnJ,MAApEO,EAAQ,WAAEga,EAAO,UAAEC,EAAuB,0BAAEpL,EAAc,iBAElE,OAAIoL,GACI7Y,OAAOqE,IACCrE,OAAOqE,IAAIrD,SAAS8X,KAAOF,GAIvC,EAAKpB,mBACL,EAAKA,kBAAkBuB,gBAGvBtL,GACA,EAAKuL,oBAAoB,SAGzBxR,IACA,EAAKhJ,SAAS,CAAEgJ,aAAa,MAExB,EAAAyR,EAAA,MACGjZ,OAAOqE,KACArE,OAAOqE,IAAIrD,SAASkY,OAAOta,QAK9C,EAAK2Y,eAAe,aACxB,EAEQ,EAAA4B,uBAAqE,SACzExC,GAEA,EAAKnY,SAAS,CAAEmY,wBAAuB,IAEnCA,EACA,EAAKM,+BAEL,EAAKM,eAAe,WAE5B,EAEQ,EAAA6B,qBAAmC,WACvC,EAAKJ,oBAAoB,QAC7B,EAEQ,EAAAK,4BAA0C,WAC9C,EAAKL,oBAAoB,gBAC7B,EAEQ,EAAAA,oBAA4D,SAACM,GAC3D,MAAmD,EAAKjb,MAAtDkb,EAA0B,6BAAEC,EAAgB,mBAGhDF,IAAqB,iBACnBC,KAA8B,EAAAN,EAAA,MASpC,EAAK1B,eAAe,aACpB,EAAK/Y,SAAS,CAAE8a,iBAAgB,KARxBtZ,OAAOqE,KACPrE,OAAOqE,IAAIrD,SAASE,QAAQsY,EAQxC,EAEQ,EAAAC,iBAA+B,WACN,EAAKpb,MAAK,iBAEtBjG,cACrB,E,CACJ,QAhlBuB,oBAiBnB,YAAAqG,qBAAA,WACQX,KAAK4b,8BACL5b,KAAK4b,8BACL5b,KAAK4b,iCAA8BxjB,GAGvC8J,OAAO2Z,oBAAoB,eAAgB7b,KAAK2b,kBAChD3b,KAAK2b,kBACT,EAEM,YAAAtb,kBAAN,W,8LACU,EAQFL,KAAKO,MAPLub,EAAU,aACVzZ,EAAW,cACX0Z,EAAuB,0BACvBC,EAAkB,qBAClBC,EAAY,eACZC,EAAuB,0BACvB1jB,EAAgB,mB,iBAIC,O,sBAAA,GAAMyjB,EAAaH,EAAY,CAC5CK,OAAQ,CACJC,QAAS,CACL,6CACA,iD,cAJJjb,EAAS,SAOf,KAGI,EAAkDA,EAAK8D,aAAe,CAAC,EAArE,IAAAuK,MAAS,QAAT,MAA2B,CAAC,EAAC,GAApB6M,SAAAA,OAAQ,IAAG,KAAE,EAASnR,EAAY,eAC7CoR,EAAqBnb,EAAKob,iBAAiB,UAAY,GAE5Dra,OAAe+I,eAAiB,CAAEC,aAAY,GAE3CoR,EAAmBvc,SACXnC,EAAaoC,KAAKO,MAAK,SAE/BP,KAAKU,SAAS,CACV0F,MAAO,IAAI1G,EAAA,EAAY,CACnBqS,MACIuK,EAAmB,GAAGvK,OACtBnU,EAASV,UAAU,wBACvBqC,QAAS+c,EAAmB,GAAG/c,QAC/B4B,KAAM,CAAC,EACP7F,KAAM,eAKZkhB,EAAYT,EAAwB,CAAEU,aAAcJ,IAE1Drc,KAAK4b,4BAA8BM,EAC/Blc,KAAK8Z,2BAET9Z,KAAK0Z,kBAAoB8C,EACzBA,EAAUE,eAAc,SAACC,GAAW,OAAAX,EAAmBY,OAAOD,EAA1B,IACpCH,EAAUK,gBAAgB,CAAEC,UAAWza,IACvCma,EAAUO,aAEVvkB,EAAiBS,gBAEXgY,EAAe9P,EAAKgW,kBACpB7F,EAAOnQ,EAAKiW,UAEZ4F,EACc,QAAhB,EAAA7b,EAAK8D,mBAAW,eAAEM,iBAAiByX,wBACjCC,EACqE,QAAvE,EAAgB,QAAhB,EAAA9b,EAAK8D,mBAAW,eAAEM,iBAAiB0X,4CAAoC,SACrEC,EACqF,QAAzF,EAAgB,QAAhB,EAAA/b,EAAK8D,mBAAW,eAAEM,iBAAiB4Q,SAAS,qDAA6C,SAErFgH,EACqD,QAAvD,EAAgB,QAAhB,EAAAhc,EAAK8D,mBAAW,eAAE6J,cAAcQ,+BAAuB,SAErDyJ,IACAzH,KACAL,GACF+L,GACAhM,GAAqBC,EAAcK,EAAKJ,WAE5ClR,KAAKU,SAAS,CACVmY,wBAAyBoE,EACzBjE,oBAAqBkE,EACrBjE,aAAckE,IAGdpE,EACA/Y,KAAKU,SAAS,CAAEqY,oBAAmB,GAAI/Y,KAAKya,aAE5Cza,KAAKya,cAGTvY,OAAO8Q,iBAAiB,eAAgBhT,KAAK2b,kB,0CAExB5U,OACjB/G,KAAKoa,qBAAqB,G,+BAKtC,YAAAvZ,OAAA,WACU,MAAiCb,KAAK7E,MAApCiL,EAAK,QAAE4S,EAAmB,sBAC9BoE,EAAa,KAgBjB,OAdIhX,IAEIgX,GADA,EAAAC,EAAA,GAAcjX,GAEV,gBAACkX,EAAA,EAAU,CACPlX,MAAOA,EACPmX,QAASvd,KAAKka,sBACdnI,MAAO3L,EAAM2L,QAIR,gBAACuL,EAAA,EAAU,CAAClX,MAAOA,EAAOmX,QAASvd,KAAKka,yBAKzD,uBAAK5d,UAAW,IAAW,CAAE,eAAe,EAAA6e,EAAA,KAAc,+BAAgCnC,KACtF,uBAAK1c,UAAU,2CACV0D,KAAKyT,iBAET2J,EAGb,EAEQ,YAAA3J,cAAR,sBACU,EAA+EzT,KAAKO,MAAlFid,EAAS,YAAE1c,EAAQ,WAAE,IAAA2c,WAAAA,OAAU,IAAG,KAAE,EAAEzF,EAAK,QAAEzV,EAA2B,8BAE1E,EAAkEvC,KAAK7E,MAArE6e,EAAc,iBAAE0D,EAAe,kBAAEhU,EAAW,cAAEoP,EAAa,gBAEnE,GAAIpP,EACA,OAAO,gBAAC,EAAgB,CAAC5I,SAAUA,EAAUR,aAAc,MAG/D,IAAM4F,EAAsB8T,EACtBA,IAAmB,WACnB0D,IAAoB,WAE1B,OACI,gBAAC3c,EAAA,EAAc,CAACC,wBAAsB,EAACC,UAAW6X,GAC9C,uBAAKxc,UAAU,eACX,gBAAC,GAAmB,CAAC2E,WAAYsB,GAA+Bib,IAEhE,gBAAC,GAAmB,CAACC,WAAYA,IAEhClb,GACG,gBAAC,GAAuB,CACpB0D,qBAAsBjG,KAAKiG,qBAC3BC,oBAAqBA,EACrBC,iBAAkBnG,KAAKoa,uBAI/B,sBAAI9d,UAAU,kBACT0b,EACI7b,QAAO,SAAC5C,GAAS,OAAAA,EAAKmd,UAAL,IACjB/U,KAAI,SAACpI,GACF,SAAKokB,YAAW,gCACTpkB,GAAI,CACP4Y,SAAU6H,EACJA,IAAmBzgB,EAAKoC,KACxB+hB,IAAoBnkB,EAAKoC,KAC/B+X,OAAQ8J,IALZ,MAWfxd,KAAK4d,oBAGlB,EAEQ,YAAAD,WAAR,SAAmBpkB,GACf,OAAQA,EAAKoC,MACT,KAAK,YACD,OAAOqE,KAAK6d,mBAAmBtkB,GAEnC,KAAK,YACD,OAAOyG,KAAK8d,mBAAmBvkB,GAEnC,KAAK,WACD,OAAOyG,KAAK+d,kBAAkBxkB,GAElC,KAAK,WACD,OAAOyG,KAAKge,kBAAkBzkB,GAElC,QACI,OAAO,KAEnB,EAEQ,YAAAskB,mBAAR,SAA2BtkB,GACjB,MAAkDyG,KAAKO,MAArDoP,EAAc,iBAAEpN,EAA2B,8BAC7C,EAGFvC,KAAK7E,MAFL,IAAAqgB,iBAAAA,OAAgB,IAAG,EAAA7L,EAAiB,QAAyB,QAAsB,EACnFsJ,EAAY,eAGhB,OACI,gBAAC,IAAY,iBACL1f,EAAI,CACR2Y,QAAS,gBAAC1L,EAAA,EAAgB,CAACnH,GAAG,8BAC9ByC,IAAKvI,EAAKoC,KACV2W,OAAQtS,KAAKwa,eACb3F,WAAY7U,KAAKma,eACjB5G,WAAY,gBAAC,GAAkB,MAC/BhB,QACI,gBAAC,GAAY,CACT/I,UAAWxJ,KAAK6a,cAChBpR,eAAgBzJ,KAAKqa,gBAI7B,gBAAC,GAAQ,CACLpU,qBAAsBjG,KAAKiG,qBAC3BkV,YAAY,EAAAA,EAAA,KACZlC,aAAcA,EACdgF,qBAAwB1b,EACxB2b,iBAAkBle,KAAKmZ,6BACvB7L,iBAAkBtN,KAAKkb,oBACvBiD,kBAAmBne,KAAKmZ,6BACxBiF,uBAAwBpe,KAAKqa,YAC7B7M,QAASxN,KAAKya,YACd4D,SAAUre,KAAKmZ,6BACfmF,cAAete,KAAKqa,YACpBkE,wBAAyBve,KAAK2a,6BAC9BxU,iBAAkBnG,KAAKoa,qBACvB7gB,KAAMA,EACNilB,SAAUhD,IAI1B,EAEQ,YAAAsC,mBAAR,SAA2BvkB,GACjB,MAA8CyG,KAAKO,MAAjDke,EAAc,iBAAEnN,EAAI,OAAE,IAAAL,aAAAA,OAAY,IAAG,KAAE,EAEzC,EAAmDjR,KAAK7E,MAAtD0d,EAAuB,0BAAEE,EAAmB,sBAEpD,GAAKzH,EAIL,OACI,gBAAC,IAAY,iBACL/X,EAAI,CACR2Y,QAAS,gBAAC1L,EAAA,EAAgB,CAACnH,GAAG,8BAC9ByC,IAAKvI,EAAKoC,KACV2W,OAAQtS,KAAKwa,eACb3F,WAAY7U,KAAKma,eACjB5H,QAAStB,EAAatP,KAAI,SAACwP,GAAgB,OACvC,uBAAK7U,UAAU,6BAA6BwF,IAAKqP,EAAY9R,IACzD,gBAAC,GAAiB,CACdiS,KAAMA,EACNC,YAAaN,EAAalR,OAAS,EACnCoR,YAAaA,IALkB,MAU3C,gBAACuN,GAAA,EAAa,CAACC,gBAAiB,gBAACC,EAAA,EAAmB,OAChD,gBAAChG,GAAQ,CACLiG,eAAgBJ,EAChB5F,wBAAyBA,EACzBE,oBAAqBA,EACrB+F,iBAAkB9e,KAAKqb,uBACvB0D,gBAAiB/e,KAAKub,4BACtB/N,QAASxN,KAAKya,YACd4D,SAAUre,KAAKsb,qBACf0D,sBAAuBhf,KAAKkZ,0BAC5B/S,iBAAkBnG,KAAKoa,qBACvB7gB,KAAMA,KAK1B,EAEQ,YAAAwkB,kBAAR,SAA0BxkB,GACd,IAAAsP,EAAmB7I,KAAKO,MAAK,eAErC,OACI,gBAAC,IAAY,iBACLhH,EAAI,CACR2Y,QAAS,gBAAC1L,EAAA,EAAgB,CAACnH,GAAG,4BAC9ByC,IAAKvI,EAAKoC,KACV2W,OAAQtS,KAAKwa,eACb3F,WAAY7U,KAAKma,eACjB5H,QAAS1J,GAAkB,gBAACoW,EAAA,EAAoB,CAACvkB,QAASmO,MAE1D,gBAAC6V,GAAA,EAAa,CAACC,gBAAiB,gBAACC,EAAA,EAAmB,OAChD,gBAACtG,GAAO,CACJwG,iBAAkB9e,KAAKmZ,6BACvB3L,QAASxN,KAAKya,YACdtU,iBAAkBnG,KAAKoa,wBAK3C,EAEQ,YAAA4D,kBAAR,SAA0BzkB,GAChB,MAAsCyG,KAAKO,MAAzC0Q,EAAY,eAAEK,EAAI,OAAE4N,EAAW,cAEvC,OACI,gBAAC,IAAY,iBACL3lB,EAAI,CACR2Y,QAAS,gBAAC1L,EAAA,EAAgB,CAACnH,GAAG,4BAC9ByC,IAAKvI,EAAKoC,KACV2W,OAAQtS,KAAKwa,eACb3F,WAAY7U,KAAKma,iBAEjB,gBAACuE,GAAA,EAAa,CAACC,gBAAiB,gBAACQ,EAAA,EAAiB,OAC9C,gBAACxG,GAAO,CACJ1S,qBAAsBjG,KAAKiG,qBAC3BiZ,YAAaA,EACb/D,YAAY,EAAAA,EAAA,KACZnK,wBACIM,IAAQL,IACFD,GAAqBC,EAAcK,EAAKJ,WAGlDkO,mBAAoBpf,KAAK6Z,uBACzBwF,WAAYrf,KAAK8C,4BACjB0K,QAASxN,KAAKya,YACd7P,SAAU5K,KAAK8C,4BACfwc,cAAetf,KAAKqa,YACpBlU,iBAAkBnG,KAAKoa,wBAK3C,EAEQ,YAAAwD,kBAAR,WACI,OACI,gBAACjK,GAAA,EAAU,MACN,SAACC,GACE,OAAIA,EAEI,gBAAC8K,GAAA,EAAa,KACV,gBAAChG,GAAiB,OAM1B,yBAAOpc,UAAU,eACb,gBAACoiB,GAAA,EAAa,KACV,gBAACjG,GAAW,OAI5B,GAGZ,EAEQ,YAAAgB,eAAR,SAAuB9d,EAAwBkI,GACrC,MAA+B7D,KAAKO,MAAlC8M,EAAU,aAAEjH,EAAK,QAAE4R,EAAK,QACxBgC,EAAmBha,KAAK7E,MAAK,eAC/B5B,GAAO,IAAAsB,MAAKmd,EAAO,CAAErc,KAAI,IAE1BpC,GAIDygB,IAAmBzgB,EAAKoC,OAIxBkI,GAAWA,EAAQ6W,UACnB1a,KAAKU,SAAS,CAAEgd,gBAAiBnkB,EAAKoC,OAEtCqE,KAAKU,SAAS,CAAEsZ,eAAgBzgB,EAAKoC,OAGrCyK,GACAiH,EAAWjH,GAEnB,EA4LJ,EAhlBA,CAAuB,EAAAyH,WAklBvB,UAAe,EAAAC,EAAA,IAAc,EAAArD,EAAA,IAAa,EAAAhP,EAAA,IC1tB3B,SAA4B,G,IACvChD,EAAe,kBACfsG,EAAa,gBAELoC,EAA2BpC,EAAa,KAAlCwgB,EAAqBxgB,EAAa,OAA1BygB,EAAazgB,EAAa,SACxC,GAA6BoC,EAAKlC,eAAiB,CAAC,GAAC,WAArDwe,OAAU,IAAG,OAAW,EAC1BgC,EAAmBF,EAAOG,sBAC1B,EAeFve,EAAK8D,aAAe,CAAC,EAdrB,IAAAM,iBAAA,aAOI,CAAC,EAAC,EANF,IAAAqK,qBAAsBD,OAAc,IAAG,GAAK,EAC5C,IAAAwG,SAAAA,OAAQ,IAAG,GAAC,EAAC,EACb,IAAAwJ,+BAAAA,OAA8B,IAAG,GAC7BC,oBAAoB,EACpBC,sBAAsB,GACzB,EAEL,IAAArQ,MAAA,aAII,CAAC,EAAC,EAHF,IAAAsQ,UAAWhf,OAAQ,IAAG,KAAE,EACxB,IAAAif,kBAAmBrE,OAAgB,IAAG,KAAE,EACxC,IAAAsE,SAAUlF,OAAO,IAAG,KAAE,EAE1B,IAAAmF,gBAAmB,QAAnB,MAA4E,CAAC,EAAC,GAA3DC,oBAAqBnF,OAAuB,IAAG,GAAK,EAGrEoF,GAAkC,KAAA7J,iBACpC,SAAC,GAA6D,OAA/B,2BAA+B,IAC9D,SAACtd,GAAc,gBAAConB,GACZ,OAAOpnB,EAAUonB,GAAY,SAAC,GAAkC,OAAAjJ,EAAT,yBAAS,GACpE,CAFe,IAKbkJ,EAAyB1a,QAAQga,EAA+BC,oBAEtE,MAAO,CACH/W,eAAgB1H,EAAKwH,oBACrB2I,KAAMnQ,EAAKiW,UACX/J,WAAY5U,EAAgB4U,WAC5B4D,aAAc9P,EAAKgW,kBACnBsH,eAAgBgB,GAA8C,iBAA1BA,EAAiB9jB,KACrDgU,eAAc,EACd2Q,kBAAmBd,EAASc,oBAC5B9C,UAAWgC,EAAShC,YACpBzC,wBAAuB,EACvBxY,4BAA6B8d,EAC7BpE,aAAcxjB,EAAgBwjB,aAC9Bnb,SAAQ,EACRga,QAAO,EACPY,iBAAgB,EAChBD,2BAA4BtF,EAAS,8CACrCsH,WAAU,EACVvB,wBAAyBiE,EAAgC,CACrD1nB,gBAAe,EACfsG,cAAa,IAEjBiZ,MAAO7W,EAAKlC,cAAgB,GAAwBF,GAAiB,KAE7E,GDkqB0C,CAAiCwhB,M,SE3sB3E,YASI,WAAYhgB,GAAZ,I5CzBkD3C,E4CyBlD,EACI,YAAM2C,IAAM,K,OATR,EAAA9H,iBAAkB,IAAA+nB,uBAAsB,CAC5CC,QAAQ,EAAA3O,EAAA,KAAqB4O,YAC7BC,oBAAoB,IAEhB,EAAA3E,oBAAqB,EAAA4E,EAAA,KACrB,EAAAhH,iB5CtB0Chc,G4CsBM,EAAAkU,EAAA,M5CrBjD,EAAAqJ,EAAA,KACD,IAAI,EAAwBhb,EAAqBvC,GACjD,IAAI,G4CyBN,EAAKshB,aAAc,EAAA2B,EAAA,GACf,CAAEC,OAAQvgB,EAAMwgB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAY1gB,EAAM0gB,a,CAG9B,CA2BJ,OA9CyC,oBAqBrC,YAAA5gB,kBAAA,WACY,IAAAgC,EAAgBrC,KAAKO,MAAK,YAElC,kBAAyB,WAAI8B,GACjC,EAEA,YAAAxB,OAAA,WACI,OACI,gBAACqgB,EAAA,EAAa,CAACC,OAASnhB,KAAKkf,aACzB,gBAACkC,EAAA,EAAc,CAAC3oB,gBAAkBuH,KAAKvH,iBACnC,gBAAC4oB,EAAA,EAAgB,CAAC5oB,gBAAkBuH,KAAKvH,iBACrC,gBAAC6oB,EAAA,EAAiB,CAAC7oB,gBAAkBuH,KAAKvH,iBACtC,gBAAC,IAAQ,iBACDuH,KAAKO,MAAK,CACdwb,wBAAyB,EAAAwF,gCACzBvF,mBAAoBhc,KAAKgc,mBACzBpC,gBAAiB5Z,KAAK4Z,gBACtBsF,YAAalf,KAAKkf,kBAO9C,EACJ,EA9CA,CAAyC,EAAArR,U,uCCVrC2T,EACA3d,E,iCCLJ,SDII2d,ECRyCC,EAAA,EDSzC5d,ECT0D,CAC1D/E,kBAAmB,gBDUZ,SACH4iB,GAIA,OAAO,SACHC,GAEA,IAAMC,GAAqD,IAAA5lB,OAAK,SAACuE,GAAU,OACvE,gBAACohB,GAAiB,iBAAKphB,GADgD,IAIrEshB,EAA0E,SAC5EthB,GAEA,IAAM7E,GAAU,IAAA+H,YAAW+d,GAErBM,GAAa,IAAAlpB,UACf,WACI,OA/BxB,SACIkpB,GAIA,OAA6B,IAAtBA,EAAW/hB,MACtB,CAyBwBgiB,CAAoBL,GACdA,IACAA,CAFN,GAGJ,IAGEM,EAActmB,EACdomB,EACIpmB,EACA6E,GAEJ7E,EAEN,IAAKsmB,EACD,OAAO,KAGX,IAAMC,GAAc,gCAAKD,GAAgBzhB,GAEzC,OAAO,gBAACqhB,GAAuB,iBAAKK,GACxC,EAQA,OANIpe,GAAWA,EAAQ/E,mBAAqB6iB,IACxCE,EAAmBK,YAAc,UAAGre,EAAQ/E,kBAAiB,YACzD6iB,EAAkBO,aAAeP,EAAkBrmB,KAAI,MAIxDumB,CACX,CACJ,E,kBEjEW,SAASrP,EAGtBhL,GACE,OAAO,SAACE,GACJA,EAAM8K,iBAEFhL,GACAA,EAAGE,EAEX,CACJ,C,0ECbA,YAOI,WAAY,G,IACR,IAAAvG,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAA5B,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAAwS,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAzW,KAAAA,OAAI,IAAG,KAAE,EAJb,EAWI,cAAO,K,MAEgC,mBAA5ByL,MAAMob,kBACbpb,MAAMob,kBAAkB,EAAMziB,GAE9B,EAAK0iB,OAAQ,IAAIrb,OAAQqb,MAI7B,EAAKjhB,KAAOA,EACZ,EAAK5B,QAAUA,EACf,EAAKjE,KAAOA,EACZ,EAAKyW,MAAQA,EACb,EAAKpW,KAAO,S,CAChB,CAkBJ,OAlDyC,oBAqC3B,YAAA0mB,iBAAV,SAA2B,G,IACvB/mB,EAAI,OACJgnB,EAAY,eACZC,EAAY,eAMZviB,KAAK1E,KAAO0E,KAAK1E,MAAQA,EACzB0E,KAAKT,QAAUS,KAAKT,SAAW+iB,EAC/BtiB,KAAK+R,MAAQ/R,KAAK+R,OAASwQ,CAC/B,EACJ,EAlDA,CAAyCxb,M,gDC+CzC,QAhCA,uE,OAKI,EAAA5L,MAA4B,CAAC,E,CAyBjC,QA9B4B,oBACjB,EAAAqnB,yBAAP,SAAgCpc,GAC5B,MAAO,CAAEA,MAAK,EAClB,EAIA,YAAAqc,kBAAA,SAAkBrc,GACR,MAAkCpG,KAAKO,MAArC,IAAApE,OAAAA,OAAM,IAAG,aAAM,UAAI,EAAEglB,EAAM,SAEnC,IAAKhlB,EAAOiK,GACR,MAAMA,EAGN+a,GACAA,EAAO7G,IAAIlU,EAEnB,EAEA,YAAAvF,OAAA,WACU,MAA8Cb,KAAKO,MAAjD7H,EAAQ,WAAEgqB,EAAQ,WAAE,IAAAvmB,OAAAA,OAAM,IAAG,aAAM,UAAI,EAEvCiK,EAAUpG,KAAK7E,MAAK,MAE5B,OAAIiL,GAASjK,EAAOiK,GACTsc,GAAY,KAGhBhqB,CACX,EACJ,EA9BA,C,SAA4B,U,qJCO5B,SAAe,IAAAsD,OAXsC,SAAC,G,IAAElB,EAAI,OAAEwC,EAAK,QAC/D,OACI,uBAAKhB,UAAU,aACX,wBAAMA,UAAU,mBACXgB,QAAAA,EAAS,gBAACkJ,EAAA,EAAgB,CAACnH,GAAG,uBAC3B,IACR,wBAAM/C,UAAU,mBAAmBxB,GAG/C,I,uBCOA,uE,OACY,EAAA6nB,KAAO,CACXC,WAAY,qBAqFR,EAAAC,qBAAwD,SAACnb,GACvD,MAA4B,EAAKnH,MAA/B6F,EAAK,QAAE,IAAAmX,QAAAA,OAAO,IAAG,IAAAja,KAAI,EAEzB8C,GACAmX,EAAQ7V,EAAMob,YAAa,CAAE1c,MAAK,GAE1C,E,CACJ,QA9FwC,oBAKpC,YAAAvF,OAAA,WACY,IAAAuF,EAAUpG,KAAKO,MAAK,MAE5B,OACI,gBAACwiB,EAAA,EAAK,CACFC,yBAAyB,eACzBL,KAAM3iB,KAAK2iB,KACXM,OAAQjjB,KAAKkjB,eACbC,OAAQnjB,KAAKojB,eACbC,SAAUjd,EACVkd,eAAgBtjB,KAAK6iB,sBAEpB7iB,KAAKujB,aAGlB,EAEQ,YAAAH,aAAR,WACU,MAAkEpjB,KAAKO,MAArE6F,EAAK,QAAE,IAAA2L,MAAAA,OAAK,IAAG,EAAA3L,IAAS,EAAAiX,EAAA,GAAcjX,IAAUA,EAAM2L,MAAK,EAEnE,OACI,gBAACyR,EAAA,EAAW,KACR,gBAACC,EAAA,EAAS,CACNzb,oBAAoB,gCACpB6B,KAAM,YAEV,oCAAgB,YAAYoI,KAAK,SAC5BF,GAAS,gBAACvL,EAAA,EAAgB,CAACnH,GAAG,0BAI/C,EAEQ,YAAAkkB,WAAR,WACU,MAA8CvjB,KAAKO,MAAjD6F,EAAK,QAAE,IAAA7G,QAAAA,OAAO,IAAG,EAAA6G,GAASA,EAAM7G,QAAO,EAE/C,OACI,gCACKA,GACG,iCAAa,YAAYF,GAAG,oBAAoB4S,KAAK,SAChD1S,GAIT,uBAAKjD,UAAU,sCAAsC0D,KAAK0jB,mBAGtE,EAEQ,YAAAR,aAAR,WACI,OACI,gBAACpb,EAAA,GAAM,CAACL,QAASzH,KAAK6iB,qBAAsBhZ,KAAM/B,EAAA,UAC9C,gBAACtB,EAAA,EAAgB,CAACnH,GAAG,qBAGjC,EAEQ,YAAAqkB,gBAAR,W,MACU,EAAwC1jB,KAAKO,MAA3C6F,EAAK,QAAE,IAAAud,oBAEf,GAAKvd,SAF6B,IAAG,GAAI,GAEzC,CAIA,GC9FO,SAAwBA,GAGnC,MAA6B,YAFRA,EAEDzK,IACxB,CD0FYioB,CAAexd,KAAuB,QAAb,EAAAA,EAAMyd,eAAO,eAAG,iBACzC,OACI,gBAAC,EAAS,CACN/oB,KAAMsL,EAAMyd,QAAQ,gBACpBvmB,MAAO,gBAACkJ,EAAA,EAAgB,CAACnH,GAAG,wBAKxC,IAAMykB,GAAY,EAAAC,EAAA,GAAiB3d,GAEnC,GAAK0d,EAIL,OAAO,gBAAC,EAAS,CAAChpB,KAAMgpB,G,CAC5B,EASJ,EA9FA,CAAwC,EAAAziB,c,2DEzBzB,SAAS0iB,EAAiBvpB,GACrC,IACI,OAAO,IAAWA,GAAOwpB,a,CAC3B,MAAO5d,GAAO,CACpB,C,kBCkCO,SAAS6d,EAAeC,EAAazkB,GAOxC,OANI0kB,OAAOF,eACPE,OAAOF,eAAeC,EAAQzkB,GAE9BykB,EAAOE,UAAY3kB,EAGhBykB,CACX,C,uDCdYG,E,YAAZ,SAAYA,GACR,cACA,oBACA,gBACA,eACH,CALD,CAAYA,IAAAA,EAAc,K,QC1B1B,WAGI,WAAYxgB,GACA,OAAqCA,GAAW,CAAC,GAAC,QAAzCygB,OAAa,IAAG,EAAAC,QAAO,EAExCvkB,KAAKukB,QAAUD,CACnB,CAsBJ,OApBI,YAAAhK,IAAA,SACIlU,EACAoe,EACAC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAwBJ,EAAetd,OAG/B0d,GACJ,KAAKJ,EAAetd,MAChB,OAAO/G,KAAKukB,QAAQne,MAAMA,EAAOoe,EAAME,GAE3C,KAAKL,EAAeM,KAChB,OAAO3kB,KAAKukB,QAAQK,KAAKxe,EAAOoe,EAAME,GAE1C,KAAKL,EAAeQ,QAChB,OAAO7kB,KAAKukB,QAAQO,KAAK1e,EAAOoe,EAAME,GAE1C,QACI,OAAO1kB,KAAKukB,QAAQjK,IAAIlU,EAAOoe,EAAME,GAEjD,EACJ,EA7BA,G,6CCNA,wBAEA,QADI,YAAApK,IAAA,WAAO,EACX,EAFA,GCgBA,IASYyK,EATNC,EAAkB,UASxB,SAAYD,GACR,gBACA,gBACA,cACA,mBACH,CALD,CAAYA,IAAAA,EAAiB,K,QAO7B,WAII,WAAY1f,EAAwBxB,GAApC,WAkGQ,KAAAohB,iBAAqE,SAACvd,EAAOwd,G,UACjF,OACqB,QAAjB,EAAAxd,EAAMyd,mBAAW,eAAEhpB,QAAO,SAACipB,GAAU,QAAK,OAAoB,QAApB,EAAe,QAAf,EAAAA,EAAWjkB,YAAI,eAAEC,WAAG,eAAE4E,SAAS,cAAc,KAEhF,KAGP0B,EAAM2d,UAED,EAAKC,uBACoB,QAAtB,EAAA5d,EAAM2d,UAAUlnB,cAAM,QAAI,GACH,QAAvB,EAAA+mB,aAAI,EAAJA,EAAMK,yBAAiB,QAAI,MAM5B7d,EAHI,KAMRA,CACX,EAEQ,KAAA8d,mBAAwD,SAACC,GAC7D,GAAI,EAAKxE,YAAcwE,EAAMC,SAAU,CAInC,IAAMA,EAAWD,EAAMC,SAAStiB,QAAQ,IAAIuiB,OAAO,WAAI,EAAK1E,WAAU,OAAO,IAIzEyE,IAAaD,EAAMC,WACnBD,EAAMC,SAAW,UAAGV,EAAe,YAAIU,G,CAI/C,OAAOD,CACX,EAvIU,MAA6D5hB,GAAW,CAAC,EAAvE,IAAA+hB,cAAAA,OAAa,IAAG,MAAI,EAAiB,EAAE,IAAA3E,WAAAA,OAAU,IAAG,KAAE,EAE9DjhB,KAAK4lB,cAAgBA,EACrB5lB,KAAKihB,WAAaA,GAElB,SAAK,eACD4E,WA1BQ,GA2BRC,WAAY9lB,KAAKilB,iBACjBc,UAAU,0CAAK1gB,EAAO0gB,UAAY,IAAK,GAAF,CAAE,oBAAqB,kBAAmB,gBAAa,GAC5FC,aAAc,CACV,IAAI,oBAA4B,CAC5BC,SAAS,EACTC,sBAAsB,IAE1B,IAAI,KAAc,CACdC,SAAUnmB,KAAKwlB,uBAGpBngB,GAEX,CAoHJ,OAlHI,YAAAiV,IAAA,SACIlU,EACAoe,EACAC,EACA5qB,GAJJ,gBAGI,IAAA4qB,IAAAA,EAAwBJ,EAAetd,OAGvC/G,KAAK4lB,cAActL,IAAIlU,EAAOoe,EAAMC,IAEpC,SAAU,SAAC2B,GACC,OAAwC5B,GAAQ,CAAC,GAAC,UAAlDV,OAAS,IAAG,KAAAC,EAAA,GAAiB3d,GAAM,EAEvC0d,GACAsC,EAAMC,QAAQ,CAAEvC,UAAS,IAG7BsC,EAAME,SAAS,EAAKC,iBAAiB9B,IAEjC5qB,GACAusB,EAAMI,UAAU3sB,GAGpBusB,EAAMK,eAAe,CAAC,mBAEtB,QAAiBrgB,EACrB,GACJ,EAEQ,YAAAmgB,iBAAR,SAAyB9B,GACrB,OAAQA,GACJ,KAAKJ,EAAeM,KAChB,OAAOI,EAAkB2B,KAE7B,KAAKrC,EAAeQ,QAChB,OAAOE,EAAkB4B,QAE7B,KAAKtC,EAAeuC,MAChB,OAAO7B,EAAkB8B,MAE7B,KAAKxC,EAAetd,MACpB,QACI,OAAOge,EAAkB+B,MAErC,EAUQ,YAAAxB,uBAAR,SACIyB,EACAxB,GAMA,SAAKwB,EAAWhnB,QAAYwlB,aAA6Bxe,QAIlDggB,EAAWre,OAAM,SAAC2c,G,QACrB,SAAiC,QAA5B,EAAoB,QAApB,EAAAA,EAAU2B,kBAAU,eAAEC,cAAM,eAAElnB,SAI5BslB,EAAU2B,WAAWC,OAAOve,OAAM,SAAC+c,GAAK,MAC3C,OAAc,QAAd,EAAAA,EAAMC,gBAAQ,eAAEwB,WAAWlC,EAAgB,GAEnD,GACJ,EAyCJ,EA7IA,GC7Be,SAASnE,EACpBsG,EACAtjB,GAEA,OAAIsjB,GAAiBA,EAAcrG,OACxB,IAAI,EAAkBqG,EAAcrG,QAAQ,gCAC5Cjd,GAAO,CACV+hB,cAAe,IAAI,EAAmB/hB,MAQvC,IAAI,EAAmBA,EAClC,C,kBCnBe,SAASwZ,EAAcjX,GAClC,IAAMghB,EAAchhB,EAEpB,YACiC,IAAtBghB,EAAYrV,YACS,IAArBqV,EAAYjmB,WACS,IAArBimB,EAAYzrB,IAE3B,C,kCCIe,SAASiO,EAAgBxD,GACpC,MACqB,iBAAVA,GACG,OAAVA,IATJihB,EAUmBjhB,EATnBtE,EAS0B,OAPnBqiB,OAAO1kB,UAAU6nB,eAAeC,KAAKF,EAAKvlB,KAQvB,iBAAfsE,EAAMzK,KAZrB,IACI0rB,EACAvlB,CAYJ,C,wFCXe,SAAS0lB,EAIpBhG,EACA3d,GAEA,OAAO,SAA8B8d,GAC3B,MAAqD9d,GAAW,CAAC,EAA/D,IAAA/E,kBAAAA,OAAiB,IAAG,KAAE,EAAE,IAAA2oB,UAAAA,OAAS,IAAG,aAAM,UAAI,EAEhD7F,GAAqD,IAAA5lB,OAAK,SAACuE,GAAU,OACvE,gBAACohB,GAAiB,iBAAKphB,GADgD,IAIrEshB,EAAqB,SAACthB,GACxB,IAAM7E,GAAU,IAAA+H,YAAW+d,GACrBkG,GAAgB,IAAAC,QAAOjsB,GAAS,SAAClB,EAAOsH,GAC1C,OAAA2lB,EAAUjtB,EAAOsH,EAAjB,IAGJ,IAAI,IAAA7G,SAAQysB,GACR,OAAO,KAGX,IAAMzF,GAAc,gCAAKyF,GAAkBnnB,GAE3C,OAAO,gBAACqhB,GAAuB,iBAAKK,GACxC,EAQA,OANInjB,IACA+iB,EAAmBK,YAAc,UAAGpjB,EAAiB,YACjD6iB,EAAkBO,aAAeP,EAAkBrmB,KAAI,MAIxDumB,CACX,CACJ,C,iBC3Ce,SAAS+F,EAEpB/Z,GAEA,MAAO,eAAgBA,CAC3B,CCCe,SAASlH,EACpBkhB,EACAC,GAIA,I,QAFMC,EAAwC,GAEjB,MAAA5D,OAAO6D,QAAQF,GAAf,eAA4B,CAA9C,WAAIja,GAAF,KAAW,MACpB,GAAK+Z,EAA0C/Z,GAI/C,IAAyB,UAAAA,EAAUoa,WAAV,eAAsB,CAG3C,IAHC,IAAMC,EAAU,KACXvX,EAAS,CAAEwX,UAAWta,EAAWrQ,QAAS,EAAG4qB,SAAS,GAEjC,MAAAjE,OAAO6D,QAAQE,GAAf,eAA4B,CAA5C,WAACpmB,EAAG,KAAEtH,EAAK,KAClB,GAAIsH,KAAO+lB,GAASA,EAAM/lB,KAAStH,EAAO,CACtCmW,EAAOnT,QAAU,EACjB,K,CAGAqqB,EAAM/lB,KAAStH,GACfmW,EAAOnT,UAGC,YAARsE,IAA+B,IAAVtH,IACrBmW,EAAOyX,SAAU,E,CAIzBL,EAAQM,KAAK1X,E,EAIrB,IAAMiD,EAAUmU,EACXjjB,MAAK,SAACC,EAAGC,GAAM,OAAAA,EAAExH,QAAUuH,EAAEvH,OAAd,IACfrB,QAAO,SAACwU,GAAW,OAAAA,EAAOnT,QAAU,CAAjB,IAAoB,GAE5C,OAAyB,QAAlB,EAAAoW,aAAO,EAAPA,EAASuU,iBAAS,QAA4C,QAAxC,EAAAJ,EAAQltB,MAAK,SAAC8V,GAAW,OAAAA,EAAOyX,OAAP,WAAe,eAAED,SAC3E,C,mDC9CO,IAAMG,EAAcnE,OAAOoE,OAAO,IACbpE,OAAOoE,OAAO,CAAC,E,kBCH5B,SAASvlB,IACpB,IAAMwlB,EAAetmB,OAAOgB,SAASC,SAASslB,MAAM,KAAKC,MAEzD,QAA0B,aAAjBF,GAAgD,sBAAjBA,EAC5C,C,kCCFe,SAAS9b,EAAuBnH,GAC3C,OAAOI,QAAQJ,EAAiBoa,+BAA+BE,qBACnE,C,kECJM8I,EAAkB,CACpBC,MAAO,EACPC,SAAU,KAQC,SAAerQ,EAAShR,EAAsB3D,G,kIACnD,mCAA2B8kB,GAAoB9kB,GAA7C+kB,EAAK,QAAEC,EAAQ,W,iBAGZ,O,sBAAA,GAAMrhB,K,OAAb,MAAO,CAAP,EAAO,U,OAEP,G,WAAc,IAAVohB,EACA,MAAM,EAGV,SAAM,IAAIvlB,SAAQ,SAACylB,GAAY,OAAAroB,WAAWqoB,EAASD,EAApB,K,OAE/B,OAFA,SAEO,CAAP,EAAOrQ,EAAMhR,EAAI,CAAEqhB,SAAQ,EAAED,MAAOA,EAAQ,K,0ECTpD,SAAe,E,SAAA,IALsE,SAAC,G,IAClFG,EAAM,SACNC,EAAQ,WACN,uCAAGA,EAASC,mBAAmBF,GAA/B,G,kBCFC,SAASG,EAAkC7jB,GAE1C,MACAA,EAAM,qBAEV,OAAOmH,EAAwB,CAC3B2c,UAJiC,YAKjChf,YALqD,QAMrDE,MAN4D,QAO5DD,QAPqE,WAS7E,CAEe,SAASoC,EAAwB,G,IAC5C2c,EAAS,YACThf,EAAW,cACXE,EAAK,QACLD,EAAO,UAEDgf,EAAa,IAAIzD,OAAO,IAAK,KAEnC,MAAO,CACHrb,UAAW6e,EACXhf,YAAW,EACXE,MAAO,IAAIsb,OAAOtb,EAAMjH,QAAQgmB,EAAY,KAC5Chf,QAAS,IAAIub,OAAOvb,EAAQhH,QAAQgmB,EAAY,KAExD,C,oFClCe,SAASC,EACpBC,G,IACA,wDAEA,IAAMC,EAAe,EAAAnO,OAAA,WAAO,GAAD,oBAAC,CAAC,GAAMuB,GAAM,IACnCpc,GAAQ,IAAAoB,MACV,IAAAgmB,QAAO4B,GAAc,SAAC/uB,GAAU,MAAiB,iBAAVA,CAAP,KAChC,SAACA,EAAOsH,GAAQ,iBAAG,IAAA0nB,WAAU1nB,GAAI,aAAKtH,EAAK,IAA3B,IAClB0F,KAAK,KAEP,MAAO,UAAGopB,EAAQ,aAAK/oB,EAAK,IAChC,C,QCTA,wBAmXA,QAlXI,YAAAyI,MAAA,SAAM2T,GACF,IAAM8M,EAAkB,GA+WxB,OA7WI9M,EAAO+M,OACPD,EAAMpB,KAAKgB,EAAU,OAAQ1M,EAAO+M,OACpCD,EAAMpB,KAAKgB,EAAU,6BAA8B1M,EAAO+M,QAG1D/M,EAAO5L,MACP0Y,EAAMpB,KAAKgB,EAAU,oCAAqC1M,EAAO5L,OAGjE4L,EAAOgN,eACPF,EAAMpB,KAAKgB,EAAU,sCAAuC1M,EAAOgN,gBAGnEhN,EAAOzK,SACPuX,EAAMpB,KAAKgB,EAAU,oCAAqC1M,EAAOzK,UAGjEyK,EAAOiN,kBACPH,EAAMpB,KAAKgB,EAAU,sCAAuC1M,EAAOiN,mBAGnEjN,EAAOkN,OACPJ,EAAMpB,KAAKgB,EAAU,IAAK1M,EAAOkN,OACjCJ,EAAMpB,KAAKgB,EAAU,UAAW1M,EAAOkN,KAAMlN,EAAOkN,KAAK/U,QACzD2U,EAAMpB,KAAKgB,EAAU,UAAW1M,EAAOkN,KAAMlN,EAAOkN,KAAKC,SAGzDnN,EAAOrf,QACPmsB,EAAMpB,KAAKgB,EAAU,gCAAiC1M,EAAOrf,QAC7DmsB,EAAMpB,KACFgB,EACI,mDACA1M,EAAOrf,MACPqf,EAAOrf,MAAM8I,QAGrBqjB,EAAMpB,KACFgB,EACI,yCACA1M,EAAOrf,MACPqf,EAAOrf,MAAM8I,SAKrBuW,EAAOoN,SACPN,EAAMpB,KAAKgB,EAAU,mCAAoC1M,EAAOoN,SAChEN,EAAMpB,KACFgB,EACI,0CACA1M,EAAOoN,OACPpN,EAAOoN,OAAOC,SAGtBP,EAAMpB,KACFgB,EACI,yCACA1M,EAAOoN,OACPpN,EAAOoN,OAAOjV,QAGtB2U,EAAMpB,KACFgB,EACI,yCACA1M,EAAOoN,OACPpN,EAAOoN,OAAOD,QAGtBL,EAAMpB,KACFgB,EACI,6CACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,WAGtBwc,EAAMpB,KACFgB,EACI,oDACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,WAGtBwc,EAAMpB,KACFgB,EACI,mDACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,WAGtBwc,EAAMpB,KACFgB,EACI,mDACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,WAGtBwc,EAAMpB,KACFgB,EACI,uDACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,WAGtBwc,EAAMpB,KACFgB,EACI,wDACA1M,EAAOoN,OACPpN,EAAOoN,OAAO9c,YAKtB0P,EAAOsN,kBACPR,EAAMpB,KAAKgB,EAAU,qCAAsC1M,EAAOsN,kBAClER,EAAMpB,KACFgB,EACI,4CACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBD,SAG/BP,EAAMpB,KACFgB,EACI,2CACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBnV,QAG/B2U,EAAMpB,KACFgB,EACI,2CACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBH,QAG/BL,EAAMpB,KACFgB,EACI,+CACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,WAG/Bwc,EAAMpB,KACFgB,EACI,sDACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,WAG/Bwc,EAAMpB,KACFgB,EACI,qDACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,WAG/Bwc,EAAMpB,KACFgB,EACI,qDACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,WAG/Bwc,EAAMpB,KACFgB,EACI,yDACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,WAG/Bwc,EAAMpB,KACFgB,EACI,0DACA1M,EAAOsN,gBACPtN,EAAOsN,gBAAgBhd,YAK/B0P,EAAOjI,QACP+U,EAAMpB,KAAKgB,EAAU,gCAAiC1M,EAAOjI,QAC7D+U,EAAMpB,KACFgB,EAAU,sCAAuC1M,EAAOjI,MAAOiI,EAAOjI,MAAMI,QAEhF2U,EAAMpB,KACFgB,EAAU,sCAAuC1M,EAAOjI,MAAOiI,EAAOjI,MAAMoV,QAEhFL,EAAMpB,KACFgB,EACI,6CACA1M,EAAOjI,MACPiI,EAAOjI,MAAMwV,cAGrBT,EAAMpB,KACFgB,EACI,mDACA1M,EAAOjI,MACPiI,EAAOjI,MAAMtO,QAGrBqjB,EAAMpB,KACFgB,EACI,yDACA1M,EAAOjI,MACPiI,EAAOjI,MAAMtO,QAGrBqjB,EAAMpB,KACFgB,EACI,yDACA1M,EAAOjI,MACPiI,EAAOjI,MAAMtO,SAKrBuW,EAAOwN,SACPV,EAAMpB,KAAKgB,EAAU,iCAAkC1M,EAAOwN,SAC9DV,EAAMpB,KACFgB,EACI,uCACA1M,EAAOwN,OACPxN,EAAOwN,OAAOrV,QAGtB2U,EAAMpB,KACFgB,EACI,uCACA1M,EAAOwN,OACPxN,EAAOwN,OAAOL,QAGtBL,EAAMpB,KACFgB,EACI,oDACA1M,EAAOwN,OACPxN,EAAOwN,OAAO/jB,QAGtBqjB,EAAMpB,KACFgB,EACI,0DACA1M,EAAOwN,OACPxN,EAAOwN,OAAO/jB,QAGtBqjB,EAAMpB,KACFgB,EACI,0DACA1M,EAAOwN,OACPxN,EAAOwN,OAAO/jB,SAKtBuW,EAAOyN,WACPX,EAAMpB,KAAKgB,EAAU,mCAAoC1M,EAAOyN,WAChEX,EAAMpB,KACFgB,EACI,yCACA1M,EAAOyN,SACPzN,EAAOyN,SAAStV,QAGxB2U,EAAMpB,KACFgB,EACI,yCACA1M,EAAOyN,SACPzN,EAAOyN,SAASN,QAGxBL,EAAMpB,KACFgB,EACI,sDACA1M,EAAOyN,SACPzN,EAAOyN,SAAShkB,QAGxBqjB,EAAMpB,KACFgB,EACI,4DACA1M,EAAOyN,SACPzN,EAAOyN,SAAShkB,QAGxBqjB,EAAMpB,KACFgB,EACI,4DACA1M,EAAOyN,SACPzN,EAAOyN,SAAShkB,SAKxBuW,EAAO0N,QACPZ,EAAMpB,KAAKgB,EAAU,gCAAiC1M,EAAO0N,QAC7DZ,EAAMpB,KACFgB,EAAU,sCAAuC1M,EAAO0N,MAAO1N,EAAO0N,MAAMvV,QAEhF2U,EAAMpB,KACFgB,EAAU,sCAAuC1M,EAAO0N,MAAO1N,EAAO0N,MAAMP,QAEhFL,EAAMpB,KACFgB,EACI,mDACA1M,EAAO0N,MACP1N,EAAO0N,MAAMjkB,QAGrBqjB,EAAMpB,KACFgB,EACI,yDACA1M,EAAO0N,MACP1N,EAAO0N,MAAMjkB,QAGrBqjB,EAAMpB,KACFgB,EACI,yDACA1M,EAAO0N,MACP1N,EAAO0N,MAAMjkB,SAKrBuW,EAAOpjB,OACPkwB,EAAMpB,KAAKgB,EAAU,kCAAmC1M,EAAOpjB,OAC/DkwB,EAAMpB,KAAKgB,EAAU,0BAA2B1M,EAAOpjB,KAAKgX,QAG5DoM,EAAO2N,YACPb,EAAMpB,KAAKgB,EAAU,oCAAqC1M,EAAO2N,YACjEb,EAAMpB,KAAKgB,EAAU,yCAA0C1M,EAAO2N,YACtEb,EAAMpB,KACFgB,EACI,+CACA1M,EAAO2N,UACP3N,EAAO2N,UAAUR,QAGzBL,EAAMpB,KACFgB,EACI,mDACA1M,EAAO2N,UACP3N,EAAO2N,UAAUC,WAKzB5N,EAAO6N,gBACPf,EAAMpB,KAAKgB,EAAU,oCAAqC1M,EAAO6N,iBAGjE7N,EAAO8N,eACPhB,EAAMpB,KAAKgB,EAAU,oCAAqC1M,EAAO8N,gBAGjE9N,EAAO+N,eACPjB,EAAMpB,KAAKgB,EAAU,kCAAmC1M,EAAO+N,eAC/DjB,EAAMpB,KACFgB,EAAU,8CAA+C1M,EAAO+N,gBAIjEjB,CACX,EACJ,EAnXA,G,QCEA,WAGI,WAAYkB,GACR3qB,KAAK4qB,QAAUD,CACnB,CAKJ,OAHI,YAAA/N,OAAA,SAAOD,GACH,OCdO,SAA0B8M,GACrC,IAAMjlB,EAAQJ,SAASymB,cAAc,SAIrC,GAFAzmB,SAAS0mB,KAAKC,YAAYvmB,GAEtBA,EAAMwmB,iBAAiBC,cAAe,CAC9B,MAAUzmB,EAAK,MAEvBilB,EAAMyB,SAAQ,SAACC,EAAMra,GACjB,EAAMsa,WAAWD,EAAMra,EAC3B,G,CAGJ,OAAOtM,CACX,CDAe6mB,CAAiBrrB,KAAK4qB,QAAQ5hB,MAAM2T,GAC/C,EACJ,EAVA,GEHe,SAASiE,IACpB,IAAM+J,EAA8B,IAAI,EAExC,OAAO,IAAI,EAA2BA,EAC1C,C,kBCPe,SAASxP,EAAWhY,GAG/B,YAH+B,IAAAA,IAAAA,EAAmBiB,SAASlB,SAASC,UAGhD,uBAFH,WAAIA,EAASslB,MAAM,KAAK,GAG7C,C,wFCmCA,SAAe,IAAAzrB,UAAQ,SAA6C,G,IAChEC,EAAU,aACV,IAAAC,UAAAA,OAAS,IAAG,aAAM,EAAS,EAE3B,OAAO,QAAO,CACVsB,cAAc,QACVvB,EACKd,QAAO,SAAC,GAAe,QAAP,QAAO,IACvBgB,QAAO,SAACC,EAAQ,G,IACTkuB,EACAC,EAFWjwB,EAAI,OAAEgC,EAAK,QAAED,EAAQ,WAAEiB,EAAS,YAAE3C,EAAI,OAAEmC,EAAG,MAAEC,EAAG,MA0C/D,GAtCa,SAATpC,EACAyB,EAAO9B,IAAQ,UAGVkwB,QAAO,GACPC,UAAS,GACTC,WAAU,SAAClxB,EAAOmxB,GACf,MAAkB,KAAlBA,EAAuB,KAAOnxB,CAA9B,IAEQ,YAATmB,GACPyB,EAAO9B,IAAQ,UAGVkwB,QAAO,GACPE,WAAU,SAAClxB,GAAU,OAACua,MAAMva,QAASpC,EAAYoC,CAA5B,IAE1B8wB,EAA0B,iBAARvtB,EAAmBA,OAAM3F,EAC3CmzB,EAA0B,iBAARztB,EAAmBA,OAAM1F,GACpCkG,IAAc,aACrBlB,EAAO9B,IAAQ,UAEf8B,EAAO9B,IAAQ,eAGFlD,IAAbkzB,IACAluB,EAAO9B,GAAS8B,EAAO9B,GAAuByC,IAC1CutB,EACApuB,EAAU,MAAO,CAAEI,MAAK,EAAEhC,KAAI,EAAEyC,IAAKutB,EAAW,WAIvClzB,IAAbmzB,IACAnuB,EAAO9B,GAAS8B,EAAO9B,GAAuBwC,IAC1CytB,EACAruB,EAAU,MAAO,CAAEI,MAAK,EAAEhC,KAAI,EAAEwC,IAAKytB,EAAW,MAIpDluB,EAAU,CACV,IAAMuuB,EAAuB1uB,EAAU,WAAY,CAAE5B,KAAI,EAAEgC,MAAK,IAEhEF,EAAO9B,GACHgD,IAAc,aACPlB,EAAO9B,GAA8BwC,IAAI,EAAG8tB,GAC5CxuB,EAAO9B,GAA8B+B,SAClCuuB,E,CAIlB,OAAOxuB,CACX,GAAG,CAAC,IACVquB,UAAS,IAEnB,G,kDCtGe,SAASzf,EAAkC6f,GAGtD,IAAMrtB,EAA+D,GAoBrE,OAlBA,IAAAstB,OAAMD,GAAoB,SAACrxB,EAAOsH,GAC9B,IAAIrD,EAEJ,IAAI,IAAAstB,QAAOvxB,GAAQ,CACf,IAAMwxB,GAAW,IAAAC,WAAUzxB,EAAM0xB,WAAa,GAAGjpB,WAAY,EAAG,KAC1DkpB,GAAS,IAAAF,UAASzxB,EAAM4xB,UAAUnpB,WAAY,EAAG,KAEvDxE,EAAa,UAAGjE,EAAM6xB,cAAa,YAAIL,EAAQ,YAAIG,E,MAEnD1tB,EAAajE,EAGjBgE,EAAa6pB,KAAK,CACdjf,QAAStH,EACTrD,WAAU,GAElB,IAEOD,CACX,C,uGCKA,SAAe,EAAA8tB,EAAA,IAvBgD,SAAC,G,IAC5D,IAAA7zB,gBAAmBmO,EAAoB,uBAAEC,EAAkB,qBAC3DxE,EAAW,cACXG,EAAQ,WACR2D,EAAgB,mBAgBhB,OAdA,IAAAjC,YAAU,W,MASN,OARA2C,GAAkB,GACdrE,SAAQ,GACR,EAACA,GAAW,CACRI,UAAWP,EACX8D,iBAAgB,G,IAErBomB,MAAMpmB,GAEF,WACHS,EAAqB,CAAEpE,SAAQ,IAAI+pB,MAAMpmB,EAC7C,CACJ,GAAG,CAAC9D,EAAauE,EAAsBC,EAAoBrE,EAAU2D,IAE9D,uBAAK9G,GAAIgD,GACpB,GAII,I,uBC7BJ,YACI,WAAY9C,GAAZ,ICLqD2kB,EAAWzkB,EDKhE,EACI,YAAM,CACFnE,KAAM,sCACNiE,QAAO,KACT,K,OCT+C2kB,EDWlC,ECX6CzkB,EDWvCD,EAAiCC,UCTtD0kB,OAAOF,eACPE,OAAOF,eAAeC,EAAQzkB,GAUtC,SAAkBykB,GACd,MAAO,cAAeA,CAC1B,CAXesI,CAAStI,KAEhBA,EAAOE,UAAY3kB,G,CDMvB,CACJ,OAT8D,oBAS9D,EATA,CEJA,YAOI,WAAY,G,IACR,IAAA0B,KAAAA,OAAI,IAAG,GAAC,EAAC,EACT,IAAA5B,QAAAA,OAAO,IAAG,KAAE,EACZ,IAAAwS,MAAAA,OAAK,IAAG,KAAE,EACV,IAAAzW,KAAAA,OAAI,IAAG,KAAE,EAJb,EAWI,cAAO,K,MAEgC,mBAA5ByL,MAAMob,kBACbpb,MAAMob,kBAAkB,EAAMziB,GAE9B,EAAK0iB,OAAQ,IAAIrb,OAAQqb,MAI7B,EAAKjhB,KAAOA,EACZ,EAAK5B,QAAUA,EACf,EAAKjE,KAAOA,EACZ,EAAKyW,MAAQA,EACb,EAAKpW,KAAO,S,CAChB,CACJ,OAjCyC,oBAiCzC,EAjCA,CAAyCoL,QC6BzC,SAAe,EAAAulB,EAAA,IAlBiD,SAAC/rB,GACrD,ICZuB4C,EDYvBvF,EAA+B2C,EAAK,SAA1B4F,EAAqB5F,EAAK,iBAE5C,YCd+B,IAAA4C,IAAAA,EAAmBiB,SAASlB,SAASC,UAGhD,uBAFH,WAAIA,EAASslB,MAAM,KAAK,KDcrCtiB,EACI,IAAI,EACAvI,EAASV,UAAU,sCAAuC,CACtD+C,QAAS,gBAKd,MAGJ,gBAAC,GAAc,iBAAKM,GAC/B,GAII,CACI,CAAElB,GAAI,oBACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,yBACN,CAAEA,GAAI,gBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,wBACN,CAAEA,GAAI,0BACN,CAAEA,GAAI,oBACN,CAAEA,GAAI,mBACN,CAAEA,GAAI,sBACN,CAAEA,GAAI,4B,kBEpCC,SAASotB,EACpBttB,GAEA,MAA8B,oBAAvBA,EAAQC,UACnB,C,4KCRMstB,EAAOtoB,SAASuoB,cAAiBvoB,SAASuoB,cAAoCC,SAAMx0B,ECA3E,SAASy0B,EAAoB5L,GACxC,IAAKA,EAAY,CACb,IAAM6L,EDCHJ,ECCH,IAAKI,EACD,MAAM,IAAI/lB,MACN,sJAMR,OAFA,IAA0B,UAAG+lB,EAAWrE,MAAM,KAAKrQ,MAAM,GAAI,GAAGlY,KAAK,KAAI,KAElE,G,CAKX,OAFA,IAAoD,MAA1B+gB,EAAW8L,QAAQ,GAAa9L,EAAa,UAAGA,EAAU,KAE7E,GACX,CCVe,SAAS+L,EAAe,GACnC,IAAA3qB,EAAW,cACX4e,EAAU,aACP1gB,GAAK,cAH2B,8BAK7B0sB,EAAuBJ,EAAoB5L,GAIhCiM,EAAgB,WAYjC,SACI,gBAACA,GAAW,eAAC7qB,YAAaA,EAAa4e,WAAYgM,GAA0B1sB,IAC7E6D,SAAS+oB,eAAe9qB,GAEhC,CCzBe,SAAS+qB,EAAwB,GAC5C,IAAA/qB,EAAW,cACX4e,EAAU,aACP1gB,GAAK,cAHoC,8BAKtC0sB,EAAuBJ,EAAoB5L,GAIhCoM,EAAyB,WAY1C,SACI,gBAACA,GAAoB,eACjBhrB,YAAaA,EACb4e,WAAYgM,GACR1sB,IAER6D,SAAS+oB,eAAe9qB,GAEhC,C,iNC5BA,WACI,WAAoBirB,QAAA,IAAAA,IAAAA,GAA+B,WAA/B,KAAAA,cAAAA,CAAuD,CAO/E,OALI,YAAAC,OAAA,SAAO7D,GACH,OAAO1pB,KAAKstB,cACPE,IAA6B,oCAAqC,CAAE9D,KAAI,IACxE+D,MAAK,SAACC,GAAa,OAAAA,EAAShE,KAAKvoB,KAAKsE,QAAnB,GAC5B,EACJ,EARA,G,wNC8CA,SAAe,IAAAzJ,OA9C+C,SAAC,G,IAAEsO,EAAS,YAChEqjB,GAAsB,IAAA/pB,cACxB,SAAC,G,IAAExH,EAAK,QAA2B,uBAACwxB,EAAA,GAAS,iBAAKxxB,EAAK,CAAEiD,GAAIjD,EAAMd,KAAMK,KAAK,aAA3C,GACnC,IAGEkyB,GAAkC,IAAAjqB,cACpC,SAAC,G,IAAExH,EAAK,QAA2B,uBAACwxB,EAAA,GAAS,iBAAKxxB,EAAK,CAAEiD,GAAIjD,EAAMd,KAAMK,KAAK,aAA3C,GACnC,IAGEmyB,GAAuB,IAAAl1B,UACzB,WAAM,OACF,gCACI,gBAAC4N,EAAA,EAAgB,CAACnH,GAAG,4BAA6B,IAClD,6BACK,UAAGiL,EAAS,KACb,gBAAC9D,EAAA,EAAgB,CAACnH,GAAG,+CAL3B,GASN,CAACiL,IAGCyjB,GAAmC,IAAAn1B,UACrC,WAAM,uBAAC4N,EAAA,EAAgB,CAACnH,GAAG,wCAArB,GACN,IAGJ,OACI,gCACI,gBAAC2uB,EAAA,EAAS,CACNtZ,MAAOiZ,EACPM,aAAcH,EACdxyB,KAAK,aAGT,gBAAC0yB,EAAA,EAAS,CACNtZ,MAAOmZ,EACPI,aAAcF,EACdzyB,KAAK,oBAIrB,ICcA,SAAe,EAAAmP,EAAA,IACX,IAAAC,YAAkE,CAC9D0B,iBAAkB,WAAM,OACpB7B,SAAU,GACV2jB,gBAAiB,GAFG,EAIxBvjB,aAAc,SAACxM,EAAQ,IACnBgwB,EADsC,kBAC7BhwB,EACb,EACAkO,iBAAkB,SAAC,G,IACfzO,EAAQ,WACR,IAAAsM,qBAAwBC,EAAW,cAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAE9D,eAAO,CACHC,UAAU,UACLlN,SAAS8M,GAAevM,EAASV,UAAU,qCAC3CM,QACG4M,EACAD,GACIvM,EAASV,UAAU,4CAE1BM,QACG6M,EACAF,GACIvM,EAASV,UAAU,4CAE1BY,IACGwM,EACAH,GACIvM,EAASV,UAAU,iDAE1Ba,IAAI,IAAKH,EAASV,UAAU,gDACjCgxB,iBAAiB,UACZ7wB,SAASO,EAASV,UAAU,kDAC5BkxB,MACG,EAAC,QAAI,aACLxwB,EAASV,UAAU,0CAvB/B,GAZR,EAsCG,IAAAlB,OAlFH,SAAC,G,IAAEqyB,EAAW,cAAEC,EAAoB,uBAA0BhkB,EAAS,iCAAS,OAChF,gBAACsC,EAAA,EAAQ,CACL2hB,OACI,gBAACC,EAAA,EAAM,KACH,gBAAChoB,EAAA,EAAgB,CACbnH,GACIivB,EACM,+BACA,kCAMpBA,GACE,yBACI,gBAAC9nB,EAAA,EAAgB,CAACnH,GAAG,mCAI7B,gBAACsN,EAAA,EAAI,CAACrQ,UAAU,qBACZ,gBAAC,EAAmB,CAACgO,UAAWA,IAEhC,uBAAKhO,UAAU,gBACX,gBAACwL,EAAA,GAAM,CACHzI,GAAG,sBACH4B,UAAWotB,EACX1yB,KAAK,SACLoO,QAASjC,EAAA,YAET,gBAACtB,EAAA,EAAgB,CACbnH,GACIivB,EACM,iCACA,oCAlCkD,M,eCZpF,QARqD,WAAM,OACvD,gBAAChe,EAAA,EAAK,CAAC3U,KAAM2U,EAAA,WACT,8BACI,gBAAC9J,EAAA,EAAgB,CAACnH,GAAG,mCAH0B,ECQ3D,QARgD,WAAM,OAClD,gBAACiR,EAAA,EAAK,CAAC3U,KAAM2U,EAAA,WACT,8BACI,gBAAC9J,EAAA,EAAgB,CAACnH,GAAG,qCAHqB,E,kCCFtD,YACI,WAAY8B,EAAamL,GAAzB,MACI,YAAM,CACFhR,KAAM,sCACNiE,QAAS+M,EACTyF,OAAO,EAAAD,EAAA,KAAqB5U,UACxB,sDAEJiE,KAAI,KACN,K,OAEF,OAAe,EAAMstB,EAAiChvB,W,CAC1D,CACJ,OAb8D,oBAa9D,EAbA,CAA8DC,EAAA,G,QCA9D,YACI,WAAYyB,GAAZ,MACI,YAAM,CACF7F,KAAM,0BACNiE,SAAS,EAAAuS,EAAA,KAAqB5U,UAAU,iCACxCiE,KAAI,KACN,K,OAEF,OAAe,EAAMutB,EAA2BjvB,W,CACpD,CACJ,OAVwD,oBAUxD,EAVA,CAAwDC,EAAA,G,0DCKxD,SAASivB,EAAsBxvB,GAC3B,QAAQ,EAAAstB,EAAA,GAAyBttB,MAAa,EAAAyvB,EAAA,GAAqBzvB,EACvE,CASA,QAPA,SAAgC0F,GAC5B,IAAMgqB,GAAkBhqB,EAAM3F,UAAY,IAAIrE,KAAK8zB,GAGnD,OAFqBE,GAAkBA,EAAeC,OAAOC,cAEtC,EAC3B,ECde,SAASC,EAAgB9vB,GACpC,OAAOA,EAAS/C,OAAOswB,EAAA,GAA0B9qB,KAAI,SAAC,G,IAAEonB,EAAM,SAAE+F,EAAM,SAAO,OACzEh0B,KAAMg0B,EAAOh0B,KACbm0B,UAAWH,EAAOG,UAClBC,KAAMnG,EACNoG,QAASpG,EAAS+F,EAAOG,UACzBG,aAAc,GAL2D,GAOjF,CCRe,SAASC,GAAqBnwB,GACzC,OAAQA,GAAY,IACf/C,OAAOyyB,EAAA,GACPzxB,QAAO,SAACmyB,EAAOnwB,GAAY,OAAAmwB,EAAQnwB,EAAQ4pB,MAAhB,GAAwB,EAC5D,CCDe,SAASwG,GAAgC,G,IACpDC,EAAU,aACVC,EAAc,iBACdC,EAAa,gBACbC,EAA0B,6BAC1BzwB,EAAQ,WACR0wB,EAAiB,oBACjBC,EAAqB,wBACrBC,EAAO,UACPC,EAAK,QAEL,MAAO,CACHC,eAAgBR,EAChBS,eAAgBN,EAChBO,mBAAoBL,EACpBJ,eAAc,EACdU,kBAAmBd,GAAqBnwB,GACxCkxB,eAAgBR,EAChBE,QAAO,EACPO,iBAAkBnxB,GAAY8vB,EAAgB9vB,GAC9C6wB,MAAK,EACLL,cAAa,EAErB,CCxBA,SAJoD,SAAC,G,IAAEh3B,EAAQ,WAAO,OAClE,2BAAS4D,UAAU,6BAA6B5D,EADkB,E,gBCchE43B,GAAuB,SACzBnxB,GACgC,QAAEA,EAAQqD,UAAY,YAAarD,KAAaA,EAAQoxB,OAAxD,EAgF9BC,GAAiE,SAAC,G,IACpEC,EAAW,cACXC,EAAW,cACXC,EAAY,eACZC,EAAkB,qBAElB,OAAQF,GACJ,IAAK,+BACL,IAAK,mBACD,OAAO,gBAACxvB,GAAA,EAAc,CAAC7B,GAAG,iDAE9B,IAAK,UACD,OACI,gBAAC6B,GAAA,EAAc,CACXC,KAAM,CAAEsvB,YAAW,EAAEE,aAAY,GACjCtxB,GAAG,iDAIf,IAAK,aACD,OACI,gBAAC6B,GAAA,EAAc,CACXC,KAAM,CAAEsvB,YAAW,EAAEE,aAAY,GACjCtxB,GAAG,oDAIf,QACI,OACI,gBAAC6B,GAAA,EAAc,CACXC,KAAM,CAAEsvB,YAAW,EAAEE,aAAY,EAAEC,mBAAkB,GACrDvxB,GACIuxB,EACM,oDACA,yDAK9B,EAEA,UAAe,IAAA50B,OAvH0C,SAAC,G,MACtD6I,EAAK,QACL8rB,EAAY,eACZC,EAAkB,qBAEZC,GAAqC,QAAd,EAAAhsB,EAAM3F,gBAAQ,eAAE/C,OAAOm0B,MAAyB,GAE7E,OACI,gBAAC,GAAwB,KACpBzrB,EAAM9B,SACH,iCAAa,wCACT,gBAAC7B,GAAA,EAAc,CACXC,KAAM,CAAEsvB,YAAa5rB,EAAM9B,SAC3B1D,GAAG,0CAKf,iCAAa,wCACT,gBAACmxB,GAAkB,CACfC,YAAa5rB,EAAM9B,QACnB2tB,YAAa7rB,EAAMisB,OACnBH,aAAcA,EACdC,mBAAoBA,KAG3BC,EAAqBlvB,KAAI,SAACxC,GACvB,OAAIA,EAAQoxB,QAAQnvB,IAEZ,iCACc,uCACV4Z,KAAM7b,EAAQoxB,QAAQnvB,IACtBU,IAAK,UAAG3C,EAAQC,WAAU,YAAID,EAAQqD,SAAQ,YAC9CuuB,IAAI,sBACJC,OAAO,UAEP,gBAACxqB,EAAA,EAAgB,CACbnH,GAAI,qCAA8BF,EAAQC,WAAU,YAAID,EAAQqD,aAIrErD,EAAQoxB,QAAQlxB,GAEnB,iCACc,qCACVyC,IAAK,UAAG3C,EAAQC,WAAU,YAAID,EAAQqD,SAAQ,aAE9C,gBAACgE,EAAA,EAAgB,CACbrF,KAAM,CAAEovB,QAASpxB,EAAQoxB,QAAQlxB,IACjCA,GAAI,qCAA8BF,EAAQC,WAAU,YAAID,EAAQqD,kBARzE,CAaX,IAECqC,EAAMosB,iBACH,iCAAa,yCACT,gBAAC/vB,GAAA,EAAc,CACX7B,GACIwF,EAAMqsB,eACA,gEACA,sEAOlC,I,4BC/EA,UAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAKzsB,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,sJAF2B,ICkC3C,UAAe,IAAArU,OAxBsC,SAAC,G,IAAEM,EAAS,YACvD60B,GAAc,IAAAvtB,cAChB,KAAAwtB,WAAS,WACLlvB,OAAOmvB,OACX,GANqB,KAOrB,IAGJ,MAA4B,mBAAjBnvB,OAAOmvB,MACP,KAIP,qBACI/0B,UAAWA,GAAa,mBACxB0e,KAAK,IACL3b,GAAG,kBACHoI,SAAS,EAAA+K,GAAA,GAAe2e,IAExB,gBAAC,GAAS,M,IAAI,gBAAC3qB,EAAA,EAAgB,CAACnH,GAAG,sBAG/C,ICxBA,SANsD,SAAC,G,IAAE3G,EAAQ,WAAEoR,EAAM,SAAO,OAC5E,sBAAIxN,UAAU,mCAAkC,YAAYwN,GACvDpR,EAFuE,ECchF,UAAe,IAAAsD,OAVwC,SAAC,G,IAAEV,EAAI,OAAO,OACjE,gBAAC,GAAa,CAACwO,OAAO,8BACjBxO,GACG,gBAACkL,EAAA,EAAgB,CAACrF,KAAM,CAAE7F,KAAI,GAAI+D,GAAG,mDAGvC/D,GAAQ,gBAACkL,EAAA,EAAgB,CAACnH,GAAG,yCAN8B,ICkCrE,IAAMiyB,IAAe,IAAA/Y,OAAK,WACtB,SAAAC,EAAA,IACI,WACI,gEAFR,IASE+Y,IAAqB,IAAAhZ,OAAK,WAC5B,SAAAC,EAAA,IACI,WACI,gEAFR,IA+BJ,0E,OAII,EAAArd,MAAgC,CAAC,EAuLzB,EAAAq2B,sBAAoC,WACxC,EAAK9wB,SAAS,CAAE0F,WAAOhO,GAC3B,EAEQ,EAAAq5B,aAAmD,SAAC,G,IAAElnB,EAAQ,WAAE2jB,EAAe,kBAC7E,EAA4B,EAAK3tB,MAA/BsK,EAAa,gBAAExF,EAAM,SAEvByJ,EAAgBzJ,GAAUA,EAAOyJ,cACjC5E,EACD4E,GACGA,EAAc5E,sBACd4E,EAAc5E,qBAAqB9D,OACvC,GAEJ,EAAK1F,SAAS,CACV2tB,aAAa,IAGjBxjB,EAAc,CACVN,SAAQ,EACR2jB,gBAAe,IAEdT,MAAK,WACF,EAAK/sB,SAAS,CACVgxB,aAAa,EACbrD,aAAa,GAErB,IACC9B,OAAM,SAACnmB,GACJ,EAAK1F,SAAS,CACV0F,MACIA,EAAM0qB,OAAS,IACT,IAAI,EAAiC1qB,EAAO8D,GAC5C,IAAI,EAA2B9D,GACzCsrB,aAAa,EACbrD,aAAa,GAErB,GACR,EAEQ,EAAAjU,qBAA+C,SAAChU,GAC5C,IAAA8Y,EAAgB,EAAK3e,MAAK,YAElC,EAAKG,SAAS,CAAE0F,MAAK,IACrB8Y,EAAY5E,IAAIlU,GAEZ,EAAKsT,mBACL,EAAKA,kBAAkBa,UAAUnU,EAEzC,E,CACJ,QA7OgC,oBAQ5B,YAAA/F,kBAAA,sBACU,EAOFL,KAAKO,MANL8B,EAAW,cACX0Z,EAAuB,0BACvBC,EAAkB,qBAClB2V,EAAS,YACT5uB,EAAO,UACPvK,EAAgB,mBAGpBm5B,EAAU5uB,GACL0qB,MAAK,SAAC,G,IACK,GADC,OACsCxoB,aAAe,CAAC,GAAC,MAA/C,QAAT,MAA2B,CAAC,EAAC,GAApBoX,SACXG,EAAYT,EAAwB,CAAEU,kBADnB,IAAG,KAAE,IAG9B,EAAK/C,kBAAoB8C,EAEzBA,EAAUE,eAAc,SAACC,GAAW,OAAAX,EAAmBY,OAAOD,EAA1B,IACpCH,EAAUK,gBAAgB,CAAEC,UAAWza,IAEvC7J,EAAiBgB,gBACrB,IACC+yB,MAAMvsB,KAAKoa,qBACpB,EAEA,YAAAvZ,OAAA,WACU,MAAoCb,KAAKO,MAAvCsE,EAAK,QAAEQ,EAAM,SAAEusB,EAAc,iBAErC,IAAK/sB,IAAUQ,GAAUusB,IACrB,OAAO,gBAACC,EAAA,EAAc,CAAC5wB,WAAW,IAGtC,IAAM6wB,EAAsB,EAAuBjtB,GAE/C,EAGAQ,EAAM,aAHU0sB,EAAU,aAAEC,EAAgB,mBAC5CljB,EAEAzJ,EAAM,cADGgX,EACThX,EAAM,eAEV,OACI,uBACI/I,UAAW,IAAW,0CAA2C,CAC7D,eAAe,EAAA6e,EAAA,QAGnB,uBAAK7e,UAAU,eACX,uBAAKA,UAAU,qBACX,gBAAC,GAAc,CAAChB,KAAMuJ,EAAMgE,eAAetM,YAE3C,gBAAC,GAAW,CACRsI,MAAOA,EACP8rB,aAAcoB,EACdnB,mBAAoBoB,IAGvBF,GACG,gBAAC,GAAwB,KACrB,uBACIthB,wBAAyB,CACrBC,OAAQ,aAAmBqhB,IAC9B,YACS,0BAKrB9xB,KAAKiyB,kBAAkB,CACpBC,uBAAwBrtB,EAAMypB,qBAC9BA,sBAAuBzpB,EAAMstB,WAC7BrjB,cAAa,IAGjB,uBAAKxS,UAAU,2BACX,wBAAM81B,OAAQ/V,EAAUxK,OAAO,MAAMmf,OAAO,QACxC,gBAAClpB,EAAA,GAAM,CAACnM,KAAK,SAASoO,QAASjC,EAAA,cAC3B,gBAACtB,EAAA,EAAgB,CAACnH,GAAG,8CAOxCW,KAAKqyB,qBACLryB,KAAKsyB,mBAGlB,EAEQ,YAAAL,kBAAR,SAA0B,G,IACtB3D,EAAoB,uBACpB4D,EAAsB,yBACtBpjB,EAAa,gBAMP,EAA+B9O,KAAK7E,MAAlCkzB,EAAW,cAAEqD,EAAW,cAExB7sB,EAAU7E,KAAKO,MAAK,MAE5B,OACI,gCACK2xB,IAA2BR,GACxB,gBAAC,EAAe,CACZpD,qBAAsBA,EACtBD,YAAaA,EACbF,SAAUnuB,KAAKyxB,aACfvnB,sBAAsB,EAAAsC,EAAA,GAAkCsC,KAI/D4iB,KACI7sB,aAAK,EAALA,EAAOstB,YAAa,gBAAC,EAAyB,MAAM,gBAAC,EAAoB,OAG1F,EAEQ,YAAAE,mBAAR,WACU,MAAoBryB,KAAKO,MAAvBsE,EAAK,QAAEQ,EAAM,SAErB,IAAKR,IAAUQ,EACX,OAAO,KAGH,IAAA2jB,EAA8B3jB,EAAM,SAA1BktB,EAAoBltB,EAAM,gBAE5C,OACI,gBAACsO,EAAA,EAAU,MACN,SAACC,GACE,OAAIA,EAEI,gBAAC8K,EAAA,EAAa,KACV,gBAAC6S,IAAkB,iBACXhC,GAAgC1qB,GAAM,CAC1C2tB,WACI,gBAAC,GAAS,CAACl2B,UAAU,sCAEzBm2B,0BAA0B,EAC1BvhB,UAAWrM,EAAMqM,UACjBqhB,gBAAiBA,EACjBG,cAAe1J,EACfsG,MAAOzqB,EAAM8tB,gBAOzB,yBAAOr2B,UAAU,eACb,gBAACoiB,EAAA,EAAa,KACV,gBAAC4S,IAAY,eACTkB,WAAY,gBAAC,GAAS,OAClBjD,GAAgC1qB,GAAM,CAC1CqM,UAAWrM,EAAMqM,UACjBqhB,gBAAiBA,EACjBG,cAAe1J,EACfsG,MAAOzqB,EAAM8tB,gBAKjC,GAGZ,EAEQ,YAAAL,iBAAR,WACY,IAAAlsB,EAAUpG,KAAK7E,MAAK,MAE5B,OACI,gBAACmiB,EAAA,EAAU,CACPlX,MAAOA,EACPmX,QAASvd,KAAKwxB,sBACd7N,qBAAqB,GAGjC,EAoDJ,EA7OA,CAAgC,EAAA9V,WAqQhC,UAAe,EAAAC,EAAA,IAAc,EAAArS,EAAA,IAtBtB,SACHC,GAGI,MAKAA,EAAO,cAJH,IAAAyF,KAAQwW,EAAQ,WAAE1S,EAAS,YACf2sB,EAAc,0BAE9Bn5B,EACAiD,EAAO,gBAEL2J,EAASJ,IACTJ,EAAQ8S,IAEd,MAAO,CACHtS,OAAM,EACNusB,eAAc,EACdD,UAAWl5B,EAAgBk5B,UAC3B9sB,MAAK,EAEb,GAE6B,CAA0C+tB,KCtQvE,SA9DA,YASI,WAAYryB,GAAZ,MACI,YAAMA,IAAM,K,OATR,EAAAsyB,eAAiB,IAAI,EACrB,EAAAp6B,iBAAkB,IAAA+nB,uBAAsB,CAC5CC,QAAQ,EAAA3O,EAAA,KAAqB4O,YAC7BC,oBAAoB,IAEhB,EAAA3E,oBAAqB,EAAA4E,EAAA,KAyCrB,EAAA/V,cAAwE,SAAC,G,IAC7EN,EAAQ,WACR2jB,EAAe,kBAEPnrB,EAAY,EAAKxC,MAAK,QAE9B,OAAO,EAAKsyB,eAAetF,OAAO,CAC9BxqB,QAAO,EACP+vB,YAAY,EACZvoB,SAAQ,EACR2jB,gBAAe,GAEvB,EA/CI,EAAKhP,aAAc,EAAA2B,EAAA,GACf,CAAEC,OAAQvgB,EAAMwgB,cAChB,CACIC,WAAY,CAAC,sBACbC,WAAY1gB,EAAM0gB,a,CAG9B,CAyCJ,OA5DmC,oBAqB/B,YAAA5gB,kBAAA,WACY,IAAAgC,EAAgBrC,KAAKO,MAAK,YAElC,kBAAyB,WAAI8B,GACjC,EAEA,YAAAxB,OAAA,WACI,OACI,gBAACqgB,EAAA,EAAa,CAACC,OAAQnhB,KAAKkf,aACxB,gBAACkC,EAAA,EAAc,CAAC3oB,gBAAiBuH,KAAKvH,iBAClC,gBAAC4oB,EAAA,EAAgB,CAAC5oB,gBAAiBuH,KAAKvH,iBACpC,gBAAC6oB,EAAA,EAAiB,CAAC7oB,gBAAkBuH,KAAKvH,iBACtC,gBAAC,IAAiB,iBACVuH,KAAKO,MAAK,CACdsK,cAAe7K,KAAK6K,cACpBkR,wBAAyB,EAAAwF,gCACzBvF,mBAAoBhc,KAAKgc,mBACzBkD,YAAalf,KAAKkf,kBAO9C,EAeJ,EA5DA,CAAmC,EAAArR,U,kBCvBnC,IAAK3F,E,iBAAL,SAAKA,GACD,gBACA,oBACA,sCACA,sCACA,oBACA,kBACA,sBACA,wBACA,sBACA,4BACA,0BACA,kBACA,cACA,wBACA,8BACA,kCACA,gDACA,8BACA,0CACA,gDACA,sDACA,gDACA,qBACA,8BACA,sBACA,4BACA,8CACA,sBACA,sBACA,kDACA,8BACA,gBACA,cACA,gBACA,kBACA,kBACA,0BACA,kBACA,oBACA,YACA,sCACA,cACA,gCACA,6BACA,kCACA,8CACA,wDACA,qEACA,4CACA,cACA,oBACA,oBACA,cACA,kBACA,sBACA,oCACA,0CACA,sBACA,wBACA,kCACA,oDACA,WACH,CA/DD,CAAKA,IAAAA,EAAe,KAiEpB,S,kBC/De,SAAS0mB,EAAqBzvB,GACzC,MAA8B,gBAAvBA,EAAQC,UACnB,C,iICiCA,SAAe,IAAApD,OAxBsE,SAAC,G,IAI5EkV,ECdK,SAAuBI,EAAYH,GAC9C,OAAO,IAAA8G,UACH,IAAAtW,KAAIwP,EAAYC,aAAa,SAAC2hB,GAC1B,WAAAl4B,MACIyW,EAAKJ,UAAU8E,eACf,SAACgd,GAAS,OAAAA,EAAK3zB,KAAO0zB,IAAU,IAAAE,OAAMD,EAAKE,SAAjC,GAFd,IAMZ,CDKsBC,CAHd,OACO,eAIX,OACI,uBAAK72B,UAAU,2BACX,8BACI,gBAACkK,EAAA,EAAgB,CACbrF,KAAM,CAAEynB,OAAO,EAAAwK,EAAA,GAAkBliB,IACjC7R,GAAG,0BAIX,0BACK6R,EAAUvP,KAAI,SAACqxB,GAAS,OACrB,sBAAIlxB,IAAKkxB,EAAK3zB,IAAK,UAAG2zB,EAAKK,SAAQ,cAAML,EAAK13B,MADzB,KAMzC,G,kDEhCe,SAAS83B,EAAkBliB,GACtC,OAAO,IAAA/T,QAAO+T,GAAW,SAACoe,EAAO0D,GAAS,OAAA1D,EAAQ0D,EAAKK,QAAb,GAAuB,EACrE,C,kDCFe,SAAS7b,EAA2BvG,GAC/C,QAAKA,EAAalR,SAIX,IAAA2I,OACHuI,GACA,SAACE,GACG,OAAAA,EAAYK,wBACZL,EAAYK,uBAAuBnS,IAEnC8R,EAAYmiB,0BACZniB,EAAYmiB,yBAAyBn3B,QACjC,SAAC,G,MAAW,OAAP,QAAgD,QAAlC,EAAAgV,EAAYK,8BAAsB,eAAEnS,G,IACzDU,MANF,GAQZ,C,kDChBe,SAASsR,EACpBJ,EACAC,GAQA,OANsB,IAAA/T,QAClB8T,GACA,SAACqe,EAAOne,GAAgB,OAAAme,EAAQne,EAAYC,YAAYrR,MAAhC,GACxB,GAGmBmR,EAAU8E,cAAc7Z,QAAO,SAAC62B,GAAS,OAACA,EAAKO,gBAAN,IAAwBxzB,MAC5F,C,8FC4BA,SAAe,IAAA/D,OA7BX,SAAC,G,IAAEmO,EAAW,cAGd,OACI,uBAAK7N,UAAU,mDACX,gBAACk3B,EAAA,EAAM,CAACC,cAAetpB,EAAYpK,OAJpB,KAKV,SAAC,G,IAAEsjB,EAAM,SAAEqQ,EAAM,SAAO,OACrB,gCACI,wBACIp3B,UAAW,+CACP+mB,EACM,iDACA,oDAGTlZ,IAEHkZ,GACE,qBAAG/mB,UAAU,0BAA0BmL,SAAS,EAAA+K,EAAA,GAAekhB,IAC3D,gBAACltB,EAAA,EAAgB,CAACnH,GAAG,sBAbZ,IAqBzC,ICMA,QAjCiF,SAAC,G,IAC9E,IAAAuS,6BAAAA,OAA4B,IAAG,GAAI,EACnCC,EAAM,SAEN,OACI,uBAAKvV,UAAU,sCACVuV,EAAO8hB,UACJ,wBAAMr3B,UAAU,yBACZ,uBACIs3B,IAAK/hB,EAAO1H,YACZ7N,UAAU,qBACVswB,IAAK/a,EAAO8hB,YAIxB,wBAAMr3B,UAAU,uBACXuV,EAAO1H,YACP0H,EAAOgiB,aACJ,wBAAMv3B,UAAU,8BAA8BuV,EAAOgiB,aAExDhiB,EAAOiiB,uBAAyBliB,GAC7B,gBAAC,EAAmC,CAChCzH,YAAa0H,EAAOiiB,yBAIhC,wBAAMx3B,UAAU,wBACZ,gBAACy3B,EAAA,EAAe,CAAChL,OAAQlX,EAAOmiB,QAIhD,C,kGClCA,SAAe,EAAA/jB,EAAA,IANwB,WAAM,OACzC,uBAAKxL,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,0HAF6B,ICM7C,SAAe,EAAAJ,EAAA,IANqB,WAAM,OACtC,uBAAKxL,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,qGAF0B,ICQ1C,IAAY4jB,GAAZ,SAAYA,GACR,gBACA,cACA,oBACA,mBACH,CALD,CAAYA,IAAAA,EAAS,KAgDrB,QA1B6C,SAAC,G,IAC1CjsB,EAAmB,sBACnBtP,EAAQ,WACR6X,EAAI,OACJzG,EAAM,SACNnO,EAAI,OACF,OACF,uBACIW,UAAW,IACP,WACA0L,EACA,CAAE,iBAAkBrM,IAASs4B,EAAUtP,OAAShpB,GAChD,CAAE,kBAAmBA,IAASs4B,EAAUltB,OACxC,CAAE,oBAAqBpL,IAASs4B,EAAUC,SAC1C,CAAE,oBAAqBv4B,IAASs4B,EAAUpP,UAC7C,YACU/a,GAEX,uBAAKxN,UAAU,iCAAiCiU,GAjCxD,SAA2B5U,GACvB,OAAQA,GACJ,KAAKs4B,EAAUltB,MACf,KAAKktB,EAAUpP,QACX,OAAO,gBAACpB,EAAA,EAAS,MAErB,KAAKwQ,EAAUC,QACX,OAAO,gBAAC,EAAW,MAEvB,KAAKD,EAAUtP,KACf,QACI,OAAO,gBAAC,EAAQ,MAE5B,CAoBgEwP,CAAkBx4B,IAE1E,mCAAe,YAAYW,UAAU,mCAAmC2V,KAAK,SACxEvZ,GAfP,C,0DC7BM07B,EAMAC,E,wCAMZ,SAASC,EACL/zB,GAEQ,IAAAjE,EAAqDiE,EAAK,UAA/Cg0B,EAA0Ch0B,EAAK,YAAlCU,EAA6BV,EAAK,UAAvBsJ,EAAkBtJ,EAAK,KAAjBwJ,EAAYxJ,EAAK,QAElE,OAAO,IACH,SACAjE,EACA,CAAE,kBAAmByN,IAAYqqB,EAAcI,SAC/C,CAAE,mBAAoBzqB,IAAYqqB,EAAcK,WAChD,CAAE,iBAAkB1qB,IAAYqqB,EAAcM,QAC9C,CAAE,gBAAiB7qB,IAASwqB,EAAWM,OACvC,CAAE,eAAgB9qB,IAASwqB,EAAWO,MACtC,CAAE,gBAAiB/qB,IAASwqB,EAAWQ,OACvC,CAAE,eAAgBN,GAClB,CACI,kCACIxqB,IAAYqqB,EAAcI,SAAWzqB,IAAYqqB,EAAcM,QAEvE,CAAE,oCAAqC3qB,IAAYqqB,EAAcK,WACjE,CAAE,aAAcxzB,GAExB,EAlCA,SAAYmzB,GACR,oBACA,wBACA,iBACH,CAJD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACR,gBACA,cACA,eACH,CAJD,CAAYA,IAAAA,EAAU,KAqDtB,QAvB+C,SAAC,GAC5C,IAAA37B,EAAQ,WACR4D,EAAS,YACT2Q,EAAQ,WACRsnB,EAAW,cACXtzB,EAAS,YACT4I,EAAI,OACJC,EAAM,SACNnO,EAAI,OACJoO,EAAO,UACJxG,GAAI,cAVqC,gGAW1C,OACF,2CACQA,EAAI,CACRjH,UAAWg4B,EAAa,CAAEh4B,UAAS,EAAEi4B,YAAW,EAAEtzB,UAAS,EAAE4I,KAAI,EAAEE,QAAO,IAAG,YAClED,EACXmD,SAAUA,GAAYhM,EACtBtF,KAAMA,GAAQ,WAEbjD,E,mHChBHo8B,GAAiD,IAAA94B,OACnD,SAAC,G,IAAEgM,EAAmB,sBAAEmgB,EAAS,YAAE/rB,EAAK,QAAE24B,EAAI,OAAEC,EAAQ,WAAEn0B,EAAM,SAAEiJ,EAAM,SAC9D4K,GAAQ,IAAA9b,UACV,WAAM,OACF,gBAACq8B,EAAe,CACZ9M,UAAWA,EACX/rB,MAAOA,EACP24B,KAAMA,EACNC,SAAUA,EACVn0B,OAAQA,GANV,GASN,CAACzE,EAAO24B,EAAMC,EAAU7M,EAAWtnB,IAGvC,OACI,gBAAC,IAAkB,CACfmH,oBAAqBA,EACrBktB,UAAU,IAAAC,OAAMJ,EAAKxV,OAAQnjB,EAAMd,MACnCwO,OAAQA,GAEP4K,EAGb,IACA,SACI,EACA,GADE,IAAM0gB,EAAQ,OAASC,EAAS,QAAKjiB,GAAS,cAAhD,kBACQkiB,EAAQ,OAASC,EAAS,QAAKC,GAAS,cAAhD,kBAEA,WAAapiB,EAAWoiB,IACxB,IAAaJ,EAAUE,IACvB,IAAaD,EAAWE,E,IAQhC,2B,8CA6BA,QA7B8B,oBAC1B,YAAApiB,mBAAA,SAAmB,G,IAASkiB,EAAS,QAC3B,EAGFr1B,KAAKO,MAFI/F,EAAK,cACd,IAAAw6B,SAAAA,OAAQ,IAAG,IAAA1xB,KAAI,IAEK,IAAAyoB,QAAOvxB,GAASA,EAAMi7B,UAAYj7B,OAC9B,IAAAuxB,QAAOsJ,EAAU76B,OACvC66B,EAAU76B,MAAMi7B,UAChBJ,EAAU76B,QAGZw6B,EAASx6B,EAEjB,EAEA,YAAAqG,OAAA,WACU,MAAyCb,KAAKO,MAA5C,IAAA4nB,UAAAA,OAAS,IAAG,UAAO,EAAE/rB,EAAK,QAAEyE,EAAM,SAE1C,OAAIA,EACQA,EAAeb,KAAKO,OAGP,iBAAd4nB,GACA,IAAA0C,eAAc1C,EAAkB/rB,IAGpC,IAAAyuB,eAAc1C,EAAkBnoB,KAAKO,MAChD,EACJ,EA7BA,CAA8B,EAAAsN,WA+B9B,SAAe,IAAA7R,OAnGgD,SAAC,GAC5D,IAAAgM,EAAmB,sBACnB1L,EAAS,YACT6rB,EAAS,YACTtnB,EAAM,SACNiJ,EAAM,SACNkrB,EAAQ,WACLzxB,GAAI,cAPqD,8EAStDmyB,GAAmB,IAAA9xB,cACrB,SAACrD,GAAsB,OACnB,gBAACu0B,GAAU,iBACHv0B,EAAK,CACTyH,oBAAqBA,EACrB1L,UAAWA,EACX6rB,UAAWA,EACX6M,SAAUA,EACVn0B,OAAQA,EACRiJ,OAAQA,IARO,GAWvB,CAAC9B,EAAqB1L,EAAW6rB,EAAWtnB,EAAQiJ,EAAQkrB,IAGhE,OAAO,gBAAC,EAAAW,OAAK,iBAAKpyB,EAAI,CAAE1C,OAAQ60B,IACpC,G,qGCXA,SAtBsB,IAAAE,aAClB,SACI,EACApiB,GADE,IAAAxL,EAAmB,sBAAE1K,EAAK,QAAE+B,EAAE,KAAKkE,GAAI,cAAzC,sCAEC,OACD,gCACI,gBAAC,KAAK,iBACEA,EAAI,CACRjH,UAAW,IACP,gBACA,kCACA0L,GAEJ3I,GAAIA,EACJmU,IAAKA,EACL7X,KAAK,cAET,gBAAC,IAAK,CAACk6B,QAASx2B,GAAK/B,G,yMCOjC,SAxBmB,IAAAs4B,aACf,SACI,EACApiB,GADE,IAAAxL,EAAmB,sBAAE1K,EAAK,QAAE9C,EAAK,QAAE+vB,EAAO,UAAElrB,EAAE,KAAKkE,GAAI,cAAzD,wDAEC,OACD,gCACI,gBAACuyB,EAAA,GAAK,iBACEvyB,EAAI,CACRgnB,QAASA,EACTjuB,UAAW,IACP,aACA,+BACA0L,GAEJ3I,GAAIA,EACJmU,IAAKA,EACL7X,KAAK,QACLnB,MAAOA,KAEX,gBAACu7B,EAAA,EAAK,CAACF,QAASx2B,GAAK/B,G,6BC6JjC,SAAe,IAAAtB,OAAK,EAAAg6B,EAAA,IAlKuD,SAAC,GACrD,sBAAnB,IACAC,EAAI,OACJ33B,EAAS,YACTe,EAAE,KACF/D,EAAI,OACJ,IAAA05B,SAAAA,OAAQ,IAAG,IAAA1xB,KAAI,EACfO,EAAO,UACPqmB,EAAW,cACXxd,EAAsB,yBACtBlS,EAAK,QACF+I,GAAI,cAXiE,4HAahE2yB,EAAgBD,EAAI,YACtBE,GAAmB,IAAAvyB,cACrB,SAACwyB,EAAW1uB,GACR,OAAAstB,GAAS,gCACFttB,GAAK,CACRspB,OAAQ,CACJ11B,KAAI,EACJd,MAAO47B,KAJf,GAOJ,CAACpB,EAAU15B,IAGf,OAAQgD,GACJ,KAAK+3B,EAAA,WACD,OACI,gCACI,uBACI/5B,UAAW,IACP,CAAE,oBAAqBoQ,GACvB,CAAE,0BAA2BA,KAEjC,gBAAC4pB,EAAA,EAAe,OAEpB,2CACS/yB,EAAY,CACjBjH,UAAW,IACP,CAAE,kBAAmBoQ,GACrB,6CACH,YACU,UAAGrN,EAAE,WAChBA,GAAIA,EACJ/D,KAAMA,EACN05B,SAAUA,EACVx6B,MAAiB,OAAVA,EAAiB,GAAKA,IAE5B0vB,GAAe,0BAAQ1vB,MAAM,IAAI0vB,GACjCrmB,GACGA,EAAQlC,KAAI,SAAC,G,IAAErE,EAAK,QAASi5B,EAAW,QAAO,OAC3C,0BAAQz0B,IAAKy0B,EAAa/7B,MAAO+7B,GAC5Bj5B,EAFsC,MASnE,KAAK+4B,EAAA,QACD,OAAKxyB,GAAYA,EAAQ9D,OAKrB,gCACK8D,EAAQlC,KAAI,SAAC,G,IAAErE,EAAK,QAASi5B,EAAW,QAAO,OAC5C,gBAAC,GAAU,iBACHhzB,EAAI,CACRgnB,QAASgM,IAAgB/7B,EACzB6E,GAAI,UAAGA,EAAE,YAAIk3B,GACbz0B,IAAKy0B,EACLj5B,MAAOA,EACPhC,KAAMA,EACN05B,SAAUA,EACVlrB,OAAQ,UAAGzK,EAAE,YAAIk3B,EAAW,UAC5B/7B,MAAO+7B,IAViC,KAL7C,KAqBf,KAAKF,EAAA,WACD,OAAKxyB,GAAYA,EAAQ9D,OAKrB,gCACK8D,EAAQlC,KAAI,SAAC,G,IAAErE,EAAK,QAASi5B,EAAW,QAAO,OAC5C,gBAACC,EAAA,GAAa,iBACNjzB,EAAI,CACRgnB,UAAS9oB,MAAMg1B,QAAQj8B,IAASA,EAAMwL,SAASuwB,GAC/Cl3B,GAAI,UAAGA,EAAE,YAAIk3B,GACbz0B,IAAKy0B,EACLj5B,MAAOA,EACPhC,KAAMA,EACN05B,SAAUA,EACVlrB,OAAQ,UAAGzK,EAAE,YAAIk3B,EAAW,aAC5B/7B,MAAO+7B,IAViC,KAL7C,KAqBf,KAAKF,EAAA,OACD,OACI,gBAAC,KAAe,iBACP9yB,EAAY,CACjBmzB,aAAa,MAIbC,kBAAkB,mCAClBr6B,UAAW,IAAW,0CAA2C,CAC7D,iBAAkBoQ,IAEtBkqB,WAAYV,EACZW,QAAStzB,EAAKxF,IAAM,IAAIW,KAAK,UAAG6E,EAAKxF,IAAG,oBAAgB3F,EACxD0+B,QAASvzB,EAAKzF,IAAM,IAAIY,KAAK,UAAG6E,EAAKzF,IAAG,oBAAgB1F,EACxDkD,KAAMA,EACN05B,SAAUmB,EACVY,gBAAiBb,EAAYlS,cAC7BgT,gBAAgB,mCAChBC,UAAU,IAAAlL,QAAOvxB,GAASA,OAAQpC,KAI9C,KAAKi+B,EAAA,YACD,OACI,gBAACa,EAAA,GAAQ,iBACA3zB,EAAY,CACjBlE,GAAIA,EACJqN,uBAAwBA,EACxBpR,KAAMA,EACN05B,SAAUA,EACVlrB,OAAQ,UAAGzK,EAAE,SACb1D,KAAM2C,EACN9D,MAAOA,KAInB,QACI,OACI,gBAACozB,EAAA,GAAS,iBACFrqB,EAAI,CACRlE,GAAIA,EACJqN,uBAAwBA,EACxBpR,KAAMA,EACN05B,SAAUA,EACV9K,YAAaA,EACbpgB,OAAQ,UAAGzK,EAAE,YACTf,IAAc+3B,EAAA,WAAgC,WAAa,QAE/D16B,KAAM2C,EACN9D,MAAOA,KAI3B,K,yBC7HA,SAAe,IAAAwB,OAlD4D,SAAC,G,IACxE8N,EAAM,SACNqtB,EAAa,gBACbC,EAAc,iBAERC,GAAuB,IAAAzzB,cACzB,SAAC8D,GACGA,EAAM8K,iBACN2kB,GACJ,GACA,CAACA,IAGCG,GAAwB,IAAA1zB,cAC1B,SAAC8D,GACGA,EAAM8K,iBACN4kB,GACJ,GACA,CAACA,IAGL,OACI,sBAAI96B,UAAU,2BACV,sBAAIA,UAAU,0BACV,gBAACkK,EAAA,EAAgB,CAACnH,GAAG,oBAGzB,sBAAI/C,UAAU,0BACV,iCACe,UAAGwN,EAAM,uBACpBkR,KAAK,IACLvT,QAAS4vB,GAET,gBAAC7wB,EAAA,EAAgB,CAACnH,GAAG,yBAI7B,sBAAI/C,UAAU,0BACV,iCACe,UAAGwN,EAAM,wBACpBkR,KAAK,IACLvT,QAAS6vB,GAET,gBAAC9wB,EAAA,EAAgB,CAACnH,GAAG,0BAKzC,ICtCA,IAAMk4B,EAAyE,SAAC,G,IAC5E,IAAAxC,KAAQ52B,EAAM,SAAEohB,EAAM,SACtBlgB,EAAE,KACF/B,EAAK,QACLhC,EAAI,OACJ,IAAA05B,SAAAA,OAAQ,IAAG,IAAA1xB,KAAI,EACfO,EAAO,UACPwkB,EAAI,OACJmP,EAAM,SAEAC,GAAkB,IAAA7zB,cAAY,WAChC,IAAM8zB,GAA0B,IAAAvC,OAAMh3B,EAAQ7C,IAAS,IAEvD,IAAAq8B,YACI9zB,EAAQlC,KAAI,SAAC,GAAc,OAAP,OAAO,IAC3B+1B,GACFxM,SAAQ,SAAC0M,GAAQ,OAAAvP,EAAKuP,EAAL,IAEnB5C,GAAS,IAAAG,OAAMh3B,EAAQ7C,GAC3B,GAAG,CAACA,EAAM05B,EAAUnxB,EAASwkB,EAAMlqB,IAE7B05B,GAAmB,IAAAj0B,cAAY,aACD,IAAAuxB,OAAMh3B,EAAQ7C,IAAS,IAEzC4vB,SAAQ,WAAM,OAAAsM,EAAO,EAAP,IAE5BxC,GAAS,IAAAG,OAAMh3B,EAAQ7C,GAC3B,GAAG,CAACA,EAAM05B,EAAUwC,EAAQr5B,IAEtB25B,GAAoB,IAAAl0B,cACtB,SAAC8D,GACG,IAAMgwB,GAA0B,IAAAvC,OAAMh3B,EAAQ7C,IAAS,GACjD,EAAqBoM,EAAMspB,OAAzBx2B,EAAK,QAAS,UAGlB6tB,EAAK7tB,GAELg9B,EAAOE,EAAc53B,QAAQtF,IAGjCw6B,GAAS,IAAAG,OAAMh3B,EAAQ7C,GAC3B,GACA,CAACA,EAAM05B,EAAU3M,EAAMmP,EAAQr5B,IAGnC,OACI,gBAAC45B,EAAA,EAAkB,CAAC7C,UAAU,IAAAC,OAAM5V,EAAQjkB,KAAS,IAAA65B,OAAM5V,EAAQjkB,GAAMyE,QACpEzC,EAEAuG,EAAQ9D,OAAS,GACd,gBAAC,EAAoB,CACjBo3B,cAAeM,EACfL,eAAgBS,EAChB/tB,OAAQzK,IAIhB,gBAAC,EAAY,CACTf,UAAW+3B,EAAA,WACXh3B,GAAIA,EACJ/D,KAAMA,EACN05B,SAAU8C,EACVj0B,QAASA,EACTrJ,OAAO,IAAA26B,OAAMh3B,EAAQ7C,IAAS,KAGlC,gBAAC08B,EAAA,EAAc,CACXC,QAAS,UAAG54B,QAAAA,EAAM/D,EAAI,wBACtBA,KAAMA,EACNwO,OAAQ,WAAG,IAAA0f,WAAUluB,GAAK,0BAI1C,EA0BA,SAAe,IAAAU,OAxBgE,SAAC,G,IAC5EqD,EAAE,KACF/B,EAAK,QACLhC,EAAI,OACJ05B,EAAQ,WACRnxB,EAAO,UAEDq0B,GAAc,IAAAt0B,cAChB,SAACu0B,GAAuC,OACpC,gBAACZ,GAAsB,eACnBl4B,GAAIA,EACJ/B,MAAOA,EACPhC,KAAMA,EACN05B,SAAUA,EACVnxB,QAASA,IACL,IAAAu0B,MAAKD,EAAa,CAAC,OAAQ,MAAO,OAAQ,YAPd,GAUxC,CAAC94B,EAAI/B,EAAOhC,EAAM05B,EAAUnxB,IAGhC,OAAO,gBAAC,EAAAw0B,WAAU,CAAC/8B,KAAMA,EAAMuF,OAAQq3B,GAC3C,I,eCqCA,SAAe,IAAAl8B,OA7HoD,SAAC,G,IAChE,IAAAI,MACIkC,EAAS,YACT3C,EAAI,OACJ28B,EAAM,SACNh9B,EAAI,OACGi9B,EAAU,QACjBl7B,EAAQ,WACRwG,EAAO,UACP9F,EAAG,MACHD,EAAG,MACH06B,EAAS,YAEbxrB,EAAe,kBACfgoB,EAAQ,WACR9K,EAAW,cACXuO,EAAO,UACP3rB,EAAY,eACZxP,EAAK,QACLyP,EAAU,aACVL,EAAsB,yBAEhBgsB,EAAeD,GAAWn9B,EAC1B+C,EAAY2O,EAAkB,UAAGA,EAAe,YAAI1R,GAASA,EAC7Dq9B,EAAoChzB,QACtC+G,KACK,IAAA1G,UAAS,CAAC,OAAQ,WAAY,WAAY,OAAQ,aAAc1H,KAC5DA,IAEPs6B,GAAiB,IAAAhgC,UACnB,WAAM,OACF,gBAACm9B,EAAA,EAAK,CACFF,QAAS6C,EACTr5B,GAAI,UAAGq5B,EAAY,UACnBhsB,uBAAwBisB,GAEvBr7B,GAASi7B,GACRl7B,GACE,gCACK,IACD,yBAAOf,UAAU,sCACb,gBAACkK,EAAA,EAAgB,CAACnH,GAAG,2BAXnC,GAiBN,CAACq5B,EAAcH,EAAYl7B,EAAUs7B,EAAmCr7B,IAGtEu7B,GAAuB,IAAAjgC,UAAQ,WACjC,MAAkB,SAAd0F,EACa,YAAT3C,EACO06B,EAAA,UAGP,IAAArwB,UAAS1K,EAAM,WAAY,IAAA0K,UAAS1K,EAAM,OACnC+6B,EAAA,YAGJiC,EAASjC,EAAA,WAAgCA,EAAA,OAG7C/3B,CACX,GAAG,CAACA,EAAW3C,EAAM28B,EAAQh9B,IAEvBw9B,GAAc,IAAAl1B,cAChB,SAAC,G,IAAExH,EAAK,QAA2B,OAC/B,gBAAC,GAAY,iBACLA,EAAK,mBACQ,UAAGs8B,EAAY,kBAAUA,EAAY,wBACtDhC,aAAc5pB,EACdxO,UAAWu6B,EACXx5B,GAAIq5B,EACJhsB,uBAAwBisB,EACxB56B,IAAKA,EACLy6B,UAAWA,QAAapgC,EACxB0F,IAAKA,EACL+F,QAASA,GAAWA,EAAQk1B,MAC5B7O,YAAaA,GAAgBrmB,GAAWA,EAAQm1B,YAChDC,KAAMp1B,GAAYA,EAAgBo1B,OAbP,GAgBnC,CACIP,EACA36B,EACAy6B,EACA16B,EACA+F,EACAqmB,EACA2O,EACA/rB,IAIR,OACI,uBACIxQ,UAAW,IACP,qBACA,CAAE,sBAAuBq8B,GACzB5rB,IAGHzO,IAAc+3B,EAAA,WACX,gBAAC,EAAsB,CACnBh3B,GAAIq5B,EACJp7B,MAAOs7B,EACPt9B,KAAM+C,EACN22B,SAAUA,EACVnxB,QAAUA,GAAWA,EAAQk1B,OAAU,KAG3C,gBAAC/K,EAAA,EAAS,CACN3uB,GAAIq5B,EACJhkB,MAAOokB,EACPpsB,uBAAwBisB,EACxBr7B,MAAOs7B,EACPt9B,KAAM+C,EACN22B,SAAUA,IAK9B,G,kBC1JA,IAAKqB,E,iBAAL,SAAKA,GACD,kBACA,sBACA,kBACA,sBACA,sBACA,wBACA,cACA,gBACA,aACH,CAVD,CAAKA,IAAAA,EAAoB,KAYzB,S,+ECeA,SAlBiB,IAAAT,aACb,SACI,EACApiB,GADE,IAAAxL,EAAmB,sBAAEtP,EAAQ,WAAE4D,EAAS,YAAEiyB,EAAM,SAAEzkB,EAAM,SAAKvG,GAAI,cAAnE,kEAEC,OACD,6CACQA,EAAI,CACRjH,UAAWA,GAAa,IAAW,gBAAiB0L,GAAoB,YAC7D8B,EACX0J,IAAKA,IAEJ+a,EAED,uBAAKjyB,UAAU,aAAa5D,G,4GCsDxC,SAAe,IAAAsD,OAjE4B,SAAC,GAAE,IAAAM,EAAS,YAAEwN,EAAM,SAAKvG,GAAI,cAA5B,wBAClCiQ,GAAM,IAAA0lB,QAAO,CAAExmB,cAAc,IAAAC,eAE7BwmB,EAAe,W,QACTlkB,EAAYzB,EAAIyB,QAAQvC,aAAY,QAE5C,GAAKuC,EAAL,CAIA,IAMMmkB,EAAmBnkB,EAAQ5Q,cANL,CACxB,2BACA,8BACA,6BAG4EnE,KAAK,OAErF,GAAIk5B,EAAkB,CAClBA,EAAiBtkB,MAAM,CAAEukB,eAAe,IAExC,IACiC,QAA7B,EAAAD,EAAiBE,oBAAY,SAAEC,eAAe,CAC1CC,SAAU,SACVC,MAAO,SACPC,OAAQ,U,CAEd,SAC+B,QAA7B,EAAAN,EAAiBE,oBAAY,SAAEC,gB,GAG3C,EAEMI,GAAsB,IAAA/1B,cACxB,IAAAg2B,aAAW,SAACC,GACR,OAAO,WACHA,GAAa,GAGbp5B,YAAW,WAAM,OAAA04B,GAAA,GACrB,CACJ,IACA,CAACA,IAGC1lB,GAAgB,IAAA7P,cAClB,IAAAg2B,aAAW,SAAC,G,IAAEC,EAAY,eACtB,OACI,uBAAKrmB,IAAKA,EAAIyB,QAAQvC,cAClB,gBAAC,EAAA/F,MAAU,iBACHpJ,EAAI,CACRjH,UAAWA,EAAS,YACTwN,EACXgwB,YAAU,EACVC,gBAAiBJ,EAAoBE,MAIrD,KAAE,oBACDv9B,EAAWq9B,EAAqB7vB,IAAW,IAAA3L,QAAOoF,IAAK,IAG5D,OAAO,gBAAC,IAAY,KAAEkQ,EAC1B,G,6FCHA,SAAe,IAAAzX,OAnDsC,SAAC,G,IAClDgM,EAAmB,sBACnBimB,EAAY,eACZ3wB,EAAK,QACL03B,EAAQ,WACR/R,EAAM,SACNvO,EAAK,QACLpZ,EAAI,OACJ+D,EAAE,KACFqN,EAAsB,yBAEhBwrB,GAAc,IAAAt0B,cAChB,SAACrD,GAAU,OACP,gCACKmM,GAA0BgI,EAAMnU,GAEhCjD,IAA2B,mBAAVA,EAAuBA,EAAMhC,GAAQgC,GACtD2wB,IAAiB3wB,GACd,gBAAC,IAAK,CACFu4B,QAASv6B,EACT+D,GAAI,UAAGA,QAAAA,EAAM/D,EAAI,UACjBoR,uBAAwBA,GAEvBuhB,IAIPvhB,GAA0BgI,EAAMnU,GAElC,gBAAC,IAAc,CACX03B,QAAS,UAAG54B,QAAAA,EAAM/D,EAAI,wBACtBA,KAAMA,EACNwO,OAAQ,WAAG,IAAA0f,WAAUluB,GAAK,0BAG7B2nB,EAvBE,GA0BX,CAAC3lB,EAAO2wB,EAAc5uB,EAAIqV,EAAOpZ,EAAM2nB,EAAQvW,IAGnD,OACI,gBAAC,IAAc,CACX1E,oBAAqBA,EACrB1M,KAAMA,EACN05B,SAAUA,EACVn0B,OAAQq3B,GAGpB,G,+EChCA,SAAe,IAAAl8B,OAxBwD,SAAC,G,IACpEgM,EAAmB,sBACnBtP,EAAQ,WACR4D,EAAS,YACT44B,EAAQ,WACRprB,EAAM,SACJ,OACF,gBAAC,aAAoB,MAChB,SAAC,G,IAAEkwB,EAAW,cAAO,OAClB,uBACI19B,UACIA,GACA,IAAW,aAAc0L,EAAqB,CAC1C,oBAAqBktB,GAAY8E,IACnC,YAEKlwB,GAEVpR,EAVa,GAFxB,G,uECqBN,SAAe,IAAAsD,OA7BgD,SAAC,G,IAAEV,EAAI,OAAEwO,EAAM,SAAEmuB,EAAO,UAC7EgC,GAAgB,IAAAr2B,cAClB,SAACrE,GAAoB,OACjB,sBAAIjD,UAAU,oBAAmB,YAAYwN,GACzC,sBAAIxN,UAAU,oBACV,qCACc,SACVA,UAAU,qBACVu5B,QAASv6B,EACT+D,GAAI44B,EACJhmB,KAAK,SAEJ1S,IAVI,GAerB,CAAC04B,EAAS38B,EAAMwO,IAGpB,OACI,gBAAC,aAAoB,MAChB,SAAC,GACE,OADW,eACI,gBAAC,EAAAowB,aAAY,CAAC5+B,KAAMA,EAAMuF,OAAQo5B,GAAjD,GAIhB,G,qECvBaE,GAAc,IAAAhiC,eAA+B,CACtD6hC,aAAa,EACbH,aAAc,EAAAv2B,OAiBlB,SAAe,IAAAtH,OAd4C,SAAC,G,IACxDtD,EAAQ,WACR,IAAA0hC,mBAAAA,OAAkB,IAAG,GAAK,EAEpB,GAA8B,IAAAlzB,UAASkzB,GAAtCJ,EAAW,KAAEH,EAAY,KAC1BQ,GAAe,IAAAzhC,UAAQ,WAAM,OAAGohC,YAAW,EAAEH,aAAY,EAA5B,GAAiC,CAACG,IAErE,OACI,gBAACG,EAAYG,SAAQ,CAAC9/B,MAAO6/B,IACxB,IAAAE,YAAW7hC,GAAYA,EAAS,CAAEshC,YAAW,EAAEH,aAAY,IAAMnhC,EAG9E,G,0FCEA,SAzBc,IAAAk9B,aACV,SACI,EACApiB,GADE,IAAAlX,EAAS,YAAEwN,EAAM,SAAEogB,EAAW,cAAE5uB,EAAI,OAAEoR,EAAsB,yBAAKnJ,GAAI,cAAvE,sEAKA,OACI,2EAEWA,GAAI,CACPjH,UAAW,IAAWA,EAAW,CAC7B,iBACIoQ,KAA2B,IAAA1G,UARP,CAAC,eAAgB,kBAQgC1K,KAE7EA,KAAI,iBAEGwO,EACXogB,YAAaxd,EAAyB,IAAMwd,EAC5C1W,IAAKA,IAGjB,G,+ECAJ,QAtB6C,SAAC,GAC1C,IAAA9a,EAAQ,WACR4D,EAAS,YACTk+B,EAAM,SACN1wB,EAAM,SACN4C,EAAsB,yBACnBnJ,GAAI,cANmC,qEAOxC,OACF,0CACSA,EAAI,CACTjH,UAAY,IACR,CAAE,iBAAkBoQ,GACpBpQ,GAAa,aACb,CAAE,YAAak+B,GACf,gCACH,YACW1wB,IAEVpR,E,gFCCV,QApB+C,SAAC,GAC5C,IAAAA,EAAQ,WACR4D,EAAS,YACTk+B,EAAM,SACN1wB,EAAM,SACHvG,GAAI,cALqC,4CAM1C,OACF,2CACQA,EAAI,CACRjH,UAAW,IACPA,GAAa,cACb,CAAE,YAAak+B,GACf,CAAE,sCAAuCA,IAC5C,YACU1wB,IAEVpR,E,gFCST,SAxBiB,IAAAk9B,aACb,SACI,EACApiB,GADE,IAAAxL,EAAmB,sBAAE8B,EAAM,SAAExN,EAAS,YAAEoQ,EAAsB,yBAAKnJ,GAAI,cAAzE,uEAGA,OACI,6CACQA,EAAI,CACRjH,UACIA,GACA,IACI,CAAE,oBAAqBoQ,GACvB,aACA,+BACA1E,GACH,YAEM8B,EACX0J,IAAKA,IAGjB,G,yFCSJ,SA3BkB,IAAAoiB,aACd,SACI,EAOApiB,GANI,IAAAxL,EAAmB,sBACnB0E,EAAsB,yBACtB+tB,EAAa,gBACb,IAAA9+B,KAAAA,OAAI,IAAG,SAAM,EACV4H,GAAI,cALX,yEAQC,OACD,gBAAC,KAAK,iBACEA,EAAI,CACRjH,UAAW,IACP,aACA,+BACA,CAAE,oBAAqBm+B,GACvB,CAAE,sCAAuCA,GACzCzyB,GAEJ0E,uBAAwBA,EACxB8G,IAAKA,EACL7X,KAAMA,I,qDCflB,SAAe,E,SAAA,IAfqB,WAAM,OACtC,yCACoB,oBAAmB,YACzB,YACV8I,OAAO,KACPwN,KAAK,MACL/B,QAAQ,YACRC,MAAM,KACNC,MAAM,8BAEN,yBAAO/Q,GAAG,qBAAmB,QAC7B,wBAAMgR,EAAE,mCAAmC3O,KAAK,UAAUrC,GAAG,SAX3B,G,kDCM1C,SAAe,E,SAAA,IAN4B,WAAM,OAC7C,uBAAKoF,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,iDAFiC,G,kDCMjD,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAK5L,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,0GAF2B,G,kDCM3C,SAAe,E,SAAA,IANsB,WAAM,OACvC,uBAAK5L,OAAO,KAAKyL,QAAQ,YAAYC,MAAM,KAAKC,MAAM,8BAClD,wBAAMC,EAAE,qGAF2B,G,+CCD/BqqB,E,wCAaG,SAASzqB,EACpB0R,GAEA,OAAO,IAAA3lB,OAAK,SAAC,GAAE,IAAAgM,EAAmB,sBAAE6B,EAAI,OAAEC,EAAM,SAAKvG,GAAI,cAA5C,yCAAmD,OAC5D,uBACIjH,UAAW,IACP,OACA0L,EACA6B,IAAS6wB,EAAS/F,MAAQ,cAAgB,KAC1C9qB,IAAS6wB,EAAS7F,MAAQ,cAAgB,KAC1ChrB,IAAS6wB,EAASC,OAAS,eAAiB,MAC/C,YACU7wB,GAEX,gBAAC6X,GAAiB,iBAAMpe,I,GAGpC,EA9BA,SAAYm3B,GACR,oBACA,gBACA,kBACA,eACH,CALD,CAAYA,IAAAA,EAAQ,I,gFCWdE,EAAc,SAACx0B,GAAiB,MAAe,mBAAfA,EAAM9K,IAAN,EAetC,QAb6D,SAAC,G,IAAEqjB,EAAe,kBAAEjmB,EAAQ,WAAO,OAC5F,gBAACwoB,EAAA,EAAa,CACVwB,SACI,uBAAKpmB,UAAU,uBACX,gBAACkK,EAAA,EAAgB,CAACnH,GAAG,mCAG7BlD,OAAQy+B,GAER,gBAAC,EAAAC,SAAQ,CAACnY,SAAU/D,GAAmB,gBAACkT,EAAA,EAAc,CAAC5wB,WAAS,KAAMvI,GATkB,C,4DCyBhG,QA/B+D,SAAC,G,IAC5DA,EAAQ,WACRsI,EAAsB,yBACtB85B,EAAyB,4BACzB75B,EAAS,YAET,OAAID,GAA0B85B,EAEtB,gCACI,gBAAC,IAAc,CAAC75B,UAAWA,IAC1B65B,GAA6B75B,EAAY,KACtC,uBACIuD,MAAO,CACHu2B,QAAS/5B,GAA0BC,EAAY,YAAS7I,IAG3DM,IAQjB,uBAAK4D,UAAU,4BACV5D,EACAuI,GAAa,uBAAK3E,UAAU,6CAGzC,C,iDCrBA,SAAe,IAAAN,OAZgD,SAAC,GAC5D,OADuE,YAMnE,uBAAKM,UAAU,0CAA0CkI,MAAO,CAAEC,OAAQ,MACtE,uBAAKnI,UAAU,8CALZ,IAQf,G,oICmFA,QA5E6C,SAAC,GAC1C,IAAA5D,EAAQ,WACR,IAAAsiC,iBAAAA,OAAgB,IAAG,UAAO,EAC1B/X,EAAM,SACNE,EAAM,SACN8X,EAAyB,4BACzBC,EAAuB,0BACvBlY,EAAwB,2BACxB,IAAAM,eAAAA,OAAc,IAAG,IAAAhgB,KAAI,EACrB,IAAA63B,sBAAAA,OAAqB,IAAG,GAAK,EAC1B53B,GAAI,cAVmC,6KAYpC63B,GAAc,IAAAx3B,cAChB,SAAC8D,GACG4b,EAAe5b,EACnB,GACA,CAAC4b,IAGL,OACI,gBAAC,KAAU,iBACH/f,EAAI,CACR83B,aAAa,EACbC,kBAAkB,kBAClBh/B,UAAW,CACPi/B,KAAM,IACF,yCACAvY,GAEJwY,UAAW,mBACXC,YAAa,sBAEjBC,eAAgB,IAChBpY,eAAgBA,EAChBqY,iBAAkB,CACdJ,KAAM,eACNC,UAAW,0BACXC,YAAa,6BAEjBG,kBAAkB,EAClBC,2BAA2B,IAE3B,uBAAKv/B,UAAW,IAAW,eAAgB2+B,IACtC9X,EAEAgY,GAEG,qBACI7+B,UAAU,cAAa,YACb,qBACV0e,KAAK,IACLvT,SAAS,OAAe2zB,IAEvBJ,GAAoB,wBAAM1+B,UAAU,aAAa0+B,GAElD,gBAAC,IAAS,QAKtB,uBACI1+B,UAAW,IAAW,aAAc4+B,GAAwB,YAClD,cAETxiC,GAGJiN,QAAQsd,IACL,uBAAK3mB,UAAU,eAAc,YAAW,gBACnC2mB,GAKrB,C,oEC7EA,QAZyD,SAAC,G,IAAEvqB,EAAQ,WAAEsP,EAAmB,sBAAO,OAC5F,sBACI1L,UAAW,IACP,wDACA0L,GACH,YACS,iBAETtP,EARuF,C,iFCH1FojC,EAAU,CACZzK,MAAO,QACP0K,OAAQ,iCAA0B,IAAgB,QAStD,SAAe,IAAA//B,OAN4E,SAAC,G,IACxFtD,EAAQ,WAER,OAAO,gBAAC,IAAK,CAACojC,QAASA,GAAUpjC,EACrC,ICEA,SAAe,IAAAsD,OAZwE,SAAC,G,IACpFtD,EAAQ,WAER,OACI,gBAAC,EAAU,MACN,SAAC8E,GACE,OAAO9E,EAAS8E,EAAQu+B,OAC5B,GAGZ,G,2CCbO,IAAMC,EAAmB,IACnBC,EAAyB,G,0DCStC,YACI,WAAY17B,GAAZ,MACI,YAAMA,IAAM,K,OAeR,EAAAmzB,OAAiC,SAAChsB,GAC9B,IAAA2b,EAAW,EAAKloB,MAAK,OAE7BuM,EAAM8K,iBAEN,EAAK9R,SAAS,CAAE2iB,QAASA,GAC7B,EAnBI,EAAKloB,MAAQ,CAAEkoB,SAAU9iB,EAAMkzB,e,CACnC,CAmBJ,OAxBoC,oBAOhC,YAAA5yB,OAAA,WAII,OAAOnI,EAHcsH,KAAKO,MAAK,UAGf,CACZ8iB,OAHerjB,KAAK7E,MAAK,OAIzBu4B,OAAQ1zB,KAAK0zB,QAErB,EASJ,EAxBA,C,SAAoC7lB,U,0DCA9BnK,GAAgB,IAAAvL,oBAA6CC,GAEnE,UAEO,SAAS8jC,IACZ,IAAMxgC,GAAU,IAAA+H,YAAWC,GAE3B,IAAKhI,EACD,MAAM,IAAIqL,MAAM,yDAGpB,OAAOrL,CACX,C,yGCwCA,QAhDA,uE,OACI,EAAAP,MAAuC,CAAC,EAEhC,EAAAghC,iBAAkB,SAGlB,EAAAC,iBAAkB,IAAAxC,aAAW,SAACv0B,GAClC,MAAO,CACH2jB,SAAU3jB,GAAS,IAAAg3B,uBAAsBh3B,QAAUjN,EACnD69B,KAAM5wB,EACA,CACI6wB,YAAa7wB,EAAOi3B,sBAExBlkC,EACNwF,SAAU,EAAKu+B,gBAEvB,I,CA8BJ,QA9C6B,oBAkBzB,YAAA97B,kBAAA,sBACY5H,EAAoBuH,KAAKO,MAAK,gBAEtCP,KAAKu8B,YAAc9jC,EAAgBO,WAC/B,SAAC,G,IAAEmI,EAAI,OACH,EAAKT,SAAS,CAAE2E,OAAQlE,EAAK8D,aACjC,IACA,SAAC,GAAa,OAAP,OAAYA,WAAL,GAEtB,EAEA,YAAAtE,qBAAA,WACQX,KAAKu8B,cACLv8B,KAAKu8B,cACLv8B,KAAKu8B,iBAAcnkC,EAE3B,EAEA,YAAAyI,OAAA,WACY,IAAAnI,EAAasH,KAAKO,MAAK,SACvB8E,EAAWrF,KAAK7E,MAAK,OAE7B,OACI,gBAAC,aAAsB,CAACX,MAAOwF,KAAKo8B,gBAAgB/2B,IAC/C3M,EAGb,EACJ,EA9CA,CAA6B,EAAAmV,U,qECO7B,SAAe,E,SAAA,IAZoE,SAAC,G,IAChF1M,EAAI,OACJ9B,EAAE,KACFzB,EAAQ,WACN,OACF,wBACI4S,wBAAyB,CACrBC,OAAQ,aAAmB7S,EAASV,UAAUmC,EAAI8B,GAAO,CAAEq7B,SAAU,CAAC,cAH5E,G,kDCCN,SAAe,E,SAAA,IANwE,SAAC,G,IACpFr7B,EAAI,OACJ9B,EAAE,KACFzB,EAAQ,WACN,uCAAGA,EAASV,UAAUmC,EAAI8B,GAA1B,G,qECXOs7B,EAAkB,K,6woCCE/B,IAAIN,EAEW,SAASrqB,IAQpB,OAPAqqB,EACIA,QAAAA,GACA,IAAAO,uBAAsB,CAClBC,eAAgBF,EAChBG,qBAAsB,GAIlC,CAIO,SAASC,EAA0Bx3B,GAStC,OARA82B,GAAkB,IAAAO,wBAAsB,gCACjCr3B,GAAM,CACTy3B,cAAez3B,EAAOob,OACtBsc,oBAAqB13B,EAAO03B,oBAC5BJ,eAAgBF,EAChBG,qBAAsB,IAI9B,C,wECnBe,SAASpV,EAIpBhG,EACA3d,GAEA,OAAO,SAA8B8d,GAC3B,MAAqD9d,GAAW,CAAC,EAA/D,IAAA/E,kBAAAA,OAAiB,IAAG,KAAE,EAAE,IAAA2oB,UAAAA,OAAS,IAAG,aAAM,UAAI,EAEhD7F,GAAqD,IAAA5lB,OAAK,SAACuE,GAAU,OACvE,gBAACohB,GAAiB,iBAAKphB,GADgD,IAIrEshB,EAAqB,SAACthB,GACxB,IAAM7E,GAAU,IAAA+H,YAAW+d,GACrBkG,GAAgB,IAAAC,QAAOjsB,GAAS,SAAClB,EAAOsH,GAC1C,OAAA2lB,EAAUjtB,EAAOsH,EAAjB,IAGJ,IAAI,IAAA7G,SAAQysB,GACR,OAAO,KAGX,IAAMzF,GAAc,gCAAKyF,GAAkBnnB,GAE3C,OAAO,gBAACqhB,GAAuB,iBAAKK,GACxC,EAQA,OANInjB,IACA+iB,EAAmBK,YAAc,UAAGpjB,EAAiB,YACjD6iB,EAAkBO,aAAeP,EAAkBrmB,KAAI,MAIxDumB,CACX,CACJ,C,kDCjCA,SALmD,E,SAAA,GAAgB,IAAe,CAC9E/iB,kBAAmB,eACnB2oB,UAAW,SAACjtB,EAAOsH,GAAQ,MAAQ,aAARA,KAAwBtH,CAAxB,G,kDCG/B,SAL2C,E,SAAA,GAAgB,IAAe,CACtEsE,kBAAmB,WACnB2oB,UAAW,SAACjtB,EAAOsH,GAAQ,MAAQ,SAARA,KAAoBtH,CAApB,G,kDCG/B,SALmD,E,SAAA,GAAgB,IAAe,CAC9EsE,kBAAmB,eACnB2oB,UAAW,SAACjtB,EAAOsH,GAAQ,MAAQ,aAARA,KAAwBtH,CAAxB,G,0DCHzBinB,GAAkB,IAAAtpB,oBAAgDC,GAEjE,SAAS4kC,IACZ,IAAMthC,GAAU,IAAA+H,YAAWge,GAE3B,IAAK/lB,EACD,MAAM,IAAIqL,MAAM,6DAGpB,OAAOrL,CACX,CAEA,S,2FCNA,YAiBI,WAAY6E,GAAZ,MACI,YAAMA,IAAM,K,OAVR,EAAA67B,iBAAkB,IAAAxC,aACtB,SAACnhC,EAAkCsG,GAC/B,MAAO,CACHtG,gBAAe,EACfsG,cAAa,EAErB,IAMA,EAAK5D,MAAQ,CACT4D,cAAewB,EAAM9H,gBAAgBwkC,Y,CAE7C,CA2BJ,OAlD8C,oBAyB1C,YAAA58B,kBAAA,sBACY5H,EAAoBuH,KAAKO,MAAK,gBAEtCP,KAAKu8B,YAAc9jC,EAAgBO,WAAU,SAAC+F,GAC1C,SAAK2B,SAAS,CAAE3B,cAAa,GAA7B,GAER,EAEA,YAAA4B,qBAAA,WACQX,KAAKu8B,cACLv8B,KAAKu8B,cACLv8B,KAAKu8B,iBAAcnkC,EAE3B,EAEA,YAAAyI,OAAA,WACU,MAAgCb,KAAKO,MAAnC9H,EAAe,kBAAEC,EAAQ,WACzBqG,EAAkBiB,KAAK7E,MAAK,cAEpC,OACI,gBAAC,aAAwB,CAACX,MAAOwF,KAAKo8B,gBAAgB3jC,EAAiBsG,IAClErG,EAGb,EACJ,EAlDA,CAA8C,EAAAmV,U,6DCV/B,SAASye,EAEpBze,EACAoa,GAEA,OAAO9D,OAAO/I,QAAO,SAAC7a,GAAkB,uBAACsN,GAAS,iBAAKtN,GAAf,GAA0B,CAAE0nB,WAAU,GAClF,C,wECmBA,QAzBqE,SAAC,G,IAAEvvB,EAAQ,WAAEuI,EAAS,YACjFO,EACF,uBAAKlF,UAAU,iBACX,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,kFAEnB,uBAAKA,UAAU,yBACX,uBAAKA,UAAU,wBACX,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,oBAEnB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,qBAGvB,uBAAKA,UAAU,sBACX,uBAAKA,UAAU,sBAM/B,OAAO,gBAAC,KAAe,iBAAK,CAAE5D,SAAQ,EAAEuI,UAAS,EAAEO,SAAQ,IAC/D,C,yFCOA,QAxB4F,SAAC,GAQzF,I,IAPAwG,EAAmB,sBACnBtP,EAAQ,WACR,IAAAuI,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAg4B,KAAAA,OAAI,IAAG,IAAC,EAEFiE,EAAU,GAEPr7B,EAAI,EAAGA,EAAIo3B,EAAMp3B,GAAK,EAC3Bq7B,EAAQ7U,KACJ,uBAAK/rB,UAAU,qBAAqBwF,IAAK,iCAA0BD,IAC/D,uBAAKvF,UAAU,8BACf,uBAAKA,UAAU,mCAK3B,IAAMkF,EACF,uBAAKlF,UAAW,IAAW0L,EAAqB,uBAAwBk1B,GAG5E,OAAO,gBAAC,KAAe,iBAAK,CAAExkC,SAAQ,EAAEuI,UAAS,EAAEO,SAAQ,IAC/D,C,kDCxBaO,EAA2D,SAAC,G,IACrErJ,EAAQ,WACR,IAAAuI,UAAAA,OAAS,IAAG,GAAI,EAChB,IAAAe,mBAAAA,OAAkB,IAAG,GAAK,EAC1BR,EAAQ,WAEF27B,EAAqBn7B,IAAuBf,EAElD,OACI,gCACKA,GAAaO,EACbmE,QAAQjN,IAAaykC,GAClB,uBACI7gC,UAAU,mBACVkI,MACIvD,EAAY,CAAEoF,SAAU,WAAYC,KAAM,OAAQC,IAAK,cAAYnO,GAGtEM,GAKrB,C","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/address/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/common/dom/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/common/hoc/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/dom/preventDefault.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorBoundary.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/hoc/createInjectHoc.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormProvider.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingOverlay.tsx","webpack://checkout/./packages/core/src/app/ui/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/utils/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\r\nimport { createContext } from 'react';\r\n\r\nexport interface AnalyticsEvents {\r\n    checkoutBegin(): void;\r\n    trackStepCompleted(step: string): void;\r\n    trackStepViewed(step: string): void;\r\n    orderPurchased(): void;\r\n    customerEmailEntry(email: string): void;\r\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\r\n    customerSuggestionExecute(): void;\r\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\r\n    showShippingMethods(): void;\r\n    selectedPaymentMethod(methodName?: string): void;\r\n    clickPayButton(payload?: { [key: string]: unknown }): void;\r\n    paymentRejected(): void;\r\n    paymentComplete(): void;\r\n    exitCheckout(): void;\r\n}\r\n\r\nexport interface AnalyticsContextProps {\r\n    analyticsTracker: AnalyticsEvents;\r\n}\r\n\r\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\r\n\r\nexport default AnalyticsContext;\r\n","export default function createAnalyticsService<T>(\r\n    createFn: (args?: any) => T,\r\n    createArguments: unknown[] = [],\r\n) {\r\n    let analyticsTracker: T;\r\n\r\n    return () => {\r\n        if (analyticsTracker) {\r\n            return analyticsTracker;\r\n        }\r\n\r\n        analyticsTracker = createFn(...createArguments);\r\n\r\n        return analyticsTracker;\r\n    };\r\n}\r\n","import {\r\n    BodlEventsPayload,\r\n    BodlService,\r\n    CheckoutService,\r\n    createBodlService,\r\n    createStepTracker,\r\n    StepTracker,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { ReactNode, useMemo } from 'react';\r\n\r\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\r\nimport createAnalyticsService from './createAnalyticsService';\r\n\r\ninterface AnalyticsProviderProps {\r\n    checkoutService: CheckoutService;\r\n    children: ReactNode;\r\n}\r\n\r\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\r\n    const getStepTracker = useMemo(\r\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\r\n        [checkoutService],\r\n    );\r\n    const getBodlService = useMemo(\r\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\r\n        [checkoutService],\r\n    );\r\n\r\n    const checkoutBegin = () => {\r\n        getStepTracker().trackCheckoutStarted();\r\n        getBodlService().checkoutBegin();\r\n    };\r\n\r\n    const trackStepCompleted = (currentStep: string) => {\r\n        getStepTracker().trackStepCompleted(currentStep);\r\n        getBodlService().stepCompleted(currentStep);\r\n    };\r\n\r\n    const trackStepViewed = (step: string) => {\r\n        getStepTracker().trackStepViewed(step);\r\n    };\r\n\r\n    const orderPurchased = () => {\r\n        getStepTracker().trackOrderComplete();\r\n        getBodlService().orderPurchased();\r\n    };\r\n\r\n    const customerEmailEntry = (email: string) => {\r\n        getBodlService().customerEmailEntry(email);\r\n    };\r\n\r\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\r\n        getBodlService().customerSuggestionInit(payload);\r\n    };\r\n\r\n    const customerSuggestionExecute = () => {\r\n        getBodlService().customerSuggestionExecute();\r\n    };\r\n\r\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\r\n        getBodlService().customerPaymentMethodExecuted(payload);\r\n    };\r\n\r\n    const showShippingMethods = () => {\r\n        getBodlService().showShippingMethods();\r\n    };\r\n\r\n    const selectedPaymentMethod = (methodName?: string) => {\r\n        getBodlService().selectedPaymentMethod(methodName);\r\n    };\r\n\r\n    const clickPayButton = (payload: BodlEventsPayload) => {\r\n        getBodlService().clickPayButton(payload);\r\n    };\r\n\r\n    const paymentRejected = () => {\r\n        getBodlService().paymentRejected();\r\n    };\r\n\r\n    const paymentComplete = () => {\r\n        getBodlService().paymentComplete();\r\n    };\r\n\r\n    const exitCheckout = () => {\r\n        getBodlService().exitCheckout();\r\n    };\r\n\r\n    const analyticsTracker: AnalyticsEvents = {\r\n        checkoutBegin,\r\n        trackStepCompleted,\r\n        trackStepViewed,\r\n        orderPurchased,\r\n        customerEmailEntry,\r\n        customerSuggestionInit,\r\n        customerSuggestionExecute,\r\n        customerPaymentMethodExecuted,\r\n        showShippingMethods,\r\n        selectedPaymentMethod,\r\n        clickPayButton,\r\n        paymentRejected,\r\n        paymentComplete,\r\n        exitCheckout,\r\n    };\r\n\r\n    return (\r\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\r\n            {children}\r\n        </AnalyticsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AnalyticsProvider;\r\n","enum AddressType {\r\n    Billing = 'billing',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default AddressType;\r\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\r\nimport { find, isEmpty } from 'lodash';\r\n\r\nimport { LocalizedGeography } from '../geography';\r\n\r\nconst localizeAddress = <T1 extends Address>(\r\n    address: T1,\r\n    countries?: Country[],\r\n): T1 & LocalizedGeography => {\r\n    const country = find(countries, { code: address.countryCode });\r\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\r\n    const state = find(states, { code: address.stateOrProvinceCode });\r\n\r\n    return {\r\n        ...address,\r\n        localizedCountry: country ? country.name : address.country,\r\n        localizedProvince: state ? state.name : address.stateOrProvince,\r\n    };\r\n};\r\n\r\nexport default localizeAddress;\r\n","import {\r\n    Address,\r\n    CheckoutSelectors,\r\n    Country,\r\n    FormField,\r\n    ShippingInitializeOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { isEmpty } from 'lodash';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../checkout';\r\n\r\nimport AddressType from './AddressType';\r\nimport isValidAddress from './isValidAddress';\r\nimport localizeAddress from './localizeAddress';\r\nimport './StaticAddress.scss';\r\n\r\nexport interface StaticAddressProps {\r\n    address: Address;\r\n    type?: AddressType;\r\n}\r\n\r\nexport interface StaticAddressEditableProps extends StaticAddressProps {\r\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\ninterface WithCheckoutStaticAddressProps {\r\n    countries?: Country[];\r\n    fields?: FormField[];\r\n}\r\n\r\nconst StaticAddress: FunctionComponent<\r\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\r\n> = ({ countries, fields, address: addressWithoutLocalization }) => {\r\n    const address = localizeAddress(addressWithoutLocalization, countries);\r\n    const isValid = !fields\r\n        ? !isEmpty(address)\r\n        : isValidAddress(\r\n              address,\r\n              fields.filter((field) => !field.custom),\r\n          );\r\n\r\n    return !isValid ? null : (\r\n        <div className=\"vcard checkout-address--static\">\r\n            {(address.firstName || address.lastName) && (\r\n                <p className=\"fn address-entry\">\r\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\r\n                    <span className=\"family-name\">{address.lastName}</span>\r\n                </p>\r\n            )}\r\n\r\n            {(address.phone || address.company) && (\r\n                <p className=\"address-entry\">\r\n                    <span className=\"company-name\">{`${address.company} `}</span>\r\n                    <span className=\"tel\">{address.phone}</span>\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"adr\">\r\n                <p className=\"street-address address-entry\">\r\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\r\n                    {address.address2 && (\r\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\r\n                    )}\r\n                </p>\r\n\r\n                <p className=\"address-entry\">\r\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\r\n                    {address.localizedProvince && (\r\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\r\n                    )}\r\n                    {address.postalCode && (\r\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\r\n                    )}\r\n                    {address.localizedCountry && (\r\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport function mapToStaticAddressProps(\r\n    context: CheckoutContextProps,\r\n    { address, type }: StaticAddressProps,\r\n): WithCheckoutStaticAddressProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getBillingCountries, getBillingAddressFields, getShippingAddressFields },\r\n        },\r\n    } = context;\r\n\r\n    return {\r\n        countries: getBillingCountries(),\r\n        fields:\r\n            type === AddressType.Billing\r\n                ? getBillingAddressFields(address.countryCode)\r\n                : type === AddressType.Shipping\r\n                ? getShippingAddressFields(address.countryCode)\r\n                : undefined,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\r\n","import { memoize } from '@bigcommerce/memoize';\r\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\r\n\r\nimport getCustomFormFieldsValidationSchema, {\r\n    FormFieldsValidationSchemaOptions,\r\n} from './getCustomFormFieldsValidationSchema';\r\n\r\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\r\n\r\nexport interface FormFieldValues {\r\n    [key: string]: string | { [id: string]: any };\r\n}\r\n\r\nexport default memoize(function getFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return object({\r\n        ...formFields\r\n            .filter(({ custom }) => !custom)\r\n            .reduce((schema, { name, required, label }) => {\r\n                schema[name] = string();\r\n\r\n                if (required) {\r\n                    schema[name] = schema[name]\r\n                        .trim()\r\n                        .required(translate('required', { label, name }));\r\n                }\r\n\r\n                schema[name] = schema[name].matches(\r\n                    WHITELIST_REGEXP,\r\n                    translate('invalid', { name, label }),\r\n                );\r\n\r\n                return schema;\r\n            }, {} as { [key: string]: StringSchema }),\r\n    }).concat(\r\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\r\n    ) as ObjectSchema<FormFieldValues>;\r\n});\r\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from 'lodash';\r\nimport { ObjectSchema } from 'yup';\r\n\r\nimport {\r\n    FormFieldValues,\r\n    getFormFieldsValidationSchema,\r\n    TranslateValidationErrorFunction,\r\n} from '../formFields';\r\n\r\nexport interface AddressFormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    language?: LanguageService;\r\n}\r\n\r\nexport function getTranslateAddressError(\r\n    language?: LanguageService,\r\n): TranslateValidationErrorFunction {\r\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\r\n        countryCode: 'address.country',\r\n        firstName: 'address.first_name',\r\n        lastName: 'address.last_name',\r\n        company: 'address.company_name',\r\n        address1: 'address.address_line_1',\r\n        address2: 'address.address_line_2',\r\n        city: 'address.city',\r\n        stateOrProvince: 'address.state',\r\n        stateOrProvinceCode: 'address.state',\r\n        postalCode: 'address.postal_code',\r\n        phone: 'address.phone_number',\r\n    };\r\n\r\n    return (type, { label, name, min, max }) => {\r\n        if (!language) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'required') {\r\n            if (requiredFieldErrorTranslationIds[name]) {\r\n                return language.translate(\r\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\r\n                );\r\n            }\r\n\r\n            return language.translate(`address.custom_required_error`, { label });\r\n        }\r\n\r\n        if (type === 'max' && max) {\r\n            return language.translate(`address.custom_max_error`, { label, max });\r\n        }\r\n\r\n        if (type === 'min' && min) {\r\n            return language.translate(`address.custom_max_error`, { label, min });\r\n        }\r\n\r\n        if (type === 'invalid') {\r\n            return language.translate(`address.invalid_characters_error`, { label });\r\n        }\r\n    };\r\n}\r\n\r\nexport default memoize(function getAddressFormFieldsValidationSchema({\r\n    formFields,\r\n    language,\r\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\r\n    return getFormFieldsValidationSchema({\r\n        formFields,\r\n        translate: getTranslateAddressError(language),\r\n    });\r\n});\r\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\r\nimport mapAddressToFormValues from './mapAddressToFormValues';\r\n\r\nexport default function isValidAddress(address: Address, formFields: FormField[]): boolean {\r\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\r\n\r\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\r\n}\r\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\r\n    customFields: { [id: string]: any };\r\n};\r\n\r\nexport default function mapAddressToFormValues(\r\n    fields: FormField[],\r\n    address?: Address,\r\n): AddressFormValues {\r\n    const values = {\r\n        ...fields.reduce(\r\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\r\n                if (custom) {\r\n                    if (!addressFormValues.customFields) {\r\n                        addressFormValues.customFields = {};\r\n                    }\r\n\r\n                    const field =\r\n                        address &&\r\n                        address.customFields &&\r\n                        address.customFields.find(({ fieldId }) => fieldId === name);\r\n\r\n                    const fieldValue = field && field.fieldValue;\r\n\r\n                    addressFormValues.customFields[name] = getValue(\r\n                        fieldType,\r\n                        fieldValue,\r\n                        defaultValue,\r\n                    );\r\n\r\n                    return addressFormValues;\r\n                }\r\n\r\n                if (isSystemAddressFieldName(name)) {\r\n                    addressFormValues[name] = (address && address[name]) || '';\r\n                }\r\n\r\n                return addressFormValues;\r\n            },\r\n            {} as AddressFormValues,\r\n        ),\r\n    };\r\n\r\n    values.shouldSaveAddress = false\r\n\r\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\r\n    if (values.stateOrProvince === undefined) {\r\n        values.stateOrProvince = '';\r\n    }\r\n\r\n    if (values.stateOrProvinceCode === undefined) {\r\n        values.stateOrProvinceCode = '';\r\n    }\r\n\r\n    return values;\r\n}\r\n\r\nfunction getValue(\r\n    fieldType?: string,\r\n    fieldValue?: string | string[] | number,\r\n    defaultValue?: string,\r\n): string | string[] | number | Date | undefined {\r\n    if (fieldValue === undefined || fieldValue === null) {\r\n        return getDefaultValue(fieldType, defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\r\n        return fieldValue ? new Date(fieldValue) : undefined;\r\n    }\r\n\r\n    return fieldValue;\r\n}\r\n\r\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\r\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\r\n        return new Date(defaultValue);\r\n    }\r\n\r\n    if (fieldType === DynamicFormFieldType.checkbox) {\r\n        return [];\r\n    }\r\n\r\n    return defaultValue || '';\r\n}\r\n\r\nfunction isSystemAddressFieldName(\r\n    fieldName: string,\r\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\r\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\r\n}\r\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\r\n\r\nimport { createInjectHoc } from '../common/hoc';\r\n\r\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\r\n\r\nexport default withAnalytics;\r\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { AddressType, StaticAddress } from '../address';\r\nimport { withCheckout } from '../checkout';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nexport interface StaticBillingAddressProps {\r\n    address: Address;\r\n}\r\n\r\ninterface WithCheckoutStaticBillingAddressProps {\r\n    fields: FormField[];\r\n    payments?: CheckoutPayment[];\r\n}\r\n\r\nconst StaticBillingAddress: FunctionComponent<\r\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\r\n> = ({ address, payments = EMPTY_ARRAY }) => {\r\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\r\n        return (\r\n            <p>\r\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\r\n            </p>\r\n        );\r\n    }\r\n\r\n    return <StaticAddress address={address} type={AddressType.Billing} />;\r\n};\r\n\r\nexport function mapToStaticBillingAddressProps(\r\n    { checkoutState }: CheckoutContextProps,\r\n    { address }: StaticBillingAddressProps,\r\n): WithCheckoutStaticBillingAddressProps | null {\r\n    const {\r\n        data: { getBillingAddressFields, getCheckout },\r\n    } = checkoutState;\r\n\r\n    const checkout = getCheckout();\r\n\r\n    return {\r\n        fields: getBillingAddressFields(address.countryCode),\r\n        payments: checkout && checkout.payments,\r\n    };\r\n}\r\n\r\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\r\n","import CheckoutSupport from './CheckoutSupport';\r\n\r\nexport default class NoopCheckoutSupport implements CheckoutSupport {\r\n    isSupported(): boolean {\r\n        return true;\r\n    }\r\n}\r\n","import { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\r\n    constructor(message: string) {\r\n        super({\r\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\r\n            message,\r\n        });\r\n\r\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport } from '../checkout';\r\n\r\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\r\n\r\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\r\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\r\n\r\n    isSupported(...ids: string[]): boolean {\r\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\r\n\r\n        if (unsupportedMethods.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        throw new EmbeddedCheckoutUnsupportedError(\r\n            this.langService.translate('embedded_checkout.unsupported_error', {\r\n                methods: unsupportedMethods.join(', '),\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\r\n\r\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\r\nimport isEmbedded from './isEmbedded';\r\n\r\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'chasepay', 'googlepay', 'klarna', 'masterpass'];\r\n\r\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\r\n    return isEmbedded()\r\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\r\n        : new NoopCheckoutSupport();\r\n}\r\n","import React, { PureComponent, ReactNode } from 'react';\r\n\r\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\r\n\r\nimport { LoadingOverlay } from '../ui/loading';\r\n\r\nexport interface EmptyCartMessageProps {\r\n    waitInterval?: number;\r\n    loginUrl: string;\r\n}\r\n\r\ninterface EmptyCartMessageState {\r\n    isWaiting: boolean;\r\n}\r\n\r\nexport default class EmptyCartMessage extends PureComponent<\r\n    EmptyCartMessageProps,\r\n    EmptyCartMessageState\r\n> {\r\n    state: EmptyCartMessageState = {\r\n        isWaiting: true,\r\n    };\r\n\r\n    private waitToken?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { waitInterval } = this.props;\r\n\r\n        this.waitToken = setTimeout(() => {\r\n            this.setState({ isWaiting: false });\r\n        }, waitInterval);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.waitToken);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { loginUrl } = this.props;\r\n        const { isWaiting } = this.state;\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\r\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n","enum CustomerViewType {\r\n    Guest = 'guest',\r\n    Login = 'login',\r\n    SuggestedLogin = 'suggested_login',\r\n    EnforcedLogin = 'enforced_login',\r\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\r\n    CreateAccount = 'create_account',\r\n}\r\n\r\nexport default CustomerViewType;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\ninterface WalletButtonsProps {\r\n    buttonsCount: number;\r\n}\r\n\r\nconst WalletButtonContainerSkeleton: FunctionComponent<\r\n    LoadingSkeletonProps & WalletButtonsProps\r\n> = ({ buttonsCount, children, isLoading }) => {\r\n    const renderWhileLoading = true;\r\n    const skeleton = (\r\n        <div className=\"checkoutRemote customer-skeleton\">\r\n            {Array(buttonsCount)\r\n                .fill(0)\r\n                .map((_v, i) => (\r\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\r\n};\r\n\r\nexport default WalletButtonContainerSkeleton;\r\n","interface ApplePayWindow extends Window {\r\n    ApplePaySession: void;\r\n}\r\n\r\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\r\n    return 'ApplePaySession' in window;\r\n}\r\n","import { isApplePayWindow } from \"../common/utility\";\r\n\r\nconst APPLE_PAY = 'applepay';\r\n\r\n// TODO: The API should tell UI which payment method offers its own checkout button\r\nexport const SUPPORTED_METHODS: string[] = [\r\n    'amazonpay',\r\n    APPLE_PAY,\r\n    'braintreevisacheckout',\r\n    'braintreepaypal',\r\n    'braintreepaypalcredit',\r\n    'chasepay',\r\n    'masterpass',\r\n    'paypalcommerce',\r\n    'paypalcommercevenmo',\r\n    'paypalcommercecredit',\r\n    'googlepayadyenv2',\r\n    'googlepayadyenv3',\r\n    'googlepayauthorizenet',\r\n    'googlepaybnz',\r\n    'googlepaybraintree',\r\n    'googlepaycheckoutcom',\r\n    'googlepaycybersourcev2',\r\n    'googlepayorbital',\r\n    'googlepaystripe',\r\n    'googlepaystripeupe',\r\n    'googlepayworldpayaccess',\r\n];\r\n\r\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\r\n    return methodIds.filter((methodId) => {\r\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\r\n            return false;\r\n        }\r\n\r\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\r\n    });\r\n}\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { PureComponent } from 'react';\r\n\r\nconst WALLET_BUTTON_HEIGHT = 36;\r\n\r\nexport interface CheckoutButtonProps {\r\n    containerId: string;\r\n    methodId: string;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n}\r\n\r\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\r\n    componentDidMount() {\r\n        const { containerId, initialize, isShowingWalletButtonsOnTop, methodId, onError } = this.props;\r\n\r\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\r\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\r\n            : {};\r\n\r\n        initialize({\r\n            methodId,\r\n            [methodId]: {\r\n                ...heightOption,\r\n                container: containerId,\r\n                onError,\r\n            },\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { deinitialize, methodId } = this.props;\r\n\r\n        deinitialize({ methodId });\r\n    }\r\n\r\n    render() {\r\n        const { containerId } = this.props;\r\n\r\n        return <div id={containerId} />;\r\n    }\r\n}\r\n","import { noop } from 'lodash';\r\n\r\nimport { isBuyNowCart } from '../common/utility';\r\n\r\nexport default function navigateToOrderConfirmation(\r\n    orderId?: number,\r\n): Promise<never> {\r\n    let url: string;\r\n\r\n    if (orderId && isBuyNowCart()) {\r\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\r\n    } else {\r\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\r\n    }\r\n\r\n    window.location.replace(url);\r\n\r\n    return new Promise(noop);\r\n}\r\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\r\n\r\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\r\n\r\nimport { navigateToOrderConfirmation } from '../../checkout';\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    initialize,\r\n    onError,\r\n    ...rest\r\n}) => {\r\n    const localeContext = useContext(LocaleContext);\r\n    const initializeOptions = useCallback(\r\n        (options: CustomerInitializeOptions) =>\r\n            initialize({\r\n                ...options,\r\n                applepay: {\r\n                    container: rest.containerId,\r\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\r\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\r\n                    onError,\r\n                    onPaymentAuthorize: navigateToOrderConfirmation,\r\n                },\r\n            }),\r\n        [initialize, localeContext, onError, rest.containerId],\r\n    );\r\n\r\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\r\n};\r\n\r\nexport default ApplePayButton;\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\r\n    useEffect(() => {\r\n        beautifyAmazonButton();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"AmazonPayContainer\">\r\n            <CheckoutButton {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AmazonPayV2Button;\r\n\r\nconst beautifyAmazonButton = (): void => {\r\n    if (!document.querySelector('.checkout-button-container')) {\r\n        return;\r\n    }\r\n\r\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\r\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\r\n\r\n    if (container && amazonButton) {\r\n        amazonButton.style.height = '36px';\r\n        return;\r\n    }\r\n\r\n    setTimeout(beautifyAmazonButton, 10);\r\n}\r\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\r\n\r\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\r\n\r\nimport { navigateToOrderConfirmation } from '../../checkout';\r\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\r\n\r\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    methodId,\r\n    initialize,\r\n    onError,\r\n    ...rest\r\n}) => {\r\n    const localeContext = useContext(LocaleContext);\r\n    const initializeOptions = useCallback(\r\n        (options: CustomerInitializeOptions) =>\r\n            initialize({\r\n                ...options,\r\n                [methodId]: {\r\n                    container: rest.containerId,\r\n                    onError,\r\n                    onComplete: navigateToOrderConfirmation,\r\n                },\r\n            }),\r\n        [initialize, localeContext, onError, rest.containerId],\r\n    );\r\n\r\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\r\n};\r\n\r\nexport default PayPalCommerceButton;\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nimport CheckoutButton from \"./CheckoutButton\";\r\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\r\n\r\ninterface CheckoutButtonV1ResolverProps {\r\n    methodId: string;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n}\r\n\r\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\r\n    isShowingWalletButtonsOnTop= false,\r\n    onError,\r\n    methodId,\r\n    ...rest\r\n}) => {\r\n    switch (methodId) {\r\n        case 'applepay':\r\n            return (\r\n                <ApplePayButton\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    methodId={methodId}\r\n                    onError={onError}\r\n                    {...rest}\r\n                />\r\n            );\r\n\r\n        case 'amazonpay':\r\n            return (\r\n                <AmazonPayV2Button\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    methodId={methodId}\r\n                    onError={onError}\r\n                    {...rest}\r\n                />\r\n            );\r\n\r\n        case 'paypalcommerce':\r\n        case 'paypalcommercecredit':\r\n            return (\r\n                <PayPalCommerceButton\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    methodId={methodId}\r\n                    onError={onError}\r\n                    {...rest}\r\n                />\r\n            );\r\n    }\r\n\r\n    return <CheckoutButton\r\n            containerId={`${methodId}CheckoutButton`}\r\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\r\n            key={methodId}\r\n            methodId={methodId}\r\n            onError={onError}\r\n            {...rest}\r\n        />;\r\n};\r\n\r\nexport default CheckoutButtonV1Resolver;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\n\r\nimport { withCheckout } from '../checkout';\r\n\r\nimport { getSupportedMethodIds } from './getSupportedMethods';\r\nimport resolveCheckoutButton from './resolveCheckoutButton';\r\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\r\n\r\ninterface CheckoutButtonContainerProps {\r\n    isPaymentStepActive: boolean;\r\n    checkEmbeddedSupport(methodIds: string[]): void;\r\n    onUnhandledError(error: Error): void;\r\n}\r\n\r\ninterface WithCheckoutCheckoutButtonContainerProps {\r\n    availableMethodIds: string[];\r\n    checkoutState: CheckoutSelectors;\r\n    checkoutService: CheckoutService;\r\n    isLoading: boolean;\r\n    isPaypalCommerce: boolean;\r\n    initializedMethodIds: string[];\r\n}\r\n\r\nconst sortMethodIds = (methodIds:string[]): string[] => {\r\n    const order = [\r\n        'applepay',\r\n        'braintreepaypalcredit',\r\n        'braintreepaypal',\r\n        'paypalcommercevenmo',\r\n        'paypalcommercecredit',\r\n        'paypalcommerce',\r\n    ];\r\n\r\n    return methodIds.sort((a, b) => order.indexOf(b) - order.indexOf(a));\r\n}\r\n\r\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\r\n    {\r\n        availableMethodIds,\r\n        checkoutService,\r\n        checkoutState,\r\n        checkEmbeddedSupport,\r\n        isLoading,\r\n        isPaypalCommerce,\r\n        isPaymentStepActive,\r\n        initializedMethodIds,\r\n        onUnhandledError,\r\n    }) => {\r\n    const { language } = useLocale();\r\n\r\n    const methodIds = isLoading ? availableMethodIds : initializedMethodIds;\r\n\r\n    try {\r\n        checkEmbeddedSupport(methodIds);\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n\r\n    if (isPaypalCommerce && isPaymentStepActive) {\r\n        return null;\r\n    }\r\n\r\n    const renderButtons = () => availableMethodIds.map((methodId) => {\r\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\r\n\r\n        if (!ResolvedCheckoutButton) {\r\n            return <CheckoutButtonV1Resolver\r\n                deinitialize={checkoutService.deinitializeCustomer}\r\n                initialize={checkoutService.initializeCustomer}\r\n                isShowingWalletButtonsOnTop={true}\r\n                key={methodId}\r\n                methodId={methodId}\r\n                onError={onUnhandledError}\r\n            />\r\n        }\r\n\r\n        return <ResolvedCheckoutButton\r\n                    checkoutService={checkoutService}\r\n                    checkoutState={checkoutState}\r\n                    containerId={`${methodId}CheckoutButton`}\r\n                    key={methodId}\r\n                    language={language}\r\n                    methodId={methodId}\r\n                    onUnhandledError={onUnhandledError}\r\n                />;\r\n    });\r\n\r\n    return (\r\n        <div className='checkout-button-container'\r\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\r\n        >\r\n            <p>\r\n                <TranslatedString id=\"remote.start_with_text\" />\r\n            </p>\r\n            <div className={classNames({\r\n                'checkout-buttons--1': methodIds.length === 1,\r\n                'checkout-buttons--2': methodIds.length === 2,\r\n                'checkout-buttons--3': methodIds.length === 3,\r\n                'checkout-buttons--4': methodIds.length === 4,\r\n                'checkout-buttons--5': methodIds.length === 5,\r\n                'checkout-buttons--n': methodIds.length > 5,\r\n            })}>\r\n                <WalletButtonsContainerSkeleton buttonsCount={methodIds.length} isLoading={isLoading}>\r\n                    <div className=\"checkoutRemote\">\r\n                        {renderButtons()}\r\n                    </div>\r\n                </WalletButtonsContainerSkeleton>\r\n            </div>\r\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapToCheckoutButtonContainerProps({\r\n    checkoutState,\r\n    checkoutService,\r\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\r\n    const {\r\n        data: {\r\n            getConfig,\r\n            getCustomer,\r\n        },\r\n        statuses: {\r\n            isInitializedCustomer,\r\n        },\r\n        errors: {\r\n            getInitializeCustomerError,\r\n        }\r\n     } = checkoutState;\r\n    const config = getConfig();\r\n    const availableMethodIds = getSupportedMethodIds(config?.checkoutSettings.remoteCheckoutProviders ?? []);\r\n    const customer = getCustomer();\r\n\r\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\r\n        return null;\r\n    }\r\n\r\n    const isLoading = availableMethodIds.filter(\r\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\r\n    ).length !== availableMethodIds.length;\r\n    const initializedMethodIds = availableMethodIds.filter((methodId) => isInitializedCustomer(methodId));\r\n    const paypalCommerceIds = ['paypalcommerce', 'paypalcommercecredit', 'paypalcommercevenmo'];\r\n    const isPaypalCommerce = availableMethodIds.some(id => paypalCommerceIds.includes(id));\r\n\r\n    return {\r\n        checkoutService,\r\n        checkoutState,\r\n        availableMethodIds: sortMethodIds(availableMethodIds),\r\n        initializedMethodIds,\r\n        isLoading,\r\n        isPaypalCommerce,\r\n    }\r\n}\r\n\r\nexport default withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer);\r\n","import { ComponentType } from 'react';\r\n\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { resolveComponent } from '../common/resolver';\r\n\r\nexport default function resolveCheckoutButton(\r\n    resolveId: CheckoutButtonResolveId,\r\n): ComponentType<CheckoutButtonProps> | undefined {\r\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\r\n        resolveId,\r\n        require('../generated/checkoutButtons'),\r\n    );\r\n}\r\n","import { useContext, useMemo } from 'react';\r\n\r\nimport AnalyticsContext from './AnalyticsContext';\r\n\r\nconst useAnalytics = () => {\r\n    const analyticsContext = useContext(AnalyticsContext);\r\n\r\n    if (!analyticsContext) {\r\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\r\n    }\r\n\r\n    return useMemo(\r\n        () => ({\r\n            analyticsTracker: analyticsContext.analyticsTracker,\r\n        }),\r\n        [analyticsContext],\r\n    );\r\n};\r\n\r\nexport default useAnalytics;\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { stopPropagation } from '../../common/dom';\r\nimport { Button } from '../../ui/button';\r\nimport { IconBolt } from '../../ui/icon';\r\n\r\nexport interface BoltCheckoutSuggestionProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    methodId: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\r\n    isExecutingPaymentMethodCheckout,\r\n    methodId,\r\n    deinitializeCustomer,\r\n    executePaymentMethodCheckout,\r\n    initializeCustomer,\r\n    onUnhandledError = noop,\r\n}) => {\r\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    useEffect(() => {\r\n        deinitializeCustomer({ methodId });\r\n\r\n        try {\r\n            initializeCustomer({\r\n                methodId,\r\n                bolt: {\r\n                    onInit: (hasBoltAccount, email) => {\r\n                        setShowSuggestion(hasBoltAccount);\r\n\r\n                        if (email) {\r\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\r\n                        }\r\n                    },\r\n                },\r\n            });\r\n        } catch (error) {\r\n            onUnhandledError(error);\r\n        }\r\n\r\n        return () => {\r\n            deinitializeCustomer({ methodId });\r\n        };\r\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\r\n\r\n    if (!showSuggestion) {\r\n        return null;\r\n    }\r\n\r\n    const handleActionClick = async () => {\r\n        await executePaymentMethodCheckout({ methodId });\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\r\n            <p className=\"checkoutSuggestion-message\">\r\n                <TranslatedString\r\n                    data={{\r\n                        provider: 'Bolt',\r\n                        providerFlow: 'Bolt Checkout',\r\n                    }}\r\n                    id=\"customer.suggestion_text\"\r\n                />\r\n            </p>\r\n            <Button\r\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\r\n                data-test=\"suggestion-action-button\"\r\n                isLoading={isExecutingPaymentMethodCheckout}\r\n                onClick={handleActionClick}\r\n            >\r\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\r\n                <TranslatedString\r\n                    data={{ providerFlow: 'Bolt Checkout' }}\r\n                    id=\"customer.suggestion_action\"\r\n                />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(BoltCheckoutSuggestion);\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function stopPropagation<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.stopPropagation();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../../checkout';\r\nimport { PaymentMethodId } from '../../payment/paymentMethod';\r\n\r\n\r\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\r\n\r\nexport interface CheckoutSuggestionProps {\r\n    onUnhandledError?(error: Error): void;\r\n}\r\n\r\nexport interface WithCheckoutSuggestionsProps {\r\n    isExecutingPaymentMethodCheckout: boolean;\r\n    providerWithCustomCheckout?: string;\r\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n    executePaymentMethodCheckout(\r\n        options: ExecutePaymentMethodCheckoutOptions,\r\n    ): Promise<CheckoutSelectors>;\r\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CheckoutSuggestion: FunctionComponent<\r\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\r\n> = ({\r\n    providerWithCustomCheckout,\r\n    executePaymentMethodCheckout,\r\n    ...rest\r\n}) => {\r\n    const { analyticsTracker } = useAnalytics();\r\n\r\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\r\n        analyticsTracker.customerSuggestionExecute();\r\n\r\n        return executePaymentMethodCheckout(options);\r\n    }\r\n\r\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\r\n        return <BoltCheckoutSuggestion\r\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\r\n                    methodId={providerWithCustomCheckout}\r\n                    {...rest}\r\n                />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst mapToCheckoutSuggestionProps = ({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\r\n    const {\r\n        data: { getCheckout, getConfig },\r\n        statuses: { isExecutingPaymentMethodCheckout },\r\n    } = checkoutState;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n\r\n    if (!checkout || !config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\r\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\r\n        initializeCustomer: checkoutService.initializeCustomer,\r\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\r\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\r\n    };\r\n};\r\n\r\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\r\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { isApplePayWindow } from '../common/utility';\r\n\r\nimport CheckoutButton from './CheckoutButton';\r\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\r\n\r\nconst APPLE_PAY = 'applepay';\r\n\r\n// TODO: The API should tell UI which payment method offers its own checkout button\r\nexport const SUPPORTED_METHODS: string[] = [\r\n    'amazonpay',\r\n    APPLE_PAY,\r\n    'braintreevisacheckout',\r\n    'braintreepaypal',\r\n    'braintreepaypalcredit',\r\n    'chasepay',\r\n    'masterpass',\r\n    'paypalcommerce',\r\n    'paypalcommercevenmo',\r\n    'paypalcommercecredit',\r\n    'googlepayadyenv2',\r\n    'googlepayadyenv3',\r\n    'googlepayauthorizenet',\r\n    'googlepaybnz',\r\n    'googlepaybraintree',\r\n    'googlepaycheckoutcom',\r\n    'googlepaycybersourcev2',\r\n    'googlepayorbital',\r\n    'googlepaystripe',\r\n    'googlepaystripeupe',\r\n    'googlepayworldpayaccess',\r\n];\r\n\r\nexport interface CheckoutButtonListProps {\r\n    methodIds?: string[];\r\n    isInitializing?: boolean;\r\n    isShowingWalletButtonsOnTop?: boolean;\r\n    hideText?: boolean;\r\n    checkEmbeddedSupport?(methodIds: string[]): void;\r\n    deinitialize(options: CustomerRequestOptions): void;\r\n    initialize(options: CustomerInitializeOptions): void;\r\n    onError?(error: Error): void;\r\n}\r\n\r\nexport const filterUnsupportedMethodIds = (methodIds:string[]): string[] => {\r\n    return (methodIds).filter((methodId) => {\r\n        if (methodId === APPLE_PAY && !isApplePayWindow(window)) {\r\n            return false;\r\n        }\r\n\r\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\r\n    });\r\n}\r\n\r\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\r\n    checkEmbeddedSupport,\r\n    onError,\r\n    isInitializing = false,\r\n    isShowingWalletButtonsOnTop= false,\r\n    methodIds,\r\n    hideText = false,\r\n    ...rest\r\n}) => {\r\n    const supportedMethodIds = filterUnsupportedMethodIds(methodIds ?? []);\r\n\r\n    if (supportedMethodIds.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (checkEmbeddedSupport) {\r\n        try {\r\n            checkEmbeddedSupport(supportedMethodIds);\r\n        } catch (error) {\r\n            if (error instanceof Error && onError) {\r\n                onError(error);\r\n            } else {\r\n                throw error;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isInitializing && !hideText && (\r\n                <p>\r\n                    <TranslatedString id=\"remote.continue_with_text\" />\r\n                </p>\r\n            )}\r\n\r\n            <div className=\"checkoutRemote\">\r\n                {supportedMethodIds.map((methodId) => {\r\n                    if (methodId === 'applepay') {\r\n                        return (\r\n                            <ApplePayButton\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (methodId === 'amazonpay') {\r\n                        return (\r\n                            <AmazonPayV2Button\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\r\n                        return (\r\n                            <PayPalCommerceButton\r\n                                containerId={`${methodId}CheckoutButton`}\r\n                                key={methodId}\r\n                                methodId={methodId}\r\n                                onError={onError}\r\n                                {...rest}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <CheckoutButton\r\n                            containerId={`${methodId}CheckoutButton`}\r\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\r\n                            key={methodId}\r\n                            methodId={methodId}\r\n                            onError={onError}\r\n                            {...rest}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutButtonList);\r\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nimport { SUPPORTED_METHODS } from './CheckoutButtonList';\r\n\r\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\r\n\r\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\r\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\r\n};\r\n\r\nexport default function canSignOut(\r\n    customer: Customer,\r\n    checkout: Checkout,\r\n    methodId: string,\r\n): boolean {\r\n    if (isSupportedSignoutMethod(methodId)) {\r\n        return true;\r\n    }\r\n\r\n    if (customer.isGuest) {\r\n        return false;\r\n    }\r\n\r\n    // Return false if payment method offers its own checkout button\r\n    return every(\r\n        checkout.payments,\r\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\r\n    );\r\n}\r\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isErrorWithType } from '../common/error';\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\n\r\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\r\n\r\nexport interface CustomerInfoProps {\r\n  onSignOut?(event: CustomerSignOutEvent): void;\r\n  onSignOutError?(error: CustomError): void;\r\n}\r\n\r\nexport interface CustomerSignOutEvent {\r\n  isCartEmpty: boolean;\r\n}\r\n\r\ninterface WithCheckoutCustomerInfoProps {\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phone: string;\r\n  company: string;\r\n  methodId: string;\r\n  isSignedIn: boolean;\r\n  isSigningOut: boolean;\r\n  signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  phone,\r\n  company,\r\n  methodId,\r\n  isSignedIn,\r\n  isSigningOut,\r\n  onSignOut = noop,\r\n  onSignOutError = noop,\r\n  signOut,\r\n}) => {\r\n  const handleSignOut: () => Promise<void> = async () => {\r\n    try {\r\n      if (isSupportedSignoutMethod(methodId)) {\r\n        await signOut({ methodId });\r\n        onSignOut({ isCartEmpty: false });\r\n        window.location.reload();\r\n      } else {\r\n        await signOut();\r\n        onSignOut({ isCartEmpty: false });\r\n      }\r\n    } catch (error) {\r\n      if (isErrorWithType(error) && error.type === 'checkout_not_available') {\r\n        onSignOut({ isCartEmpty: true });\r\n      } else {\r\n        onSignOutError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"customerView\" data-test=\"checkout-customer-info\">\r\n      <div className=\"customerView-body optimizedCheckout-contentPrimary\" data-test=\"customer-info\">\r\n        <div>\r\n          {firstName} {lastName}\r\n        </div>\r\n        <div>{email}</div>\r\n        <div>{phone}</div>\r\n        <div>{company}</div>\r\n      </div>\r\n\r\n      <div className=\"customerView-actions\">\r\n        {isSignedIn && (\r\n          <Button\r\n            isLoading={isSigningOut}\r\n            onClick={handleSignOut}\r\n            size={ButtonSize.Tiny}\r\n            testId=\"sign-out-link\"\r\n            variant={ButtonVariant.Secondary}\r\n          >\r\n            Edit\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapToWithCheckoutCustomerInfoProps({\r\n  checkoutService,\r\n  checkoutState,\r\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\r\n  const {\r\n    data: { getBillingAddress, getCheckout, getCustomer },\r\n    statuses: { isSigningOut },\r\n  } = checkoutState;\r\n\r\n  const billingAddress = getBillingAddress();\r\n  const checkout = getCheckout();\r\n  const customer = getCustomer();\r\n\r\n  if (!billingAddress || !checkout || !customer) {\r\n    return null;\r\n  }\r\n\r\n  const methodId =\r\n    checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\r\n\r\n  const studentInfo = JSON.parse(sessionStorage.getItem('studentInfo') || '[]');\r\n  const phone = studentInfo\r\n    ? studentInfo?.find((o: any) => o.fieldId === 'field_29')?.fieldValue\r\n    : null;\r\n  const company = studentInfo\r\n    ? studentInfo?.find((o: any) => o.fieldId === 'field_30')?.fieldValue\r\n    : null;\r\n\r\n  return {\r\n    email: billingAddress.email || customer.email,\r\n    firstName: billingAddress.firstName || customer.firstName,\r\n    lastName: billingAddress.lastName || customer.lastName,\r\n    phone,\r\n    company,\r\n    methodId,\r\n    isSignedIn: canSignOut(customer, checkout, methodId),\r\n    isSigningOut: isSigningOut(),\r\n    signOut: checkoutService.signOutCustomer,\r\n  };\r\n}\r\n\r\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form customer-skeleton\">\r\n            <div className=\"customerEmail-container\">\r\n                <div className=\"customerEmail-body\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\r\n                </div>\r\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\r\n                    <div className=\"button-skeleton skeleton-container\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default CustomerSkeleton;\r\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\r\n// we need to keep this regex for login validation as accounts might have been created using this regex\r\nexport const EMAIL_REGEXP =\r\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from '@bigcommerce/memoize';\r\nimport { object, ObjectSchema, string } from 'yup';\r\n\r\nimport {\r\n    CustomFormFieldValues,\r\n    getCustomFormFieldsValidationSchema,\r\n    TranslateValidationErrorFunction,\r\n} from '../formFields';\r\n\r\nimport getEmailValidationSchema from './getEmailValidationSchema';\r\nimport { PasswordRequirements } from './getPasswordRequirements';\r\n\r\nexport type CreateAccountFormValues = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    acceptsMarketingEmails?: string[];\r\n    token?: string;\r\n} & CustomFormFieldValues;\r\n\r\nexport interface CreateCustomerValidationSchema {\r\n    formFields: FormField[];\r\n    language: LanguageService;\r\n    passwordRequirements: PasswordRequirements;\r\n}\r\n\r\nfunction getTranslateCreateCustomerError(\r\n    language?: LanguageService,\r\n): TranslateValidationErrorFunction {\r\n    return (type, { label, min, max }) => {\r\n        if (!language) {\r\n            return;\r\n        }\r\n\r\n        if (type === 'required') {\r\n            return language.translate('customer.required_error', { label });\r\n        }\r\n\r\n        if (type === 'max' && max) {\r\n            return language.translate('customer.max_error', { label, max });\r\n        }\r\n\r\n        if (type === 'min' && min) {\r\n            return language.translate('customer.min_error', { label, min });\r\n        }\r\n\r\n        if (type === 'invalid') {\r\n            return language.translate('customer.invalid_characters_error', { label });\r\n        }\r\n    };\r\n}\r\n\r\nexport default memoize(function getCreateCustomerValidationSchema({\r\n    formFields,\r\n    language,\r\n    passwordRequirements: { description, numeric, alpha, minLength },\r\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\r\n    return object({\r\n        firstName: string().required(language.translate('address.first_name_required_error')),\r\n        lastName: string().required(language.translate('address.last_name_required_error')),\r\n        password: string()\r\n            .required(language.translate('customer.password_required_error') || description)\r\n            .matches(\r\n                numeric,\r\n                language.translate('customer.password_number_required_error') || description,\r\n            )\r\n            .matches(\r\n                alpha,\r\n                language.translate('customer.password_letter_required_error') || description,\r\n            )\r\n            .min(\r\n                minLength,\r\n                language.translate('customer.password_under_minimum_length_error' || description),\r\n            )\r\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\r\n    })\r\n        .concat(getEmailValidationSchema({ language }))\r\n        .concat(\r\n            getCustomFormFieldsValidationSchema({\r\n                formFields,\r\n                translate: getTranslateCreateCustomerError(language),\r\n            }),\r\n        );\r\n});\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { object, ObjectSchema, string } from 'yup';\r\n\r\nimport { EMAIL_REGEXP } from './validationPatterns';\r\n\r\nexport interface EmailValidationSchemaOptions {\r\n    language: LanguageService;\r\n}\r\n\r\nexport default function getEmailValidationSchema({\r\n    language,\r\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\r\n    return object({\r\n        email: string()\r\n            .max(256)\r\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\r\n            .required(language.translate('customer.email_required_error')),\r\n    });\r\n}\r\n","/* eslint-disable no-bitwise */\r\nimport {\r\n  CheckoutSelectors,\r\n  CustomerAccountRequestBody,\r\n  CustomerCredentials,\r\n  FormField,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\r\n\r\nimport './CreateAccountForm.scss';\r\nimport getCreateCustomerValidationSchema, {\r\n  CreateAccountFormValues,\r\n} from './getCreateCustomerValidationSchema';\r\nimport getPasswordRequirements from './getPasswordRequirements';\r\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\r\n\r\nexport interface CreateAccountFormProps {\r\n  formFields: FormField[];\r\n  createAccountError?: Error;\r\n  isCreatingAccount?: boolean;\r\n  requiresMarketingConsent: boolean;\r\n  isFloatingLabelEnabled?: boolean;\r\n  onCancel?(): void;\r\n  onSubmit(values: CreateAccountFormValues): void;\r\n  createAccount: (values: CustomerAccountRequestBody) => Promise<CheckoutSelectors>;\r\n  signIn: (credentials: CustomerCredentials) => Promise<CheckoutSelectors>;\r\n}\r\n\r\nconst CreateAccountForm: FunctionComponent<\r\n  CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\r\n> = ({ formFields, isCreatingAccount, isFloatingLabelEnabled }) => {\r\n  return (\r\n    <Form\r\n      className=\"checkout-form\"\r\n      id=\"checkout-customer-returning\"\r\n      testId=\"checkout-customer-returning\"\r\n    >\r\n      <Fieldset>\r\n        <div className=\"create-account-form\">\r\n          {formFields\r\n            .filter((field) => field.name !== 'password')\r\n            .filter((field) => field.name !== 'field_26')\r\n            .map((field) => {\r\n              if (field.name === 'firstName') {\r\n                return { ...field, label: 'Student First Name' };\r\n              }\r\n\r\n              if (field.name === 'lastName') {\r\n                return { ...field, label: 'Student Last Name' };\r\n              }\r\n\r\n              if (field.name === 'email') {\r\n                return { ...field, label: 'Student Email' };\r\n              }\r\n\r\n              if (field.label === 'Phone') {\r\n                return { ...field, label: 'Student Phone' };\r\n              }\r\n\r\n              if (field.label === 'Company') {\r\n                return { ...field, label: 'Student Company' };\r\n              }\r\n\r\n              return field;\r\n            })\r\n            .map((field) => (\r\n              <DynamicFormField\r\n                autocomplete={field.name}\r\n                extraClass={`dynamic-form-field--${field.name}`}\r\n                field={field}\r\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                key={field.id}\r\n                label={field.label}\r\n                parentFieldName={field.custom ? 'customFields' : undefined}\r\n              />\r\n            ))}\r\n        </div>\r\n      </Fieldset>\r\n\r\n      <div className=\"form-actions\">\r\n        <Button\r\n          disabled={isCreatingAccount}\r\n          id=\"checkout-customer-create\"\r\n          testId=\"customer-continue-create\"\r\n          type=\"submit\"\r\n          variant={ButtonVariant.Primary}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withLanguage(\r\n  withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\r\n    handleSubmit: async (values, { props: { onSubmit, createAccount, signIn } }) => {\r\n      const CustomerPassword = {\r\n        val1: `${(window as any).checkoutCustom?.storeProfile?.storeHash}_||_${\r\n          (window as any).checkoutCustom?.storeProfile?.storeId\r\n        }`,\r\n        val2: '47f833ecf3135c5ba623a04787b5000f2952edcf72215af29c9a41b0a31dd385',\r\n        Encode: (email: string) => {\r\n          let encoded = '';\r\n\r\n          for (let i = 0; i < email.length; i++) {\r\n            const charCode =\r\n              email.charCodeAt(i) ^\r\n              CustomerPassword.val2.charCodeAt(i % CustomerPassword.val2.length) ^\r\n              CustomerPassword.val1.charCodeAt(i % CustomerPassword.val1.length);\r\n\r\n            encoded += String.fromCharCode(Number(charCode));\r\n          }\r\n\r\n          return btoa(encoded);\r\n        },\r\n      };\r\n\r\n      const mappedFields = mapCreateAccountFromFormValues(values);\r\n\r\n      sessionStorage.setItem('studentInfo', JSON.stringify(mappedFields.customFields));\r\n\r\n      try {\r\n        // if this fails then the customer already exists\r\n        // then we just need to assosciate the customer with the order\r\n\r\n        await createAccount({\r\n          email: values.email,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          password: CustomerPassword.Encode(values.email),\r\n          customFields: mappedFields.customFields,\r\n        });\r\n      } catch (ex) {\r\n        const password = CustomerPassword.Encode(values.email);\r\n\r\n        try {\r\n          await signIn({ email: values.email, password });\r\n        } catch (ex) {}\r\n      }\r\n\r\n      onSubmit(values);\r\n    },\r\n    mapPropsToValues: ({ requiresMarketingConsent }) => {\r\n      return {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: 'TEMPASS123!@#',\r\n        customFields: {},\r\n        acceptsMarketingEmails: requiresMarketingConsent ? [] : ['0'],\r\n      };\r\n    },\r\n    validationSchema: ({ language, formFields }: CreateAccountFormProps & WithLanguageProps) => {\r\n      const passwordRequirements = formFields.find(\r\n        ({ requirements }) => requirements,\r\n      )?.requirements;\r\n\r\n      if (!passwordRequirements) {\r\n        throw new Error('Password requirements missing');\r\n      }\r\n\r\n      const schema = getCreateCustomerValidationSchema({\r\n        language,\r\n        formFields,\r\n        passwordRequirements: getPasswordRequirements(passwordRequirements),\r\n      });\r\n\r\n      return schema;\r\n    },\r\n  })(CreateAccountForm),\r\n);\r\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\r\n\r\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\r\n\r\nexport default function mapCreateAccountFromFormValues({\r\n    acceptsMarketingEmails,\r\n    customFields,\r\n    ...values\r\n}: CreateAccountFormValues): CustomerAccountRequestBody {\r\n    return {\r\n        ...values,\r\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\r\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\r\n    };\r\n}\r\n","import {\r\n    CheckoutSelectors,\r\n    CustomerAccountRequestBody,\r\n    CustomerCredentials,\r\n    CustomerInitializeOptions,\r\n    CustomerRequestOptions,\r\n    ExecutePaymentMethodCheckoutOptions,\r\n    FormField,\r\n    GuestCredentials,\r\n    SignInEmail,\r\n    StoreConfig,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { withCheckout } from '../checkout';\r\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\r\nimport { isFloatingLabelEnabled } from '../common/utility';\r\nimport { PaymentMethodId } from '../payment/paymentMethod';\r\n\r\nimport CreateAccountForm from './CreateAccountForm';\r\nimport CustomerViewType from './CustomerViewType';\r\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\r\n\r\nexport interface CustomerProps {\r\n  viewType: CustomerViewType;\r\n  step: CheckoutStepStatus;\r\n  isEmbedded?: boolean;\r\n  isSubscribed: boolean;\r\n  isWalletButtonsOnTop: boolean;\r\n  checkEmbeddedSupport?(methodIds: string[]): void;\r\n  onChangeViewType?(viewType: CustomerViewType): void;\r\n  onAccountCreated?(): void;\r\n  onContinueAsGuest?(): void;\r\n  onContinueAsGuestError?(error: Error): void;\r\n  onReady?(): void;\r\n  onSubscribeToNewsletter(subscribe: boolean): void;\r\n  onSignIn?(): void;\r\n  onSignInError?(error: Error): void;\r\n  onUnhandledError?(error: Error): void;\r\n}\r\n\r\nexport interface WithCheckoutCustomerProps {\r\n  canSubscribe: boolean;\r\n  customerAccountFields: FormField[];\r\n  checkoutButtonIds: string[];\r\n  defaultShouldSubscribe: boolean;\r\n  email?: string;\r\n  firstName?: string;\r\n  forgotPasswordUrl: string;\r\n  isContinuingAsGuest: boolean;\r\n  isCreatingAccount: boolean;\r\n  isExecutingPaymentMethodCheckout: boolean;\r\n  isGuestEnabled: boolean;\r\n  hasBillingId: boolean;\r\n  isInitializing: boolean;\r\n  isSendingSignInEmail: boolean;\r\n  isSignInEmailEnabled: boolean;\r\n  isSigningIn: boolean;\r\n  privacyPolicyUrl?: string;\r\n  providerWithCustomCheckout?: string;\r\n  requiresMarketingConsent: boolean;\r\n  signInEmail?: SignInEmail;\r\n  signInEmailError?: Error;\r\n  isAccountCreationEnabled: boolean;\r\n  createAccountError?: Error;\r\n  signInError?: Error;\r\n  isFloatingLabelEnabled?: boolean;\r\n  clearError(error: Error): Promise<CheckoutSelectors>;\r\n  continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\r\n  deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\r\n  executePaymentMethodCheckout(\r\n    options: ExecutePaymentMethodCheckoutOptions,\r\n  ): Promise<CheckoutSelectors>;\r\n  initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\r\n  sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\r\n  signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\r\n  createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\r\n}\r\n\r\nexport interface CustomerState {\r\n  isReady: boolean;\r\n}\r\n\r\nclass Customer extends Component<\r\n  CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps,\r\n  CustomerState\r\n> {\r\n  state: CustomerState = {\r\n    isReady: false,\r\n  };\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    const {\r\n      initializeCustomer,\r\n      onReady = noop,\r\n      onUnhandledError = noop,\r\n      providerWithCustomCheckout,\r\n    } = this.props;\r\n\r\n    try {\r\n      if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\r\n        await initializeCustomer({ methodId: providerWithCustomCheckout });\r\n      }\r\n    } catch (error) {\r\n      onUnhandledError(error);\r\n    }\r\n\r\n    this.setState({ isReady: true });\r\n\r\n    onReady();\r\n  }\r\n\r\n  async componentWillUnmount(): Promise<void> {\r\n    const {\r\n      deinitializeCustomer = noop,\r\n      providerWithCustomCheckout,\r\n      onUnhandledError = noop,\r\n    } = this.props;\r\n\r\n    try {\r\n      await deinitializeCustomer({ methodId: providerWithCustomCheckout });\r\n    } catch (error) {\r\n      onUnhandledError(error);\r\n    }\r\n  }\r\n\r\n  render(): ReactNode {\r\n    // const { viewType } = this.props;\r\n    const { isReady } = this.state;\r\n    // const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\r\n    // const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\r\n    // const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\r\n\r\n    return (\r\n      <CustomerSkeleton isLoading={!isReady}>\r\n        {/* {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\r\n                {shouldRenderLoginForm && this.renderLoginForm()}\r\n                {shouldRenderGuestForm && this.renderGuestForm()} */}\r\n        {this.renderCreateAccountForm()}\r\n      </CustomerSkeleton>\r\n    );\r\n  }\r\n\r\n  //   private renderGuestForm(): ReactNode {\r\n  //     const {\r\n  //       canSubscribe,\r\n  //       checkEmbeddedSupport,\r\n  //       checkoutButtonIds,\r\n  //       deinitializeCustomer,\r\n  //       email,\r\n  //       initializeCustomer,\r\n  //       isContinuingAsGuest = false,\r\n  //       isExecutingPaymentMethodCheckout = false,\r\n  //       isInitializing = false,\r\n  //       isSubscribed,\r\n  //       isWalletButtonsOnTop,\r\n  //       privacyPolicyUrl,\r\n  //       requiresMarketingConsent,\r\n  //       providerWithCustomCheckout,\r\n  //       onUnhandledError = noop,\r\n  //       step,\r\n  //       isFloatingLabelEnabled,\r\n  //     } = this.props;\r\n  //     const checkoutButtons = isWalletButtonsOnTop ? null : (\r\n  //       <CheckoutButtonList\r\n  //         checkEmbeddedSupport={checkEmbeddedSupport}\r\n  //         deinitialize={deinitializeCustomer}\r\n  //         initialize={initializeCustomer}\r\n  //         isInitializing={isInitializing}\r\n  //         methodIds={checkoutButtonIds}\r\n  //         onError={onUnhandledError}\r\n  //       />\r\n  //     );\r\n\r\n  //     const isLoadingGuestForm = isWalletButtonsOnTop\r\n  //       ? isContinuingAsGuest\r\n  //       : isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout;\r\n\r\n  //     return providerWithCustomCheckout === PaymentMethodId.StripeUPE ? (\r\n  //       <StripeGuestForm\r\n  //         canSubscribe={canSubscribe}\r\n  //         checkoutButtons={checkoutButtons}\r\n  //         continueAsGuestButtonLabelId=\"customer.continue\"\r\n  //         defaultShouldSubscribe={isSubscribed}\r\n  //         deinitialize={deinitializeCustomer}\r\n  //         email={this.draftEmail || email}\r\n  //         initialize={initializeCustomer}\r\n  //         isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\r\n  //         onChangeEmail={this.handleChangeEmail}\r\n  //         onContinueAsGuest={this.handleContinueAsGuest}\r\n  //         onShowLogin={this.handleShowLogin}\r\n  //         privacyPolicyUrl={privacyPolicyUrl}\r\n  //         requiresMarketingConsent={requiresMarketingConsent}\r\n  //         step={step}\r\n  //       />\r\n  //     ) : (\r\n  //       <GuestForm\r\n  //         canSubscribe={canSubscribe}\r\n  //         checkoutButtons={checkoutButtons}\r\n  //         continueAsGuestButtonLabelId=\"customer.continue\"\r\n  //         defaultShouldSubscribe={isSubscribed}\r\n  //         email={this.draftEmail || email}\r\n  //         isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n  //         isLoading={isLoadingGuestForm}\r\n  //         onChangeEmail={this.handleChangeEmail}\r\n  //         onContinueAsGuest={this.handleContinueAsGuest}\r\n  //         onShowLogin={this.handleShowLogin}\r\n  //         privacyPolicyUrl={privacyPolicyUrl}\r\n  //         requiresMarketingConsent={requiresMarketingConsent}\r\n  //       />\r\n  //     );\r\n  //   }\r\n\r\n  //   private renderEmailLoginLinkForm(): ReactNode {\r\n  //     const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\r\n\r\n  //     const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\r\n  //       this.props;\r\n\r\n  //     return (\r\n  //       <EmailLoginForm\r\n  //         email={this.draftEmail}\r\n  //         emailHasBeenRequested={hasRequestedLoginEmail}\r\n  //         isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n  //         isOpen={isEmailLoginFormOpen}\r\n  //         isSendingEmail={isSendingSignInEmail}\r\n  //         onRequestClose={this.closeEmailLoginFormForm}\r\n  //         onSendLoginEmail={this.handleSendLoginEmail}\r\n  //         sentEmail={signInEmail}\r\n  //         sentEmailError={signInEmailError}\r\n  //       />\r\n  //     );\r\n  //   }\r\n\r\n  //   private closeEmailLoginFormForm: () => void = () => {\r\n  //     this.setState({\r\n  //       isEmailLoginFormOpen: false,\r\n  //       hasRequestedLoginEmail: false,\r\n  //     });\r\n  //   };\r\n\r\n  private renderCreateAccountForm(): ReactNode {\r\n    const {\r\n      customerAccountFields,\r\n      isCreatingAccount,\r\n      createAccountError,\r\n      requiresMarketingConsent,\r\n      isFloatingLabelEnabled,\r\n      createAccount,\r\n      signIn,\r\n    } = this.props;\r\n\r\n    return (\r\n      <CreateAccountForm\r\n        createAccount={createAccount}\r\n        createAccountError={createAccountError}\r\n        formFields={customerAccountFields}\r\n        isCreatingAccount={isCreatingAccount}\r\n        isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n        onCancel={this.handleCancelCreateAccount}\r\n        onSubmit={this.handleCreateAccount}\r\n        requiresMarketingConsent={requiresMarketingConsent}\r\n        signIn={signIn}\r\n      />\r\n    );\r\n  }\r\n\r\n  //   private renderLoginForm(): ReactNode {\r\n  //     const {\r\n  //       isEmbedded,\r\n  //       email,\r\n  //       forgotPasswordUrl,\r\n  //       isSignInEmailEnabled,\r\n  //       isGuestEnabled,\r\n  //       isSendingSignInEmail,\r\n  //       isSigningIn,\r\n  //       isAccountCreationEnabled,\r\n  //       providerWithCustomCheckout,\r\n  //       signInError,\r\n  //       isFloatingLabelEnabled,\r\n  //       viewType,\r\n  //     } = this.props;\r\n\r\n  //     return (\r\n  //       <LoginForm\r\n  //         canCancel={isGuestEnabled}\r\n  //         continueAsGuestButtonLabelId={\r\n  //           providerWithCustomCheckout ? 'customer.continue' : 'customer.continue_as_guest_action'\r\n  //         }\r\n  //         email={this.draftEmail || email}\r\n  //         forgotPasswordUrl={forgotPasswordUrl}\r\n  //         isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n  //         isSendingSignInEmail={isSendingSignInEmail}\r\n  //         isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\r\n  //         isSigningIn={isSigningIn}\r\n  //         onCancel={this.handleCancelSignIn}\r\n  //         onChangeEmail={this.handleChangeEmail}\r\n  //         onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\r\n  //         onCreateAccount={this.showCreateAccount}\r\n  //         onSendLoginEmail={this.handleEmailLoginClicked}\r\n  //         onSignIn={this.handleSignIn}\r\n  //         shouldShowCreateAccountLink={isAccountCreationEnabled}\r\n  //         signInError={signInError}\r\n  //         viewType={viewType}\r\n  //       />\r\n  //     );\r\n  //   }\r\n\r\n  //   private handleEmailLoginClicked: () => void = async () => {\r\n  //     const { viewType } = this.props;\r\n\r\n  //     try {\r\n  //       if (viewType !== CustomerViewType.Login && this.draftEmail) {\r\n  //         await this.handleSendLoginEmail({ email: this.draftEmail });\r\n  //       }\r\n  //     } finally {\r\n  //       this.setState({\r\n  //         isEmailLoginFormOpen: true,\r\n  //       });\r\n  //     }\r\n  //   };\r\n\r\n  //   private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\r\n  //     values,\r\n  //   ) => {\r\n  //     const { sendLoginEmail } = this.props;\r\n\r\n  //     try {\r\n  //       await sendLoginEmail(values);\r\n  //     } finally {\r\n  //     }\r\n  //   };\r\n\r\n  //   private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\r\n  //     formValues,\r\n  //   ) => {\r\n  //     const {\r\n  //       canSubscribe,\r\n  //       continueAsGuest,\r\n  //       hasBillingId,\r\n  //       defaultShouldSubscribe,\r\n  //       onChangeViewType = noop,\r\n  //       onContinueAsGuest = noop,\r\n  //       onContinueAsGuestError = noop,\r\n  //       onSubscribeToNewsletter,\r\n  //     } = this.props;\r\n\r\n  //     const email = formValues.email.trim();\r\n  //     const updateSubscriptionWhenUnchecked =\r\n  //       hasBillingId || defaultShouldSubscribe ? false : undefined;\r\n\r\n  //     try {\r\n  //       const { data } = await continueAsGuest({\r\n  //         email,\r\n  //         acceptsMarketingNewsletter:\r\n  //           canSubscribe && formValues.shouldSubscribe ? true : updateSubscriptionWhenUnchecked,\r\n  //         acceptsAbandonedCartEmails: formValues.shouldSubscribe\r\n  //           ? true\r\n  //           : updateSubscriptionWhenUnchecked,\r\n  //       });\r\n\r\n  //       onSubscribeToNewsletter(formValues.shouldSubscribe);\r\n\r\n  //       const customer = data.getCustomer();\r\n\r\n  //       if (\r\n  //         customer &&\r\n  //         customer.shouldEncourageSignIn &&\r\n  //         customer.isGuest &&\r\n  //         !customer.isStripeLinkAuthenticated\r\n  //       ) {\r\n  //         return onChangeViewType(CustomerViewType.SuggestedLogin);\r\n  //       }\r\n\r\n  //       await this.executePaymentMethodCheckoutOrContinue();\r\n\r\n  //       this.draftEmail = undefined;\r\n  //     } catch (error) {\r\n  //       if (\r\n  //         isErrorWithType(error) &&\r\n  //         (error.type === 'update_subscriptions' || error.type === 'payment_method_client_invalid')\r\n  //       ) {\r\n  //         this.draftEmail = undefined;\r\n\r\n  //         onContinueAsGuest();\r\n  //       }\r\n\r\n  //       if (isErrorWithType(error) && error.status === 429) {\r\n  //         return onChangeViewType(CustomerViewType.EnforcedLogin);\r\n  //       }\r\n\r\n  //       if (isErrorWithType(error) && error.status === 403) {\r\n  //         return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\r\n  //       }\r\n\r\n  //       onContinueAsGuestError(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\r\n  //     credentials,\r\n  //   ) => {\r\n  //     const { signIn, onSignIn = noop, onSignInError = noop } = this.props;\r\n\r\n  //     try {\r\n  //       await signIn(credentials);\r\n  //       onSignIn();\r\n\r\n  //       this.draftEmail = undefined;\r\n  //     } catch (error) {\r\n  //       onSignInError(error);\r\n  //     }\r\n  //   };\r\n\r\n  private handleCreateAccount: (values: CreateAccountFormValues) => void = async () => {\r\n    const { onAccountCreated = noop } = this.props;\r\n\r\n    // await createAccount(mapCreateAccountFromFormValues(values));\r\n\r\n    onAccountCreated();\r\n  };\r\n\r\n  //   private showCreateAccount: () => void = () => {\r\n  //     const { onChangeViewType = noop } = this.props;\r\n\r\n  //     onChangeViewType(CustomerViewType.CreateAccount);\r\n  //   };\r\n\r\n  private handleCancelCreateAccount: () => void = () => {\r\n    const { clearError, onChangeViewType = noop, createAccountError } = this.props;\r\n\r\n    if (createAccountError) {\r\n      clearError(createAccountError);\r\n    }\r\n\r\n    onChangeViewType(CustomerViewType.Login);\r\n  };\r\n\r\n  //   private handleCancelSignIn: () => void = () => {\r\n  //     const { clearError, onChangeViewType = noop, signInError } = this.props;\r\n\r\n  //     if (signInError) {\r\n  //       clearError(signInError);\r\n  //     }\r\n\r\n  //     onChangeViewType(CustomerViewType.Guest);\r\n  //   };\r\n\r\n  //   private handleChangeEmail: (email: string) => void = (email) => {\r\n  //     const { analyticsTracker } = this.props;\r\n\r\n  //     this.draftEmail = email;\r\n  //     analyticsTracker.customerEmailEntry(email);\r\n  //   };\r\n\r\n  //   private handleShowLogin: () => void = () => {\r\n  //     const { onChangeViewType = noop } = this.props;\r\n\r\n  //     onChangeViewType(CustomerViewType.Login);\r\n  //   };\r\n\r\n  //   private executePaymentMethodCheckoutOrContinue: () => void = async () => {\r\n  //     const {\r\n  //       executePaymentMethodCheckout,\r\n  //       onContinueAsGuest = noop,\r\n  //       providerWithCustomCheckout,\r\n  //     } = this.props;\r\n\r\n  //     if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\r\n  //       await executePaymentMethodCheckout({\r\n  //         methodId: providerWithCustomCheckout,\r\n  //         continueWithCheckoutCallback: onContinueAsGuest,\r\n  //         checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload),\r\n  //       });\r\n  //     } else {\r\n  //       onContinueAsGuest();\r\n  //     }\r\n  //   };\r\n\r\n  //   private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\r\n  //     const { analyticsTracker } = this.props;\r\n\r\n  //     analyticsTracker.customerPaymentMethodExecuted(payload);\r\n  //   }\r\n}\r\n\r\nexport function mapToWithCheckoutCustomerProps({\r\n  checkoutService,\r\n  checkoutState,\r\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\r\n  const {\r\n    data: {\r\n      getBillingAddress,\r\n      getCustomerAccountFields,\r\n      getCheckout,\r\n      getCustomer,\r\n      getSignInEmail,\r\n      getConfig,\r\n    },\r\n    errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\r\n    statuses: {\r\n      isContinuingAsGuest,\r\n      isExecutingPaymentMethodCheckout,\r\n      isInitializingCustomer,\r\n      isSigningIn,\r\n      isSendingSignInEmail,\r\n      isCreatingCustomerAccount,\r\n    },\r\n  } = checkoutState;\r\n\r\n  const billingAddress = getBillingAddress();\r\n  const checkout = getCheckout();\r\n  const customer = getCustomer();\r\n  const signInEmail = getSignInEmail();\r\n  const config = getConfig();\r\n\r\n  if (!checkout || !config) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    checkoutSettings: {\r\n      privacyPolicyUrl,\r\n      requiresMarketingConsent,\r\n      isSignInEmailEnabled,\r\n      isAccountCreationEnabled,\r\n    },\r\n  } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\r\n\r\n  return {\r\n    customerAccountFields: getCustomerAccountFields(),\r\n    canSubscribe: config.shopperConfig.showNewsletterSignup,\r\n    checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\r\n    clearError: checkoutService.clearError,\r\n    createAccount: checkoutService.createCustomerAccount,\r\n    continueAsGuest: checkoutService.continueAsGuest,\r\n    sendLoginEmail: checkoutService.sendSignInEmail,\r\n    defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\r\n    deinitializeCustomer: checkoutService.deinitializeCustomer,\r\n    executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\r\n    email: billingAddress?.email || customer?.email,\r\n    firstName: customer?.firstName,\r\n    forgotPasswordUrl: config.links.forgotPasswordLink,\r\n    initializeCustomer: checkoutService.initializeCustomer,\r\n    isCreatingAccount: isCreatingCustomerAccount(),\r\n    createAccountError: getCreateCustomerAccountError(),\r\n    hasBillingId: !!billingAddress?.id,\r\n    isContinuingAsGuest: isContinuingAsGuest(),\r\n    isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\r\n    isInitializing: isInitializingCustomer(),\r\n    isSignInEmailEnabled,\r\n    isAccountCreationEnabled,\r\n    isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\r\n    isSigningIn: isSigningIn(),\r\n    isSendingSignInEmail: isSendingSignInEmail(),\r\n    signInEmail,\r\n    signInEmailError: getSignInEmailError(),\r\n    privacyPolicyUrl,\r\n    providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\r\n    requiresMarketingConsent,\r\n    signIn: checkoutService.signInCustomer,\r\n    signInError: getSignInError(),\r\n    isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\r\n  };\r\n}\r\n\r\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconTag: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconTag);\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { IconTag } from '../ui/icon';\r\n\r\nexport interface PromotionBannerProps {\r\n    message: string;\r\n}\r\n\r\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\r\n    <Alert\r\n        additionalClassName=\"optimizedCheckout-discountBanner\"\r\n        icon={<IconTag />}\r\n        type={AlertType.Info}\r\n    >\r\n        <span\r\n            dangerouslySetInnerHTML={{\r\n                __html: DOMPurify.sanitize(message),\r\n            }}\r\n            data-test=\"promotion-banner-message\"\r\n        />\r\n    </Alert>\r\n);\r\n\r\nexport default memo(PromotionBanner);\r\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport PromotionBanner from './PromotionBanner';\r\nimport './PromotionBannerList.scss';\r\n\r\nexport interface PromotionBannerListProps {\r\n    promotions?: Promotion[];\r\n}\r\n\r\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\r\n    const banners = (promotions || []).reduce(\r\n        (result, promotion) => [...result, ...promotion.banners],\r\n        [] as Banner[],\r\n    );\r\n\r\n    if (!banners.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"discountBanner\">\r\n            <ul className=\"discountBannerList\">\r\n                {banners.map((banner, index) => (\r\n                    <PromotionBanner key={index} message={banner.text} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(PromotionBannerList);\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { some } from 'lodash';\r\n\r\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\r\n\r\nexport default function isUsingMultiShipping(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    if (consignments.length > 1) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\r\n        hasUnassignedLineItems(consignments, lineItems)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { Address, Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport AddressType from '../address/AddressType';\r\nimport StaticAddress from '../address/StaticAddress';\r\n\r\nimport './StaticConsignment.scss';\r\nimport { StaticShippingOption } from './shippingOption';\r\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\r\n\r\ninterface StaticConsignmentProps {\r\n  consignment: Consignment;\r\n  cart: Cart;\r\n  compactView?: boolean;\r\n  billingAddress?: Address | undefined;\r\n}\r\n\r\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\r\n  consignment,\r\n  cart,\r\n  compactView,\r\n  billingAddress,\r\n}) => {\r\n  const { shippingAddress: address, selectedShippingOption } = consignment;\r\n\r\n  return (\r\n    <div className=\"staticConsignment\">\r\n      <StaticAddress address={address} type={AddressType.Shipping} />\r\n\r\n      <div className=\"vcard checkout-address--static\">\r\n        {(address.firstName || address.lastName) && (\r\n          <p className=\"fn address-entry\">\r\n            <span className=\"first-name\">{`${address.firstName} `}</span>\r\n            <span className=\"family-name\">{address.lastName}</span>\r\n          </p>\r\n        )}\r\n\r\n        {(billingAddress as any)?.email && (\r\n          <p className=\"address-entry\">\r\n            <span className=\"email\">{(billingAddress as any).email}</span>\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\r\n\r\n      {selectedShippingOption && (\r\n        <div>\r\n          <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\r\n            <StaticShippingOption\r\n              displayAdditionalInformation={false}\r\n              method={selectedShippingOption}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(StaticConsignment);\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class ShippingOptionExpiredError extends CustomError {\r\n    constructor() {\r\n        super({\r\n            name: 'SHIPPING_OPTION_EXPIRED',\r\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\r\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\r\n        });\r\n\r\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\r\n    }\r\n}\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface LoadingNotificationProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingNotification\">\r\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\r\n                <div className=\"spinner\" />\r\n\r\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\r\n                    <TranslatedString id=\"common.loading_text\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingNotification);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconCheck: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconCheck);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\r\nimport { IconCheck } from '../ui/icon';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepHeaderProps {\r\n    heading: ReactNode;\r\n    isActive?: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onEdit?(type: CheckoutStepType): void;\r\n}\r\n\r\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\r\n    heading,\r\n    isActive,\r\n    isComplete,\r\n    isEditable,\r\n    onEdit,\r\n    summary,\r\n    type,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classNames('stepHeader', {\r\n                'is-readonly': !isEditable,\r\n                'is-clickable': isEditable && !isActive,\r\n            })}\r\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\r\n        >\r\n            <div className=\"stepHeader-figure stepHeader-column\">\r\n                <IconCheck\r\n                    additionalClassName={classNames(\r\n                        'stepHeader-counter',\r\n                        'optimizedCheckout-step',\r\n                        { 'stepHeader-counter--complete': isComplete },\r\n                    )}\r\n                />\r\n\r\n                <h2 className=\"stepHeader-title optimizedCheckout-headingPrimary\">{heading}</h2>\r\n            </div>\r\n\r\n            <div\r\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\r\n                data-test=\"step-info\"\r\n            >\r\n                {!isActive && isComplete && summary}\r\n            </div>\r\n\r\n            {isEditable && !isActive && (\r\n                <div className=\"stepHeader-actions stepHeader-column\">\r\n                    <Button\r\n                        aria-expanded={isActive}\r\n                        size={ButtonSize.Tiny}\r\n                        testId=\"step-edit-button\"\r\n                        variant={ButtonVariant.Secondary}\r\n                    >\r\n                        <TranslatedString id=\"common.edit_action\" />\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(CheckoutStepHeader);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { Component, createRef, ReactNode } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { isMobileView, MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStepHeader from './CheckoutStepHeader';\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nexport interface CheckoutStepProps {\r\n    heading?: ReactNode;\r\n    isActive?: boolean;\r\n    isBusy: boolean;\r\n    isComplete?: boolean;\r\n    isEditable?: boolean;\r\n    suggestion?: ReactNode;\r\n    summary?: ReactNode;\r\n    type: CheckoutStepType;\r\n    onExpanded?(step: CheckoutStepType): void;\r\n    onEdit?(step: CheckoutStepType): void;\r\n}\r\n\r\nexport interface CheckoutStepState {\r\n    isClosed: boolean;\r\n}\r\n\r\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\r\n    state = {\r\n        isClosed: true,\r\n    };\r\n\r\n    private containerRef = createRef<HTMLLIElement>();\r\n    private contentRef = createRef<HTMLDivElement>();\r\n    private timeoutRef?: number;\r\n    private timeoutDelay?: number;\r\n\r\n    componentDidMount(): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\r\n        const { isActive } = this.props;\r\n\r\n        if (isActive && isActive !== prevProps.isActive) {\r\n            this.focusStep();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.timeoutRef) {\r\n            window.clearTimeout(this.timeoutRef);\r\n\r\n            this.timeoutRef = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\r\n            this.props;\r\n\r\n        const { isClosed } = this.state;\r\n\r\n        return (\r\n            <li\r\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\r\n                    [`checkout-step--${type}`]: !!type,\r\n                })}\r\n                ref={this.containerRef}\r\n            >\r\n                <div className=\"checkout-view-header\">\r\n                    <CheckoutStepHeader\r\n                        heading={heading}\r\n                        isActive={isActive}\r\n                        isComplete={isComplete}\r\n                        isEditable={isEditable}\r\n                        onEdit={onEdit}\r\n                        summary={summary}\r\n                        type={type}\r\n                    />\r\n                </div>\r\n\r\n                {suggestion && isClosed && !isActive && (\r\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\r\n                        {suggestion}\r\n                    </div>\r\n                )}\r\n\r\n                {this.renderContent()}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { children, isActive, isBusy } = this.props;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => (\r\n                    <CSSTransition\r\n                        addEndListener={this.handleTransitionEnd}\r\n                        classNames=\"checkout-view-content\"\r\n                        enter={!matched}\r\n                        exit={!matched}\r\n                        in={isActive}\r\n                        mountOnEnter\r\n                        onExited={ this.onAnimationEnd }\r\n                        timeout={ {} }\r\n                        unmountOnExit\r\n                    >\r\n                        <div\r\n                            aria-busy={isBusy}\r\n                            className=\"checkout-view-content\"\r\n                            ref={this.contentRef}\r\n                        >\r\n                            {isActive ? children : null}\r\n                        </div>\r\n                    </CSSTransition>\r\n                )}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private focusStep(): void {\r\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\r\n\r\n        this.setState({ isClosed: false });\r\n\r\n        this.timeoutRef = window.setTimeout(() => {\r\n            const input = this.getChildInput();\r\n            const position = this.getScrollPosition();\r\n            const { type, onExpanded = noop } = this.props;\r\n\r\n            if (input) {\r\n                input.focus();\r\n            }\r\n\r\n            if (position !== undefined && !isNaN(position)) {\r\n                window.scrollTo(0, position);\r\n            }\r\n\r\n            onExpanded(type);\r\n\r\n            this.timeoutRef = undefined;\r\n        }, delay);\r\n    }\r\n\r\n    private getChildInput(): HTMLElement | undefined {\r\n        const container = this.containerRef.current;\r\n\r\n        if (!container) {\r\n            return;\r\n        }\r\n\r\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\r\n\r\n        return input || undefined;\r\n    }\r\n\r\n    private getScrollPosition(): number | undefined {\r\n        const container = this.getParentContainer();\r\n        const { isComplete } = this.props;\r\n\r\n        if (!container || window !== window.top) {\r\n            return;\r\n        }\r\n\r\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\r\n        const containerOffset =\r\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\r\n\r\n        return containerOffset - topOffset;\r\n    }\r\n\r\n    // For now, we need to find the parent container because `CheckoutStep`\r\n    // isn't the outer container yet. Once both the header and body are\r\n    // moved inside this component, we can remove the lookup.\r\n    private getParentContainer(): HTMLElement | undefined {\r\n        let container: HTMLElement | null = this.containerRef.current;\r\n\r\n        while (container && container.parentElement) {\r\n            if (container.parentElement.classList.contains('checkout-step')) {\r\n                return container.parentElement;\r\n            }\r\n\r\n            container = container.parentElement;\r\n        }\r\n\r\n        return this.containerRef.current ? this.containerRef.current : undefined;\r\n    }\r\n\r\n    private getTransitionDelay(): number {\r\n        if (this.timeoutDelay !== undefined) {\r\n            return this.timeoutDelay;\r\n        }\r\n\r\n        // Cache the result to avoid unnecessary reflow\r\n        this.timeoutDelay =\r\n            parseFloat(\r\n                this.contentRef.current\r\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\r\n                    : '0s',\r\n            ) * 1000;\r\n\r\n        return this.timeoutDelay;\r\n    }\r\n\r\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\r\n        node.addEventListener('transitionend', ({ target }) => {\r\n            if (target === node) {\r\n                done();\r\n            }\r\n        });\r\n    };\r\n\r\n    private onAnimationEnd = (): void => {\r\n        const { isActive } = this.props;\r\n\r\n        if (!isActive) {\r\n            this.setState({ isClosed: true });\r\n        }\r\n    }\r\n}\r\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nlet query: MediaQueryList;\r\n\r\nexport default function isMobileView() {\r\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\r\n\r\n    return query.matches;\r\n}\r\n","enum CheckoutStepType {\r\n    Billing = 'billing',\r\n    Customer = 'customer',\r\n    Payment = 'payment',\r\n    Shipping = 'shipping',\r\n}\r\n\r\nexport default CheckoutStepType;\r\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\r\n    if (!cart) {\r\n        return false;\r\n    }\r\n\r\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        config &&\r\n        config.checkoutSettings.features['CHECKOUT-4936.enable_custom_item_shipping'] &&\r\n        cart.lineItems.customItems\r\n    ) {\r\n        return cart.lineItems.customItems.length > 0;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport default itemsRequireShipping;\r\n","import { CheckoutSelectors } from '@bigcommerce/checkout-sdk';\r\nimport { compact } from 'lodash';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { isValidAddress } from '../address';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\nimport { SUPPORTED_METHODS } from '../customer';\r\nimport { PaymentMethodId } from '../payment/paymentMethod';\r\nimport {\r\n  hasSelectedShippingOptions,\r\n  hasUnassignedLineItems,\r\n  itemsRequireShipping,\r\n} from '../shipping';\r\n\r\nimport CheckoutStepType from './CheckoutStepType';\r\n\r\nconst getCustomerStepStatus = createSelector(\r\n  ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n  ({ data }: CheckoutSelectors) => data.getCustomer(),\r\n  ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n  ({ data }: CheckoutSelectors) => data.getConfig(),\r\n  (checkout, customer, billingAddress, config) => {\r\n    const hasEmail = !!((customer && customer.email) || (billingAddress && billingAddress.email));\r\n    const isUsingWallet =\r\n      checkout && checkout.payments\r\n        ? checkout.payments.some((payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0)\r\n        : false;\r\n    const isGuest = !!(customer && customer.isGuest);\r\n    const isComplete = hasEmail || isUsingWallet;\r\n    const isEditable = isComplete && !isUsingWallet && isGuest;\r\n\r\n    // StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\r\n    // it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\r\n    // when reloading the checkout page it's necessary to refill the stripe components with the information saved.\r\n    // In this step, we require that the customer strategy be reloaded the first time.\r\n    const isUsingStripeLinkAndCheckoutPageIsReloaded =\r\n      !isUsingWallet &&\r\n      config?.checkoutSettings.providerWithCustomCheckout === PaymentMethodId.StripeUPE &&\r\n      hasEmail &&\r\n      isGuest;\r\n\r\n    if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\r\n      return {\r\n        type: CheckoutStepType.Customer,\r\n        isActive: false,\r\n        isComplete: customer?.isStripeLinkAuthenticated !== undefined ?? isComplete,\r\n        isEditable,\r\n        isRequired: true,\r\n      };\r\n    }\r\n\r\n    return {\r\n      type: CheckoutStepType.Customer,\r\n      isActive: false,\r\n      isComplete,\r\n      isEditable,\r\n      isRequired: true,\r\n    };\r\n  },\r\n);\r\n\r\nconst getBillingStepStatus = createSelector(\r\n  ({ data }: CheckoutSelectors) => data.getCheckout(),\r\n  ({ data }: CheckoutSelectors) => data.getBillingAddress(),\r\n  ({ data }: CheckoutSelectors) => {\r\n    const billingAddress = data.getBillingAddress();\r\n\r\n    return billingAddress ? data.getBillingAddressFields(billingAddress.countryCode) : EMPTY_ARRAY;\r\n  },\r\n  (checkout, billingAddress, billingAddressFields) => {\r\n    const hasAddress = billingAddress\r\n      ? isValidAddress(billingAddress, billingAddressFields)\r\n      : false;\r\n    const isUsingWallet =\r\n      checkout && checkout.payments\r\n        ? checkout.payments.some((payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0)\r\n        : false;\r\n    const isComplete = hasAddress || isUsingWallet;\r\n    const isUsingAmazonPay =\r\n      checkout && checkout.payments\r\n        ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\r\n        : false;\r\n\r\n    if (isUsingAmazonPay) {\r\n      const billingAddressCustomFields = billingAddressFields.filter(\r\n        ({ custom }: { custom: boolean }) => custom,\r\n      );\r\n      const hasCustomFields = billingAddressCustomFields.length > 0;\r\n      const isAmazonPayBillingStepComplete =\r\n        billingAddress && hasCustomFields\r\n          ? isValidAddress(billingAddress, billingAddressCustomFields)\r\n          : true;\r\n\r\n      return {\r\n        type: CheckoutStepType.Billing,\r\n        isActive: false,\r\n        isComplete: isAmazonPayBillingStepComplete,\r\n        isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\r\n        isRequired: true,\r\n      };\r\n    }\r\n\r\n    return {\r\n      type: CheckoutStepType.Billing,\r\n      isActive: false,\r\n      isComplete,\r\n      isEditable: isComplete && !isUsingWallet,\r\n      isRequired: true,\r\n    };\r\n  },\r\n);\r\n\r\nconst getShippingStepStatus = createSelector(\r\n  ({ data }: CheckoutSelectors) => data.getShippingAddress(),\r\n  ({ data }: CheckoutSelectors) => data.getConsignments(),\r\n  ({ data }: CheckoutSelectors) => data.getCart(),\r\n  ({ data }: CheckoutSelectors) => {\r\n    const shippingAddress = data.getShippingAddress();\r\n\r\n    return shippingAddress\r\n      ? data.getShippingAddressFields(shippingAddress.countryCode)\r\n      : EMPTY_ARRAY;\r\n  },\r\n  ({ data }: CheckoutSelectors) => data.getConfig(),\r\n  (shippingAddress, consignments, cart, shippingAddressFields, config) => {\r\n    const hasAddress = shippingAddress\r\n      ? isValidAddress(shippingAddress, shippingAddressFields)\r\n      : false;\r\n    const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\r\n    const hasUnassignedItems =\r\n      cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\r\n    const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\r\n    const isRequired = itemsRequireShipping(cart, config);\r\n\r\n    return {\r\n      type: CheckoutStepType.Shipping,\r\n      isActive: false,\r\n      isComplete,\r\n      isEditable: isComplete && isRequired,\r\n      isRequired,\r\n    };\r\n  },\r\n);\r\n\r\nconst getPaymentStepStatus = createSelector(\r\n  ({ data }: CheckoutSelectors) => data.getOrder(),\r\n  (order) => {\r\n    const isComplete = order ? order.isComplete : false;\r\n\r\n    return {\r\n      type: CheckoutStepType.Payment,\r\n      isActive: false,\r\n      isComplete,\r\n      isEditable: isComplete,\r\n      isRequired: true,\r\n    };\r\n  },\r\n);\r\n\r\nconst getCheckoutStepStatuses = createSelector(\r\n  getCustomerStepStatus,\r\n  getShippingStepStatus,\r\n  getBillingStepStatus,\r\n  getPaymentStepStatus,\r\n  (customerStep, shippingStep, billingStep, paymentStep) => {\r\n    const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\r\n\r\n    const defaultActiveStep =\r\n      steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\r\n\r\n    return steps.map((step, index) => {\r\n      const isPrevStepComplete = steps\r\n        .slice(0, index)\r\n        .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\r\n\r\n      return {\r\n        ...step,\r\n        isActive: defaultActiveStep.type === step.type,\r\n        isBusy: false,\r\n        // A step is only editable if its previous step is complete or not required\r\n        isEditable: isPrevStepComplete && step.isEditable,\r\n      };\r\n    });\r\n  },\r\n);\r\n\r\nexport default getCheckoutStepStatuses;\r\n","import {\r\n    Address,\r\n    Cart,\r\n    CartChangedError,\r\n    CheckoutParams,\r\n    CheckoutSelectors,\r\n    Consignment,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    FlashMessage,\r\n    Promotion,\r\n    RequestOptions,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { find, findIndex } from 'lodash';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\nimport { AddressFormSkeleton, ChecklistSkeleton } from '@bigcommerce/checkout/ui';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { StaticBillingAddress } from '../billing';\r\nimport { EmptyCartMessage } from '../cart';\r\nimport { withCheckout } from '../checkout';\r\nimport { CustomError, ErrorLogger, ErrorModal, isCustomError } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport {\r\n    CheckoutButtonContainer,\r\n    CheckoutSuggestion,\r\n    Customer,\r\n    CustomerInfo,\r\n    CustomerSignOutEvent,\r\n    CustomerViewType,\r\n} from '../customer';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport { PromotionBannerList } from '../promotion';\r\nimport { hasSelectedShippingOptions, isUsingMultiShipping, StaticConsignment } from '../shipping';\r\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\r\nimport { LazyContainer, LoadingNotification, LoadingOverlay } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport CheckoutStep from './CheckoutStep';\r\nimport CheckoutStepStatus from './CheckoutStepStatus';\r\nimport CheckoutStepType from './CheckoutStepType';\r\nimport CheckoutSupport from './CheckoutSupport';\r\nimport mapToCheckoutProps from './mapToCheckoutProps';\r\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\r\n\r\nconst Billing = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"billing\" */\r\n                '../billing/Billing'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst CartSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary\" */\r\n                '../cart/CartSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst CartSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"cart-summary-drawer\" */\r\n                '../cart/CartSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Payment = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"payment\" */\r\n                '../payment/Payment'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst Shipping = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"shipping\" */\r\n                '../shipping/Shipping'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface CheckoutProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    embeddedSupport: CheckoutSupport;\r\n    errorLogger: ErrorLogger;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\nexport interface CheckoutState {\r\n    activeStepType?: CheckoutStepType;\r\n    isBillingSameAsShipping: boolean;\r\n    customerViewType?: CustomerViewType;\r\n    defaultStepType?: CheckoutStepType;\r\n    error?: Error;\r\n    flashMessages?: FlashMessage[];\r\n    isMultiShippingMode: boolean;\r\n    isCartEmpty: boolean;\r\n    isRedirecting: boolean;\r\n    hasSelectedShippingOptions: boolean;\r\n    isHidingStepNumbers: boolean;\r\n    isSubscribed: boolean;\r\n}\r\n\r\nexport interface WithCheckoutProps {\r\n    billingAddress?: Address;\r\n    cart?: Cart;\r\n    consignments?: Consignment[];\r\n    error?: Error;\r\n    hasCartChanged: boolean;\r\n    flashMessages?: FlashMessage[];\r\n    isGuestEnabled: boolean;\r\n    isLoadingCheckout: boolean;\r\n    isPending: boolean;\r\n    isPriceHiddenFromGuests: boolean;\r\n    isShowingWalletButtonsOnTop: boolean;\r\n    loginUrl: string;\r\n    cartUrl: string;\r\n    createAccountUrl: string;\r\n    canCreateAccountInCheckout: boolean;\r\n    promotions?: Promotion[];\r\n    steps: CheckoutStepStatus[];\r\n    clearError(error?: Error): void;\r\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\r\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\r\n}\r\n\r\nclass Checkout extends Component<\r\n    CheckoutProps & WithCheckoutProps & WithLanguageProps & AnalyticsContextProps,\r\n    CheckoutState\r\n> {\r\n    state: CheckoutState = {\r\n        isBillingSameAsShipping: true,\r\n        isCartEmpty: false,\r\n        isRedirecting: false,\r\n        isMultiShippingMode: false,\r\n        hasSelectedShippingOptions: false,\r\n        isHidingStepNumbers: true,\r\n        isSubscribed: false,\r\n    };\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n    private unsubscribeFromConsignments?: () => void;\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeFromConsignments) {\r\n            this.unsubscribeFromConsignments();\r\n            this.unsubscribeFromConsignments = undefined;\r\n        }\r\n\r\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\r\n        this.handleBeforeExit();\r\n    }\r\n\r\n    async componentDidMount(): Promise<void> {\r\n        const {\r\n            checkoutId,\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            loadCheckout,\r\n            subscribeToConsignments,\r\n            analyticsTracker\r\n        } = this.props;\r\n\r\n        try {\r\n            const { data } = await loadCheckout(checkoutId, {\r\n                params: {\r\n                    include: [\r\n                        'cart.lineItems.physicalItems.categoryNames',\r\n                        'cart.lineItems.digitalItems.categoryNames',\r\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\r\n                },\r\n            });\r\n\r\n\r\n            const { links: { siteLink = '' } = {}, storeProfile } = data.getConfig() || {};\r\n            const errorFlashMessages = data.getFlashMessages('error') || [];\r\n\r\n            (window as any).checkoutCustom = { storeProfile };\r\n\r\n            if (errorFlashMessages.length) {\r\n                const { language } = this.props;\r\n\r\n                this.setState({\r\n                    error: new CustomError({\r\n                        title:\r\n                            errorFlashMessages[0].title ||\r\n                            language.translate('common.error_heading'),\r\n                        message: errorFlashMessages[0].message,\r\n                        data: {},\r\n                        name: 'default',\r\n                    }),\r\n                });\r\n            }\r\n\r\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n            this.unsubscribeFromConsignments = subscribeToConsignments(\r\n                this.handleConsignmentsUpdated,\r\n            );\r\n            this.embeddedMessenger = messenger;\r\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n            messenger.postFrameLoaded({ contentId: containerId });\r\n            messenger.postLoaded();\r\n\r\n            analyticsTracker.checkoutBegin();\r\n\r\n            const consignments = data.getConsignments();\r\n            const cart = data.getCart();\r\n\r\n            const hasMultiShippingEnabled =\r\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\r\n            const checkoutBillingSameAsShippingEnabled =\r\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\r\n            const removeStepNumbersFlag =\r\n              data.getConfig()?.checkoutSettings.features['CHECKOUT-7255.remove_checkout_step_numbers'] ??\r\n              false;\r\n            const defaultNewsletterSignupOption =\r\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\r\n                false;\r\n            const isMultiShippingMode =\r\n                !!cart &&\r\n                !!consignments &&\r\n                hasMultiShippingEnabled &&\r\n                isUsingMultiShipping(consignments, cart.lineItems);\r\n\r\n            this.setState({\r\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\r\n                isHidingStepNumbers: removeStepNumbersFlag,\r\n                isSubscribed: defaultNewsletterSignupOption,\r\n            });\r\n\r\n            if (isMultiShippingMode) {\r\n                this.setState({ isMultiShippingMode }, this.handleReady);\r\n            } else {\r\n                this.handleReady();\r\n            }\r\n\r\n            window.addEventListener('beforeunload', this.handleBeforeExit);\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                this.handleUnhandledError(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { error, isHidingStepNumbers } = this.state;\r\n        let errorModal = null;\r\n\r\n        if (error) {\r\n            if (isCustomError(error)) {\r\n                errorModal = (\r\n                    <ErrorModal\r\n                        error={error}\r\n                        onClose={this.handleCloseErrorModal}\r\n                        title={error.title}\r\n                    />\r\n                );\r\n            } else {\r\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classNames({ 'is-embedded': isEmbedded(), 'remove-checkout-step-numbers': isHidingStepNumbers })}>\r\n                <div className=\"layout optimizedCheckout-contentPrimary\">\r\n                    {this.renderContent()}\r\n                </div>\r\n                {errorModal}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderContent(): ReactNode {\r\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop } = this.props;\r\n\r\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\r\n\r\n        if (isCartEmpty) {\r\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\r\n        }\r\n\r\n        const isPaymentStepActive = activeStepType\r\n            ? activeStepType === CheckoutStepType.Payment\r\n            : defaultStepType === CheckoutStepType.Payment;\r\n\r\n        return (\r\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\r\n                <div className=\"layout-main\">\r\n                    <LoadingNotification isLoading={!isShowingWalletButtonsOnTop && isPending} />\r\n\r\n                    <PromotionBannerList promotions={promotions} />\r\n\r\n                    {isShowingWalletButtonsOnTop && (\r\n                        <CheckoutButtonContainer\r\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                            isPaymentStepActive={isPaymentStepActive}\r\n                            onUnhandledError={this.handleUnhandledError}\r\n                        />\r\n                    )}\r\n\r\n                    <ol className=\"checkout-steps\">\r\n                        {steps\r\n                            .filter((step) => step.isRequired)\r\n                            .map((step) =>\r\n                                this.renderStep({\r\n                                    ...step,\r\n                                    isActive: activeStepType\r\n                                        ? activeStepType === step.type\r\n                                        : defaultStepType === step.type,\r\n                                    isBusy: isPending,\r\n                                }),\r\n                            )}\r\n                    </ol>\r\n                </div>\r\n\r\n                {this.renderCartSummary()}\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n\r\n    private renderStep(step: CheckoutStepStatus): ReactNode {\r\n        switch (step.type) {\r\n            case CheckoutStepType.Customer:\r\n                return this.renderCustomerStep(step);\r\n\r\n            case CheckoutStepType.Shipping:\r\n                return this.renderShippingStep(step);\r\n\r\n            case CheckoutStepType.Billing:\r\n                return this.renderBillingStep(step);\r\n\r\n            case CheckoutStepType.Payment:\r\n                return this.renderPaymentStep(step);\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\r\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\r\n        const {\r\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\r\n            isSubscribed,\r\n        } = this.state;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                suggestion={<CheckoutSuggestion />}\r\n                summary={\r\n                    <CustomerInfo\r\n                        onSignOut={this.handleSignOut}\r\n                        onSignOutError={this.handleError}\r\n                    />\r\n                }\r\n            >\r\n                <Customer\r\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                    isEmbedded={isEmbedded()}\r\n                    isSubscribed={isSubscribed}\r\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\r\n                    onAccountCreated={this.navigateToNextIncompleteStep}\r\n                    onChangeViewType={this.setCustomerViewType}\r\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\r\n                    onContinueAsGuestError={this.handleError}\r\n                    onReady={this.handleReady}\r\n                    onSignIn={this.navigateToNextIncompleteStep}\r\n                    onSignInError={this.handleError}\r\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\r\n                    onUnhandledError={this.handleUnhandledError}\r\n                    step={step}\r\n                    viewType={customerViewType}\r\n                />\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\r\n        const { hasCartChanged, cart, consignments = [] } = this.props;\r\n\r\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\r\n\r\n        if (!cart) {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                summary={consignments.map((consignment) => (\r\n                    <div className=\"staticConsignmentContainer\" key={consignment.id}>\r\n                        <StaticConsignment\r\n                            cart={cart}\r\n                            compactView={consignments.length < 2}\r\n                            consignment={consignment}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            >\r\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n                    <Shipping\r\n                        cartHasChanged={hasCartChanged}\r\n                        isBillingSameAsShipping={isBillingSameAsShipping}\r\n                        isMultiShippingMode={isMultiShippingMode}\r\n                        navigateNextStep={this.handleShippingNextStep}\r\n                        onCreateAccount={this.handleShippingCreateAccount}\r\n                        onReady={this.handleReady}\r\n                        onSignIn={this.handleShippingSignIn}\r\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                        step={step}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\r\n        const { billingAddress } = this.props;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\r\n            >\r\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\r\n                    <Billing\r\n                        navigateNextStep={this.navigateToNextIncompleteStep}\r\n                        onReady={this.handleReady}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\r\n        const { consignments, cart, errorLogger } = this.props;\r\n\r\n        return (\r\n            <CheckoutStep\r\n                {...step}\r\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\r\n                key={step.type}\r\n                onEdit={this.handleEditStep}\r\n                onExpanded={this.handleExpanded}\r\n            >\r\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\r\n                    <Payment\r\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\r\n                        errorLogger={errorLogger}\r\n                        isEmbedded={isEmbedded()}\r\n                        isUsingMultiShipping={\r\n                            cart && consignments\r\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\r\n                                : false\r\n                        }\r\n                        onCartChangedError={this.handleCartChangedError}\r\n                        onFinalize={this.navigateToOrderConfirmation}\r\n                        onReady={this.handleReady}\r\n                        onSubmit={this.navigateToOrderConfirmation}\r\n                        onSubmitError={this.handleError}\r\n                        onUnhandledError={this.handleUnhandledError}\r\n                    />\r\n                </LazyContainer>\r\n            </CheckoutStep>\r\n        );\r\n    }\r\n\r\n    private renderCartSummary(): ReactNode {\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <CartSummaryDrawer />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <CartSummary />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\r\n        const { clearError, error, steps } = this.props;\r\n        const { activeStepType } = this.state;\r\n        const step = find(steps, { type });\r\n\r\n        if (!step) {\r\n            return;\r\n        }\r\n\r\n        if (activeStepType === step.type) {\r\n            return;\r\n        }\r\n\r\n        if (options && options.isDefault) {\r\n            this.setState({ defaultStepType: step.type });\r\n        } else {\r\n            this.setState({ activeStepType: step.type });\r\n        }\r\n\r\n        if (error) {\r\n            clearError(error);\r\n        }\r\n    }\r\n\r\n    private handleToggleMultiShipping: () => void = () => {\r\n        const { isMultiShippingMode } = this.state;\r\n\r\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\r\n    };\r\n\r\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\r\n        options,\r\n    ) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n        const activeStepIndex = findIndex(steps, { isActive: true });\r\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\r\n\r\n        if (!activeStep) {\r\n            return;\r\n        }\r\n\r\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\r\n\r\n        if (previousStep) {\r\n            analyticsTracker.trackStepCompleted(previousStep.type);\r\n        }\r\n\r\n        this.navigateToStep(activeStep.type, options);\r\n    };\r\n\r\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\r\n        const { steps, analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postComplete();\r\n        }\r\n\r\n        this.setState({ isRedirecting: true }, () => {\r\n            navigateToOrderConfirmation(orderId);\r\n        });\r\n    };\r\n\r\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\r\n        const { embeddedSupport } = this.props;\r\n\r\n        return embeddedSupport.isSupported(...methodIds);\r\n    };\r\n\r\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\r\n        this.navigateToStep(CheckoutStepType.Shipping);\r\n    };\r\n\r\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\r\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType } =\r\n            this.state;\r\n\r\n        const { steps } = this.props;\r\n\r\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\r\n            data.getConsignments() || [],\r\n        );\r\n\r\n        if (\r\n            prevHasSelectedShippingOptions &&\r\n            !newHasSelectedShippingOptions &&\r\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\r\n                findIndex(steps, { type: activeStepType })\r\n        ) {\r\n            this.navigateToStep(CheckoutStepType.Shipping);\r\n            this.setState({ error: new ShippingOptionExpiredError() });\r\n        }\r\n\r\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\r\n    };\r\n\r\n    private handleCloseErrorModal: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.trackStepViewed(type);\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        this.handleError(error);\r\n\r\n        // For errors that are not caught and handled by child components, we\r\n        // handle them here by displaying a generic error modal to the shopper.\r\n        this.setState({ error });\r\n    };\r\n\r\n    private handleError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n\r\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\r\n        this.navigateToStep(type);\r\n    };\r\n\r\n    private handleReady: () => void = () => {\r\n        this.navigateToNextIncompleteStep({ isDefault: true });\r\n    };\r\n\r\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\r\n        this.setState({ isSubscribed: subscribed });\r\n    }\r\n\r\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\r\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\r\n\r\n        if (isPriceHiddenFromGuests) {\r\n            if (window.top) {\r\n                return (window.top.location.href = cartUrl);\r\n            }\r\n        }\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postSignedOut();\r\n        }\r\n\r\n        if (isGuestEnabled) {\r\n            this.setCustomerViewType(CustomerViewType.Guest);\r\n        }\r\n\r\n        if (isCartEmpty) {\r\n            this.setState({ isCartEmpty: true });\r\n\r\n            if (!isEmbedded()) {\r\n                if (window.top) {\r\n                    return window.top.location.assign(loginUrl);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n    };\r\n\r\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\r\n        isBillingSameAsShipping,\r\n    ) => {\r\n        this.setState({ isBillingSameAsShipping });\r\n\r\n        if (isBillingSameAsShipping) {\r\n            this.navigateToNextIncompleteStep();\r\n        } else {\r\n            this.navigateToStep(CheckoutStepType.Billing);\r\n        }\r\n    };\r\n\r\n    private handleShippingSignIn: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.Login);\r\n    };\r\n\r\n    private handleShippingCreateAccount: () => void = () => {\r\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\r\n    };\r\n\r\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\r\n        const { canCreateAccountInCheckout, createAccountUrl } = this.props;\r\n\r\n        if (\r\n            customerViewType === CustomerViewType.CreateAccount &&\r\n            (!canCreateAccountInCheckout || isEmbedded())\r\n        ) {\r\n            if (window.top) {\r\n                window.top.location.replace(createAccountUrl);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.navigateToStep(CheckoutStepType.Customer);\r\n        this.setState({ customerViewType });\r\n    };\r\n\r\n    private handleBeforeExit: () => void = () => {\r\n        const { analyticsTracker } = this.props;\r\n\r\n        analyticsTracker.exitCheckout();\r\n    }\r\n}\r\n\r\nexport default withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout)));\r\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { WithCheckoutProps } from './Checkout';\r\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\r\n\r\nexport default function mapToCheckoutProps({\r\n    checkoutService,\r\n    checkoutState,\r\n}: CheckoutContextProps): WithCheckoutProps {\r\n    const { data, errors, statuses } = checkoutState;\r\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\r\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\r\n    const {\r\n        checkoutSettings: {\r\n            guestCheckoutEnabled: isGuestEnabled = false,\r\n            features = {},\r\n            checkoutUserExperienceSettings = {\r\n                walletButtonsOnTop: false,\r\n                floatingLabelEnabled: false,\r\n            } ,\r\n        } = {},\r\n        links: {\r\n            loginLink: loginUrl = '',\r\n            createAccountLink: createAccountUrl = '',\r\n            cartLink: cartUrl = '',\r\n        } = {},\r\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\r\n    } = data.getConfig() || {};\r\n\r\n    const subscribeToConsignmentsSelector = createSelector(\r\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\r\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\r\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\r\n        },\r\n    );\r\n\r\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\r\n\r\n    return {\r\n        billingAddress: data.getBillingAddress(),\r\n        cart: data.getCart(),\r\n        clearError: checkoutService.clearError,\r\n        consignments: data.getConsignments(),\r\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\r\n        isGuestEnabled,\r\n        isLoadingCheckout: statuses.isLoadingCheckout(),\r\n        isPending: statuses.isPending(),\r\n        isPriceHiddenFromGuests,\r\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\r\n        loadCheckout: checkoutService.loadCheckout,\r\n        loginUrl,\r\n        cartUrl,\r\n        createAccountUrl,\r\n        canCreateAccountInCheckout: features['CHECKOUT-4941.account_creation_in_checkout'],\r\n        promotions,\r\n        subscribeToConsignments: subscribeToConsignmentsSelector({\r\n            checkoutService,\r\n            checkoutState,\r\n        }),\r\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\r\n    };\r\n}\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\nimport '../../scss/App.scss';\r\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { createErrorLogger, ErrorBoundary, ErrorLogger } from '../common/error';\r\nimport {\r\n    createEmbeddedCheckoutStylesheet,\r\n    createEmbeddedCheckoutSupport,\r\n} from '../embeddedCheckout';\r\n\r\nimport Checkout from './Checkout';\r\n\r\nexport interface CheckoutAppProps {\r\n    checkoutId: string;\r\n    containerId: string;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n}\r\n\r\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<CheckoutAppProps>) {\r\n        super(props);\r\n\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ErrorBoundary logger={ this.errorLogger }>\r\n                <LocaleProvider checkoutService={ this.checkoutService }>\r\n                    <CheckoutProvider checkoutService={ this.checkoutService }>\r\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\r\n                            <Checkout\r\n                                {...this.props}\r\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                embeddedStylesheet={this.embeddedStylesheet}\r\n                                embeddedSupport={this.embeddedSupport}\r\n                                errorLogger={this.errorLogger}\r\n                            />\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n}\r\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { MatchedProps } from './InjectHoc';\r\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\r\n\r\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\r\n    mapToProps:\r\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\r\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\r\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\r\n    return mapToProps.length === 0;\r\n}\r\n\r\nexport default function createMappableInjectHoc<TContextProps>(\r\n    ContextComponent: Context<TContextProps>,\r\n    options?: { displayNamePrefix?: string },\r\n): MappableInjectHoc<NonNullable<TContextProps>> {\r\n    return <TMappedProps, TOwnProps>(\r\n        mapToPropsOrFactory:\r\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\r\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\r\n    ) => {\r\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\r\n            OriginalComponent: ComponentType<TProps>,\r\n        ) => {\r\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n                <OriginalComponent {...props} />\r\n            ));\r\n\r\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\r\n                props,\r\n            ) => {\r\n                const context = useContext(ContextComponent);\r\n\r\n                const mapToProps = useMemo(\r\n                    () =>\r\n                        isMapToPropsFactory(mapToPropsOrFactory)\r\n                            ? mapToPropsOrFactory()\r\n                            : mapToPropsOrFactory,\r\n                    [],\r\n                );\r\n\r\n                const mappedProps = context\r\n                    ? mapToProps(\r\n                          context,\r\n                          props as unknown as TOwnProps,\r\n                      )\r\n                    : context;\r\n\r\n                if (!mappedProps) {\r\n                    return null;\r\n                }\r\n\r\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\r\n\r\n                return <InnerDecoratedComponent {...mergedProps} />;\r\n            };\r\n\r\n            if (options && options.displayNamePrefix && OriginalComponent) {\r\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\r\n                    OriginalComponent.displayName || OriginalComponent.name\r\n                })`;\r\n            }\r\n\r\n            return DecoratedComponent;\r\n        };\r\n    };\r\n}\r\n","import { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { createMappableInjectHoc } from '../common/hoc';\r\n\r\n\r\nexport type WithCheckoutProps = CheckoutContextProps;\r\n\r\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\r\n    displayNamePrefix: 'WithCheckout',\r\n});\r\n\r\nexport default withCheckout;\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport default function preventDefault<\r\n    TFunc extends (event: TEvent, ...args: any[]) => any,\r\n    TEvent extends SyntheticEvent,\r\n>(fn?: TFunc): (event: TEvent) => void {\r\n    return (event) => {\r\n        event.preventDefault();\r\n\r\n        if (fn) {\r\n            fn(event);\r\n        }\r\n    };\r\n}\r\n","export default class CustomError extends Error {\r\n    static shouldReport: boolean;\r\n\r\n    data: any;\r\n    title: string;\r\n    type: string;\r\n\r\n    constructor({\r\n        data = {},\r\n        message = '',\r\n        title = '',\r\n        name = '',\r\n    }: {\r\n        data?: any;\r\n        message?: string;\r\n        title?: string;\r\n        name?: string;\r\n    }) {\r\n        super();\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, CustomError);\r\n        } else {\r\n            this.stack = new Error().stack;\r\n        }\r\n\r\n         \r\n        this.data = data;\r\n        this.message = message;\r\n        this.name = name;\r\n        this.title = title;\r\n        this.type = 'custom';\r\n    }\r\n\r\n    // todo: remove these methods when all error types has specific subclasses.\r\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n    // to proper error subclasses.\r\n    protected setDefaultValues({\r\n        name,\r\n        defaultError,\r\n        defaultTitle,\r\n    }: {\r\n        name: string;\r\n        defaultError: string;\r\n        defaultTitle: string;\r\n    }): void {\r\n        this.name = this.name || name;\r\n        this.message = this.message || defaultError;\r\n        this.title = this.title || defaultTitle;\r\n    }\r\n}\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport ErrorLogger from './ErrorLogger';\r\n\r\nexport interface ErrorBoundaryProps {\r\n    children: ReactNode;\r\n    fallback?: ReactNode;\r\n    logger?: ErrorLogger;\r\n    filter?(error: Error): boolean;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n    error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\r\n        return { error };\r\n    }\r\n\r\n    state: ErrorBoundaryState = {};\r\n\r\n    componentDidCatch(error: Error): void {\r\n        const { filter = () => true, logger } = this.props;\r\n\r\n        if (!filter(error)) {\r\n            throw error;\r\n        }\r\n\r\n        if (logger) {\r\n            logger.log(error);\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children, fallback, filter = () => true } = this.props;\r\n\r\n        const { error } = this.state;\r\n\r\n        if (error && filter(error)) {\r\n            return fallback || null;\r\n        }\r\n\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport './ErrorCode.scss';\r\n\r\nexport interface ErrorCodeProps {\r\n    code: string;\r\n    label?: ReactNode;\r\n}\r\n\r\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\r\n    return (\r\n        <div className=\"errorCode\">\r\n            <span className=\"errorCode-label\">\r\n                {label ?? <TranslatedString id=\"common.error_code\" />}\r\n            </span>{' '}\r\n            <span className=\"errorCode-value\">{code}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ErrorCode);\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { noop } from 'lodash';\r\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Button, ButtonSize } from '../../ui/button';\r\nimport { IconError, IconSize } from '../../ui/icon';\r\nimport { Modal, ModalHeader } from '../../ui/modal';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ErrorCode from './ErrorCode';\r\nimport isCustomError from './isCustomError';\r\nimport isRequestError from './isRequestError';\r\n\r\nexport interface ErrorModalProps {\r\n    error?: Error | RequestError;\r\n    message?: ReactNode;\r\n    title?: ReactNode;\r\n    shouldShowErrorCode?: boolean;\r\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\r\n}\r\n\r\nexport interface ErrorModalOnCloseProps {\r\n    error: Error;\r\n}\r\n\r\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\r\n    private aria = {\r\n        labelledby: 'errorModalMessage',\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <Modal\r\n                additionalModalClassName=\"modal--error\"\r\n                aria={this.aria}\r\n                footer={this.renderFooter()}\r\n                header={this.renderHeader()}\r\n                isOpen={!!error}\r\n                onRequestClose={this.handleOnRequestClose}\r\n            >\r\n                {this.renderBody()}\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    private renderHeader(): ReactNode {\r\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\r\n\r\n        return (\r\n            <ModalHeader>\r\n                <IconError\r\n                    additionalClassName=\"icon--error modal-header-icon\"\r\n                    size={IconSize.Small}\r\n                />\r\n                <span aria-live=\"assertive\" role=\"alert\">\r\n                    {title || <TranslatedString id=\"common.error_heading\" />}\r\n                </span>\r\n            </ModalHeader>\r\n        );\r\n    }\r\n\r\n    private renderBody(): ReactNode {\r\n        const { error, message = error && error.message } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {message && (\r\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\r\n                        {message}\r\n                    </p>\r\n                )}\r\n\r\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderFooter(): ReactNode {\r\n        return (\r\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\r\n                <TranslatedString id=\"common.ok_action\" />\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    private renderErrorCode(): ReactNode {\r\n        const { error, shouldShowErrorCode = true } = this.props;\r\n\r\n        if (!error || !shouldShowErrorCode) {\r\n            return;\r\n        }\r\n\r\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\r\n            return (\r\n                <ErrorCode\r\n                    code={error.headers['x-request-id']}\r\n                    label={<TranslatedString id=\"common.request_id\" />}\r\n                />\r\n            );\r\n        }\r\n\r\n        const errorCode = computeErrorCode(error);\r\n\r\n        if (!errorCode) {\r\n            return;\r\n        }\r\n\r\n        return <ErrorCode code={errorCode} />;\r\n    }\r\n\r\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\r\n        const { error, onClose = noop } = this.props;\r\n\r\n        if (error) {\r\n            onClose(event.nativeEvent, { error });\r\n        }\r\n    };\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isRequestError(error: unknown): error is RequestError {\r\n    const requestError = error as RequestError;\r\n\r\n    return requestError.type === 'request';\r\n}\r\n","import HashStatic from 'object-hash';\r\n\r\nexport default function computeErrorCode(value: any): string | undefined {\r\n    try {\r\n        return HashStatic(value).toUpperCase();\r\n    } catch (error) {}\r\n}\r\n","import CustomError from './CustomError';\r\n\r\n// todo: remove this method in favour of creating proper subclasses for each error type.\r\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\r\n// to proper error subclasses.\r\nexport default function createCustomErrorType({\r\n    name,\r\n    defaultError = '',\r\n    defaultTitle = '',\r\n    shouldReport = false,\r\n}: {\r\n    name: string;\r\n    defaultError?: string;\r\n    defaultTitle?: string;\r\n    shouldReport?: boolean;\r\n}) {\r\n    class CustomErrorType extends CustomError {\r\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\r\n            super({\r\n                data,\r\n                message: errorMessage,\r\n                title: errorTitle,\r\n            });\r\n\r\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\r\n            setPrototypeOf(this, CustomErrorType.prototype);\r\n\r\n            this.setDefaultValues({\r\n                name,\r\n                defaultError,\r\n                defaultTitle,\r\n            });\r\n        }\r\n    }\r\n\r\n    CustomErrorType.shouldReport = shouldReport;\r\n\r\n    return CustomErrorType;\r\n}\r\n\r\nexport function setPrototypeOf(object: any, prototype: any) {\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else {\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n","import { BrowserOptions } from '@sentry/browser';\r\n\r\nexport default interface ErrorLogger {\r\n    /**\r\n     * Logs an error in, tagging it with an error code.\r\n     *\r\n     * @param error The error object to be logged\r\n     * @param tags The tags attached to the log entry\r\n     * @param level The level of the log\r\n     * @param meta Any extra meta data\r\n     */\r\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\r\n}\r\n\r\nexport interface ErrorLoggerOptions {\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n}\r\n\r\nexport interface ErrorLoggerServiceConfig {\r\n    sentry?: BrowserOptions;\r\n}\r\n\r\nexport interface ErrorTags {\r\n    /**\r\n     * A code that identifies uniquely each error type\r\n     */\r\n    errorCode: string;\r\n}\r\n\r\nexport interface ErrorMeta {\r\n    [key: string]: unknown;\r\n}\r\n\r\nexport enum ErrorLevelType {\r\n    Info = 'info',\r\n    Warning = 'warning',\r\n    Error = 'error',\r\n    Debug = 'debug',\r\n}\r\n","import ErrorLogger, { ErrorLevelType, ErrorMeta, ErrorTags } from './ErrorLogger';\r\n\r\nexport interface ConsoleErrorLoggerOptions {\r\n    console?: Console;\r\n    errorTypes?: string[];\r\n}\r\n\r\n// tslint:disable:no-console\r\nexport default class ConsoleErrorLogger implements ErrorLogger {\r\n    private console: Console;\r\n\r\n    constructor(options?: ConsoleErrorLoggerOptions) {\r\n        const { console: customConsole = console } = options || {};\r\n\r\n        this.console = customConsole;\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        meta?: ErrorMeta,\r\n    ): void {\r\n        switch (level) {\r\n            case ErrorLevelType.Error:\r\n                return this.console.error(error, tags, meta);\r\n\r\n            case ErrorLevelType.Info:\r\n                return this.console.info(error, tags, meta);\r\n\r\n            case ErrorLevelType.Warning:\r\n                return this.console.warn(error, tags, meta);\r\n\r\n            default:\r\n                return this.console.log(error, tags, meta);\r\n        }\r\n    }\r\n}\r\n","import ErrorLogger from './ErrorLogger';\r\n\r\nexport default class NoopErrorLogger implements ErrorLogger {\r\n    log() {}\r\n}\r\n","import {\r\n    BrowserOptions,\r\n    captureException,\r\n    Event,\r\n    init,\r\n    Integrations,\r\n    SeverityLevel,\r\n    StackFrame,\r\n    withScope,\r\n} from '@sentry/browser';\r\nimport { RewriteFrames } from '@sentry/integrations';\r\nimport { EventHint, Exception } from '@sentry/types';\r\n\r\nimport computeErrorCode from './computeErrorCode';\r\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport ErrorLogger, { ErrorLevelType, ErrorMeta, ErrorTags } from './ErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\n\r\nconst FILENAME_PREFIX = 'app://';\r\nconst SAMPLE_RATE = 0.1;\r\n\r\nexport interface SentryErrorLoggerOptions {\r\n    consoleLogger?: ConsoleErrorLogger;\r\n    errorTypes?: string[];\r\n    publicPath?: string;\r\n}\r\n\r\nexport enum SeverityLevelEnum {\r\n    DEBUG = 'debug',\r\n    ERROR = 'error',\r\n    INFO = 'info',\r\n    WARNING = 'warning',\r\n}\r\n\r\nexport default class SentryErrorLogger implements ErrorLogger {\r\n    private consoleLogger: ErrorLogger;\r\n    private publicPath: string;\r\n\r\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\r\n        const { consoleLogger = new NoopErrorLogger(), publicPath = '' } = options || {};\r\n\r\n        this.consoleLogger = consoleLogger;\r\n        this.publicPath = publicPath;\r\n\r\n        init({\r\n            sampleRate: SAMPLE_RATE,\r\n            beforeSend: this.handleBeforeSend,\r\n            denyUrls: [...(config.denyUrls || []), 'polyfill~checkout', 'sentry~checkout', 'convertcart'],\r\n            integrations: [\r\n                new Integrations.GlobalHandlers({\r\n                    onerror: false,\r\n                    onunhandledrejection: true,\r\n                }),\r\n                new RewriteFrames({\r\n                    iteratee: this.handleRewriteFrame,\r\n                }),\r\n            ],\r\n            ...config,\r\n        });\r\n    }\r\n\r\n    log(\r\n        error: Error,\r\n        tags?: ErrorTags,\r\n        level: ErrorLevelType = ErrorLevelType.Error,\r\n        payload?: ErrorMeta,\r\n    ): void {\r\n        this.consoleLogger.log(error, tags, level);\r\n\r\n        withScope((scope) => {\r\n            const { errorCode = computeErrorCode(error) } = tags || {};\r\n\r\n            if (errorCode) {\r\n                scope.setTags({ errorCode });\r\n            }\r\n\r\n            scope.setLevel(this.mapToSentryLevel(level));\r\n\r\n            if (payload) {\r\n                scope.setExtras(payload);\r\n            }\r\n\r\n            scope.setFingerprint(['{{ default }}']);\r\n\r\n            captureException(error);\r\n        });\r\n    }\r\n\r\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\r\n        switch (level) {\r\n            case ErrorLevelType.Info:\r\n                return SeverityLevelEnum.INFO;\r\n\r\n            case ErrorLevelType.Warning:\r\n                return SeverityLevelEnum.WARNING;\r\n\r\n            case ErrorLevelType.Debug:\r\n                return SeverityLevelEnum.DEBUG;\r\n\r\n            case ErrorLevelType.Error:\r\n            default:\r\n                return SeverityLevelEnum.ERROR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\r\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\r\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\r\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\r\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\r\n     * whose topmost frame is ours but frames below it are not.\r\n     */\r\n    private shouldReportExceptions(\r\n        exceptions: Exception[],\r\n        originalException: unknown,\r\n    ): boolean {\r\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\r\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\r\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\r\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\r\n        if (!exceptions.length || !(originalException instanceof Error)) {\r\n            return false;\r\n        }\r\n\r\n        return exceptions.every((exception) => {\r\n            if (!exception.stacktrace?.frames?.length) {\r\n                return false;\r\n            }\r\n\r\n            return exception.stacktrace.frames.every((frame) =>\r\n                frame.filename?.startsWith(FILENAME_PREFIX),\r\n            );\r\n        });\r\n    }\r\n\r\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\r\n        if (\r\n            event.breadcrumbs?.filter((breadcrumb) => breadcrumb.data?.url?.includes('convertcart'))\r\n        ) {\r\n            return null;\r\n        }\r\n\r\n        if (event.exception) {\r\n            if (\r\n                !this.shouldReportExceptions(\r\n                    event.exception.values ?? [],\r\n                    hint?.originalException ?? null,\r\n                )\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            return event;\r\n        }\r\n\r\n        return event;\r\n    };\r\n\r\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\r\n        if (this.publicPath && frame.filename) {\r\n            // We want to remove the base path of the filename, otherwise we\r\n            // will need to specify it when we upload the sourcemaps so that the\r\n            // filenames can match up.\r\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\r\n\r\n            // `frame` needs to be modified in-place (based on the example in\r\n            // their documentation).\r\n            if (filename !== frame.filename) {\r\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\r\n            }\r\n        }\r\n\r\n        return frame;\r\n    };\r\n}\r\n","import ConsoleErrorLogger from './ConsoleErrorLogger';\r\nimport ErrorLogger, { ErrorLoggerOptions, ErrorLoggerServiceConfig } from './ErrorLogger';\r\nimport NoopErrorLogger from './NoopErrorLogger';\r\nimport SentryErrorLogger from './SentryErrorLogger';\r\n\r\nexport default function createErrorLogger(\r\n    serviceConfig?: ErrorLoggerServiceConfig,\r\n    options?: ErrorLoggerOptions,\r\n): ErrorLogger {\r\n    if (serviceConfig && serviceConfig.sentry) {\r\n        return new SentryErrorLogger(serviceConfig.sentry, {\r\n            ...options,\r\n            consoleLogger: new ConsoleErrorLogger(options),\r\n        });\r\n    }\r\n\r\n    if (process.env.NODE_ENV === 'test') {\r\n        return new NoopErrorLogger();\r\n    }\r\n\r\n    return new ConsoleErrorLogger(options);\r\n}\r\n","import CustomError from './CustomError';\r\n\r\nexport default function isCustomError(error: Error): error is CustomError {\r\n    const customError = error as CustomError;\r\n\r\n    return (\r\n        typeof customError.title !== 'undefined' &&\r\n        typeof customError.data !== 'undefined' &&\r\n        typeof customError.type !== 'undefined'\r\n    );\r\n}\r\n","import { RequestError } from '@bigcommerce/checkout-sdk';\r\n\r\ninterface ErrorWithType extends RequestError {\r\n    type: string;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\r\n    obj: X,\r\n    key: Y,\r\n): obj is X & Record<Y, unknown> {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\r\n    return (\r\n        typeof error === 'object' &&\r\n        error !== null &&\r\n        hasOwnProperty(error, 'type') &&\r\n        typeof error.type === 'string'\r\n    );\r\n}\r\n","import { isEmpty, pickBy } from 'lodash';\r\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\r\n\r\nimport InjectHoc from './InjectHoc';\r\n\r\nexport interface InjectHocOptions<TInjectedProps> {\r\n    displayNamePrefix?: string;\r\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\r\n}\r\n\r\nexport default function createInjectHoc<\r\n    TInjectedProps extends object | undefined,\r\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\r\n>(\r\n    ContextComponent: Context<TInjectedProps>,\r\n    options?: InjectHocOptions<TInjectedProps>,\r\n): InjectHoc<NonNullable<TPickedProps>> {\r\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\r\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\r\n\r\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n            <OriginalComponent {...props} />\r\n        ));\r\n\r\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\r\n            const context = useContext(ContextComponent);\r\n            const injectedProps = pickBy(context, (value, key) =>\r\n                pickProps(value, key as keyof TInjectedProps),\r\n            );\r\n\r\n            if (isEmpty(injectedProps)) {\r\n                return null;\r\n            }\r\n\r\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\r\n\r\n            return <InnerDecoratedComponent {...mergedProps} />;\r\n        };\r\n\r\n        if (displayNamePrefix) {\r\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\r\n                OriginalComponent.displayName || OriginalComponent.name\r\n            })`;\r\n        }\r\n\r\n        return DecoratedComponent;\r\n    };\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport { ResolvableComponent } from '.';\r\n\r\nexport default function isResolvableComponent<TProps, TIdentifier>(\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Component: ComponentType<TProps>,\r\n): Component is ResolvableComponent<TProps, TIdentifier> {\r\n    return 'resolveIds' in Component;\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\ninterface ResolveResult<TProps> {\r\n    component: ComponentType<TProps>;\r\n    matches: number;\r\n    default: boolean;\r\n}\r\n\r\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\r\n    query: TResolveId,\r\n    components: Record<string, ComponentType<TProps>>,\r\n): ComponentType<TProps> | undefined {\r\n    const results: Array<ResolveResult<TProps>> = [];\r\n\r\n    for (const [_, Component] of Object.entries(components)) {\r\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\r\n            continue;\r\n        }\r\n\r\n        for (const resolverId of Component.resolveIds) {\r\n            const result = { component: Component, matches: 0, default: false };\r\n\r\n            for (const [key, value] of Object.entries(resolverId)) {\r\n                if (key in query && query[key] !== value) {\r\n                    result.matches = 0;\r\n                    break;\r\n                }\r\n\r\n                if (query[key] === value) {\r\n                    result.matches++;\r\n                }\r\n\r\n                if (key === 'default' && value === true) {\r\n                    result.default = true;\r\n                }\r\n            }\r\n\r\n            results.push(result);\r\n        }\r\n    }\r\n\r\n    const matched = results\r\n        .sort((a, b) => b.matches - a.matches)\r\n        .filter((result) => result.matches > 0)[0];\r\n\r\n    return matched?.component ?? results.find((result) => result.default)?.component;\r\n}\r\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\r\n// we'll need to change the props of all components as readonly.\r\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\r\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\r\n","export default function isBuyNowCart(): boolean {\r\n    const lastPathName = window.location.pathname.split('/').pop();\r\n\r\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\r\n}\r\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\r\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\r\n}\r\n","const DEFAULT_OPTIONS = {\r\n    count: 5,\r\n    interval: 1000,\r\n};\r\n\r\nexport interface RetryOptions {\r\n    count?: number;\r\n    interval?: number;\r\n}\r\n\r\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\r\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n    try {\r\n        return await fn();\r\n    } catch (error) {\r\n        if (count === 1) {\r\n            throw error;\r\n        }\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, interval));\r\n\r\n        return retry(fn, { interval, count: count - 1 });\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\r\n\r\nexport interface ShopperCurrencyProps {\r\n    amount: number;\r\n}\r\n\r\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\r\n    amount,\r\n    currency,\r\n}) => <>{currency.toCustomerCurrency(amount)}</>;\r\n\r\nexport default withCurrency(ShopperCurrency);\r\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\r\n\r\nexport interface PasswordRequirements {\r\n    minLength: number;\r\n    alpha: RegExp;\r\n    numeric: RegExp;\r\n    description?: string;\r\n}\r\n\r\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\r\n    const {\r\n        passwordRequirements: { minlength, error: description, alpha, numeric },\r\n    } = config;\r\n\r\n    return getPasswordRequirements({\r\n        minlength,\r\n        description,\r\n        alpha,\r\n        numeric,\r\n    });\r\n}\r\n\r\nexport default function getPasswordRequirements({\r\n    minlength,\r\n    description,\r\n    alpha,\r\n    numeric,\r\n}: CustomerPasswordRequirements): PasswordRequirements {\r\n    const allSlashes = new RegExp('/', 'g');\r\n\r\n    return {\r\n        minLength: minlength,\r\n        description,\r\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\r\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\r\n    };\r\n}\r\n","import { assign, kebabCase, map, pickBy } from 'lodash';\r\n\r\nexport default function toCSSRule(\r\n    selector: string,\r\n    ...styles: Array<{ [key: string]: any } | undefined>\r\n): string {\r\n    const mergedStyles = assign({}, ...styles);\r\n    const props = map(\r\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\r\n        (value, key) => `${kebabCase(key)}: ${value};`,\r\n    ).join(' ');\r\n\r\n    return `${selector} {${props}}`;\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { toCSSRule } from '../common/dom';\r\n\r\nexport default class EmbeddedCheckoutStyleParser {\r\n    parse(styles: EmbeddedCheckoutStyles): string[] {\r\n        const rules: string[] = [];\r\n\r\n        if (styles.body) {\r\n            rules.push(toCSSRule('body', styles.body));\r\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\r\n        }\r\n\r\n        if (styles.text) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\r\n        }\r\n\r\n        if (styles.secondaryText) {\r\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\r\n        }\r\n\r\n        if (styles.heading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\r\n        }\r\n\r\n        if (styles.secondaryHeading) {\r\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\r\n        }\r\n\r\n        if (styles.link) {\r\n            rules.push(toCSSRule('a', styles.link));\r\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\r\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\r\n        }\r\n\r\n        if (styles.label) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-label',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .form-inlineMessage',\r\n                    styles.label,\r\n                    styles.label.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.button) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:active',\r\n                    styles.button,\r\n                    styles.button.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:focus',\r\n                    styles.button,\r\n                    styles.button.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary:hover',\r\n                    styles.button,\r\n                    styles.button.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\r\n                    styles.button,\r\n                    styles.button.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.secondaryButton) {\r\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.active,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\r\n                    styles.secondaryButton,\r\n                    styles.secondaryButton.disabled,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.input) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-input::placeholder',\r\n                    styles.input,\r\n                    styles.input.placeholder,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:focus',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-input:hover',\r\n                    styles.input,\r\n                    styles.input.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.select) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:focus',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-select:hover',\r\n                    styles.select,\r\n                    styles.select.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.checkbox) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.focus,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\r\n                    styles.checkbox,\r\n                    styles.checkbox.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.radio) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\r\n            );\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\r\n                    styles.radio,\r\n                    styles.radio.error,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.step) {\r\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\r\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\r\n        }\r\n\r\n        if (styles.checklist) {\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\r\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item:hover',\r\n                    styles.checklist,\r\n                    styles.checklist.hover,\r\n                ),\r\n            );\r\n            rules.push(\r\n                toCSSRule(\r\n                    '.optimizedCheckout-form-checklist-item--selected',\r\n                    styles.checklist,\r\n                    styles.checklist.checked,\r\n                ),\r\n            );\r\n        }\r\n\r\n        if (styles.discountBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\r\n        }\r\n\r\n        if (styles.loadingBanner) {\r\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\r\n        }\r\n\r\n        if (styles.orderSummary) {\r\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\r\n            rules.push(\r\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\r\n            );\r\n        }\r\n\r\n        return rules;\r\n    }\r\n}\r\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { appendStylesheet } from '../common/dom';\r\n\r\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\n\r\nexport default class EmbeddedCheckoutStylesheet {\r\n    private _parser: EmbeddedCheckoutStyleParser;\r\n\r\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\r\n        this._parser = embeddedCheckoutStyleParser;\r\n    }\r\n\r\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\r\n        return appendStylesheet(this._parser.parse(styles));\r\n    }\r\n}\r\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\r\n    const style = document.createElement('style');\r\n\r\n    document.head.appendChild(style);\r\n\r\n    if (style.sheet instanceof CSSStyleSheet) {\r\n        const { sheet } = style;\r\n\r\n        rules.forEach((rule, index) => {\r\n            sheet.insertRule(rule, index);\r\n        });\r\n    }\r\n\r\n    return style;\r\n}\r\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\r\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\r\n\r\nexport default function createEmbeddedCheckoutStylesheet() {\r\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\r\n\r\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\r\n}\r\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\r\n    const basePath = `/${pathname.split('/')[1]}`;\r\n\r\n    return basePath === '/embedded-checkout';\r\n}\r\n","import { FormField } from '@bigcommerce/checkout-sdk';\r\nimport { memoize } from '@bigcommerce/memoize';\r\nimport {\r\n    array,\r\n    ArraySchema,\r\n    date,\r\n    number,\r\n    NumberSchema,\r\n    object,\r\n    ObjectSchema,\r\n    Schema,\r\n    string,\r\n} from 'yup';\r\n\r\nimport { DynamicFormFieldType } from '../ui/form';\r\n\r\nexport type TranslateValidationErrorFunction = (\r\n    validationType: 'max' | 'min' | 'required' | 'invalid',\r\n    field: {\r\n        name: string;\r\n        label: string;\r\n        min?: number;\r\n        max?: number;\r\n    },\r\n) => string | undefined;\r\n\r\nexport interface FormFieldsValidationSchemaOptions {\r\n    formFields: FormField[];\r\n    translate?: TranslateValidationErrorFunction;\r\n}\r\n\r\nexport interface CustomFormFieldValues {\r\n    customFields: CustomFormFields;\r\n}\r\n\r\nexport interface CustomFormFields {\r\n    [id: string]: string | string[] | number;\r\n}\r\n\r\nexport default memoize(function getCustomFormFieldsValidationSchema({\r\n    formFields,\r\n    translate = () => undefined,\r\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\r\n    return object({\r\n        customFields: object(\r\n            formFields\r\n                .filter(({ custom }) => !!custom)\r\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\r\n                    let maxValue: number | undefined;\r\n                    let minValue: number | undefined;\r\n\r\n                    if (type === 'date') {\r\n                        schema[name] = date()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\r\n                            // validation when it's optional\r\n                            .strict(true)\r\n                            .nullable(true)\r\n                            .transform((value, originalValue) =>\r\n                                originalValue === '' ? null : value,\r\n                            );\r\n                    } else if (type === 'integer') {\r\n                        schema[name] = number()\r\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\r\n                            // validation when it's optional\r\n                            .strict(true)\r\n                            .transform((value) => (isNaN(value) ? undefined : value));\r\n\r\n                        maxValue = typeof max === 'number' ? max : undefined;\r\n                        minValue = typeof min === 'number' ? min : undefined;\r\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\r\n                        schema[name] = array();\r\n                    } else {\r\n                        schema[name] = string();\r\n                    }\r\n\r\n                    if (maxValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).max(\r\n                            maxValue,\r\n                            translate('max', { label, name, max: maxValue + 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (minValue !== undefined) {\r\n                        schema[name] = (schema[name] as NumberSchema).min(\r\n                            minValue,\r\n                            translate('min', { label, name, min: minValue - 1 }),\r\n                        );\r\n                    }\r\n\r\n                    if (required) {\r\n                        const requiredErrorMessage = translate('required', { name, label });\r\n\r\n                        schema[name] =\r\n                            fieldType === DynamicFormFieldType.checkbox\r\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\r\n                                : (schema[name] as ArraySchema<string>).required(\r\n                                      requiredErrorMessage,\r\n                                  );\r\n                    }\r\n\r\n                    return schema;\r\n                }, {} as { [key: string]: Schema<any> }),\r\n        ).nullable(true),\r\n    }) as ObjectSchema<CustomFormFieldValues>;\r\n});\r\n","import { forIn, isDate, padStart } from 'lodash';\r\n\r\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\r\n    [id: string]: any;\r\n}): Array<{ fieldId: string; fieldValue: string }> {\r\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\r\n\r\n    forIn(customFieldsObject, (value, key) => {\r\n        let fieldValue: string;\r\n\r\n        if (isDate(value)) {\r\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\r\n            const padDay = padStart(value.getDate().toString(), 2, '0');\r\n\r\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\r\n        } else {\r\n            fieldValue = value;\r\n        }\r\n\r\n        customFields.push({\r\n            fieldId: key,\r\n            fieldValue,\r\n        });\r\n    });\r\n\r\n    return customFields;\r\n}\r\n","import React, { FunctionComponent, useEffect } from 'react';\r\n\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n    toResolvableComponent,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\r\n    checkoutService: { deinitializeCustomer, initializeCustomer },\r\n    containerId,\r\n    methodId,\r\n    onUnhandledError,\r\n}) => {\r\n    useEffect(() => {\r\n        initializeCustomer({\r\n            methodId,\r\n            [methodId]: {\r\n                container: containerId,\r\n                onUnhandledError,\r\n            },\r\n        }).catch(onUnhandledError);\r\n\r\n        return () => {\r\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\r\n        };\r\n    }, [containerId, deinitializeCustomer, initializeCustomer, methodId, onUnhandledError]);\r\n\r\n    return <div id={containerId} />;\r\n};\r\n\r\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\r\n    CheckoutButton,\r\n    [],\r\n);\r\n","import setPrototypeOf from '../setPrototypeOf';\r\n\r\nimport CustomError from './CustomError';\r\n\r\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\r\n    constructor(message: string) {\r\n        super({\r\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\r\n            message,\r\n        });\r\n\r\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\r\n    }\r\n}\r\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\r\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else if (hasProto(object)) {\r\n        // eslint-disable-next-line no-proto\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction hasProto(object: object): object is object & { __proto__: object } {\r\n    return '__proto__' in object;\r\n}\r\n","export default class CustomError extends Error {\r\n    static shouldReport: boolean;\r\n\r\n    data: any;\r\n    title: any;\r\n    type: string;\r\n\r\n    constructor({\r\n        data = {},\r\n        message = '',\r\n        title = '',\r\n        name = '',\r\n    }: {\r\n        data?: any;\r\n        message?: string;\r\n        title?: string;\r\n        name?: string;\r\n    }) {\r\n        super();\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, CustomError);\r\n        } else {\r\n            this.stack = new Error().stack;\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.data = data;\r\n        this.message = message;\r\n        this.name = name;\r\n        this.title = title;\r\n        this.type = 'custom';\r\n    }\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\r\nimport {\r\n    CheckoutButtonProps,\r\n    CheckoutButtonResolveId,\r\n    EmbeddedCheckoutUnsupportedError,\r\n    isEmbedded,\r\n    toResolvableComponent,\r\n} from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\r\n    const { language, onUnhandledError } = props;\r\n\r\n    if (isEmbedded()) {\r\n        onUnhandledError(\r\n            new EmbeddedCheckoutUnsupportedError(\r\n                language.translate('embedded_checkout.unsupported_error', {\r\n                    methods: 'googlepay',\r\n                }),\r\n            ),\r\n        );\r\n\r\n        return null;\r\n    }\r\n\r\n    return <CheckoutButton {...props} />;\r\n};\r\n\r\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\r\n    GooglePayButton,\r\n    [\r\n        { id: 'googlepayadyenv2' },\r\n        { id: 'googlepayadyenv3' },\r\n        { id: 'googlepayauthorizenet' },\r\n        { id: 'googlepaybnz' },\r\n        { id: 'googlepaybraintree' },\r\n        { id: 'googlepaycheckoutcom' },\r\n        { id: 'googlepaycybersourcev2' },\r\n        { id: 'googlepayorbital' },\r\n        { id: 'googlepaystripe' },\r\n        { id: 'googlepaystripeupe' },\r\n        { id: 'googlepayworldpayaccess' },\r\n    ],\r\n);\r\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\r\n    const basePath = `/${pathname.split('/')[1]}`;\r\n\r\n    return basePath === '/embedded-checkout';\r\n}\r\n","import {\r\n    CheckoutPayment,\r\n    GiftCertificateOrderPayment,\r\n    OrderPayment,\r\n} from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isGiftCertificatePayment(\r\n    payment: OrderPayment | CheckoutPayment,\r\n): payment is GiftCertificateOrderPayment {\r\n    return payment.providerId === 'giftcertificate';\r\n}\r\n","// `document.currentScript` can only be called at the global level as it only\r\n// holds a reference to the script when it is initially processed.\r\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\r\n\r\nexport default function getCurrentScriptPath(): string | undefined {\r\n    return path;\r\n}\r\n","import getCurrentScriptPath from './getCurrentScriptPath';\r\n\r\nexport default function configurePublicPath(publicPath?: string): string {\r\n    if (!publicPath) {\r\n        const scriptPath = getCurrentScriptPath();\r\n\r\n        if (!scriptPath) {\r\n            throw new Error(\r\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\r\n            );\r\n        }\r\n\r\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\r\n\r\n        return __webpack_public_path__;\r\n    }\r\n\r\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\r\n\r\n    return __webpack_public_path__;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { CheckoutAppProps } from './CheckoutApp';\r\n\r\nexport type RenderCheckoutOptions = CheckoutAppProps;\r\nexport type RenderCheckout = typeof renderCheckout;\r\n\r\nexport default function renderCheckout({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderCheckoutOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: CheckoutApp } = require('./CheckoutApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { configurePublicPath } from '../common/bundler';\r\n\r\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\r\n\r\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\r\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\r\n\r\nexport default function renderOrderConfirmation({\r\n    containerId,\r\n    publicPath,\r\n    ...props\r\n}: RenderOrderConfirmationOptions): void {\r\n    const configuredPublicPath = configurePublicPath(publicPath);\r\n\r\n    // We want to use `require` here because we want to set up the public path\r\n    // first before importing the app component and its dependencies.\r\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\r\n\r\n    // We want to use `require` here because we only want to import the package\r\n    // in development mode.\r\n    if (process.env.NODE_ENV === 'development') {\r\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n\r\n        whyDidYouRender(React, {\r\n            collapseGroups: true,\r\n        });\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <OrderConfirmationApp\r\n            containerId={containerId}\r\n            publicPath={configuredPublicPath}\r\n            {...props}\r\n        />,\r\n        document.getElementById(containerId),\r\n    );\r\n}\r\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\r\n\r\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\r\n\r\nexport interface CustomerCreateRequestBody {\r\n    confirmPassword: string;\r\n    newsletter: boolean;\r\n    orderId: number;\r\n    password: string;\r\n}\r\n\r\nexport default class AccountService {\r\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\r\n\r\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\r\n        return this.requestSender\r\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\r\n            .then((response) => response.body.data.customer);\r\n    }\r\n}\r\n","import { FieldProps } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { FormField, TextInput } from '../ui/form';\r\n\r\nexport interface PasswordField {\r\n    minLength: number;\r\n}\r\n\r\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\r\n    const renderPasswordInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const renderPasswordConfirmationInput = useCallback(\r\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\r\n        [],\r\n    );\r\n\r\n    const passwordLabelContent = useMemo(\r\n        () => (\r\n            <>\r\n                <TranslatedString id=\"customer.password_label\" />{' '}\r\n                <small>\r\n                    {`${minLength}-`}\r\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\r\n                </small>\r\n            </>\r\n        ),\r\n        [minLength],\r\n    );\r\n\r\n    const passwordConfirmationLabelContent = useMemo(\r\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <FormField\r\n                input={renderPasswordInput}\r\n                labelContent={passwordLabelContent}\r\n                name=\"password\"\r\n            />\r\n\r\n            <FormField\r\n                input={renderPasswordConfirmationInput}\r\n                labelContent={passwordConfirmationLabelContent}\r\n                name=\"confirmPassword\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(SignUpPasswordField);\r\n","import { FormikProps, withFormik } from 'formik';\r\nimport React, { FunctionComponent, memo } from 'react';\r\nimport { object, ref, string } from 'yup';\r\n\r\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { PasswordRequirements } from '../customer';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { Fieldset, Form, Legend } from '../ui/form';\r\n\r\nimport SignUpPasswordField from './SignUpPasswordField';\r\n\r\nexport interface SignUpFormProps {\r\n    isSigningUp?: boolean;\r\n    customerCanBeCreated: boolean;\r\n    passwordRequirements: PasswordRequirements;\r\n    onSignUp(data: SignUpFormValues): void;\r\n}\r\n\r\nexport interface SignUpFormValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\nconst GuestSignUpForm: FunctionComponent<\r\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\r\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\r\n    <Fieldset\r\n        legend={\r\n            <Legend>\r\n                <TranslatedString\r\n                    id={\r\n                        customerCanBeCreated\r\n                            ? 'customer.create_account_text'\r\n                            : 'customer.set_password_text'\r\n                    }\r\n                />\r\n            </Legend>\r\n        }\r\n    >\r\n        {!customerCanBeCreated && (\r\n            <p>\r\n                <TranslatedString id=\"customer.account_created_text\" />\r\n            </p>\r\n        )}\r\n\r\n        <Form className=\"guest-signup form\">\r\n            <SignUpPasswordField minLength={minLength} />\r\n\r\n            <div className=\"form-actions\">\r\n                <Button\r\n                    id=\"createAccountButton\"\r\n                    isLoading={isSigningUp}\r\n                    type=\"submit\"\r\n                    variant={ButtonVariant.Primary}\r\n                >\r\n                    <TranslatedString\r\n                        id={\r\n                            customerCanBeCreated\r\n                                ? 'customer.create_account_action'\r\n                                : 'customer.set_password_action'\r\n                        }\r\n                    />\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    </Fieldset>\r\n);\r\n\r\nexport default withLanguage(\r\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\r\n        mapPropsToValues: () => ({\r\n            password: '',\r\n            confirmPassword: '',\r\n        }),\r\n        handleSubmit: (values, { props: { onSignUp } }) => {\r\n            onSignUp(values);\r\n        },\r\n        validationSchema: ({\r\n            language,\r\n            passwordRequirements: { description, numeric, alpha, minLength },\r\n        }: SignUpFormProps & WithLanguageProps) =>\r\n            object({\r\n                password: string()\r\n                    .required(description || language.translate('customer.password_required_error'))\r\n                    .matches(\r\n                        numeric,\r\n                        description ||\r\n                            language.translate('customer.password_number_required_error'),\r\n                    )\r\n                    .matches(\r\n                        alpha,\r\n                        description ||\r\n                            language.translate('customer.password_letter_required_error'),\r\n                    )\r\n                    .min(\r\n                        minLength,\r\n                        description ||\r\n                            language.translate('customer.password_under_minimum_length_error'),\r\n                    )\r\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\r\n                confirmPassword: string()\r\n                    .required(language.translate('customer.password_confirmation_required_error'))\r\n                    .oneOf(\r\n                        [ref('password')],\r\n                        language.translate('customer.password_confirmation_error'),\r\n                    ),\r\n            }),\r\n    })(memo(GuestSignUpForm)),\r\n);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.set_password_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default PasswordSavedSuccessAlert;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { Alert, AlertType } from '../ui/alert';\r\n\r\nconst SignedUpSuccessAlert: FunctionComponent = () => (\r\n    <Alert type={AlertType.Success}>\r\n        <strong>\r\n            <TranslatedString id=\"customer.create_account_success\" />\r\n        </strong>\r\n    </Alert>\r\n);\r\n\r\nexport default SignedUpSuccessAlert;\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class AccountCreationRequirementsError extends CustomError {\r\n    constructor(data: Error, requirements: string) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\r\n            message: requirements,\r\n            title: getLanguageService().translate(\r\n                'customer.create_account_requirements_error_heading',\r\n            ),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\r\n    }\r\n}\r\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\r\n\r\nimport { CustomError, setPrototypeOf } from '../../common/error';\r\n\r\nexport default class AccountCreationFailedError extends CustomError {\r\n    constructor(data: Error) {\r\n        super({\r\n            name: 'ACCOUNT_CREATION_FAILED',\r\n            message: getLanguageService().translate('customer.create_account_error'),\r\n            data,\r\n        });\r\n\r\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\r\n    }\r\n}\r\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isGiftCertificatePayment } from '../giftCertificate';\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport interface PaymentInstructionsProps {\r\n    order: Order;\r\n}\r\n\r\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\r\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\r\n}\r\n\r\nfunction getPaymentInstructions(order: Order): string {\r\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\r\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\r\n\r\n    return instructions || '';\r\n}\r\n\r\nexport default getPaymentInstructions;\r\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\r\n\r\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\r\n\r\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\r\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\r\n        code: detail.code,\r\n        remaining: detail.remaining,\r\n        used: amount,\r\n        balance: amount + detail.remaining,\r\n        purchaseDate: '',\r\n    }));\r\n}\r\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { isStoreCreditPayment } from '../payment/storeCredit';\r\n\r\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\r\n    return (payments || [])\r\n        .filter(isStoreCreditPayment)\r\n        .reduce((total, payment) => total + payment.amount, 0);\r\n}\r\n","import { Order } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { mapFromPayments } from '../giftCertificate';\r\n\r\nimport getStoreCreditAmount from './getStoreCreditAmount';\r\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    baseAmount,\r\n    discountAmount,\r\n    isTaxIncluded,\r\n    shippingCostBeforeDiscount,\r\n    payments,\r\n    handlingCostTotal,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n}: Order): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: baseAmount,\r\n        shippingAmount: shippingCostBeforeDiscount,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        discountAmount,\r\n        storeCreditAmount: getStoreCreditAmount(payments),\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        giftCertificates: payments && mapFromPayments(payments),\r\n        taxes,\r\n        isTaxIncluded,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\r\n    <section className=\"orderConfirmation-section\">{children}</section>\r\n);\r\n\r\nexport default OrderConfirmationSection;\r\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\n\r\nexport interface OrderStatusProps {\r\n    supportEmail: string;\r\n    supportPhoneNumber?: string;\r\n    order: Order;\r\n}\r\n\r\ntype PaymentWithMandate = GatewayOrderPayment &\r\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\r\n\r\nconst isPaymentWithMandate = (\r\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\r\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\r\n\r\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\r\n    order,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\r\n\r\n    return (\r\n        <OrderConfirmationSection>\r\n            {order.orderId && (\r\n                <p data-test=\"order-confirmation-order-number-text\">\r\n                    <TranslatedHtml\r\n                        data={{ orderNumber: order.orderId }}\r\n                        id=\"order_confirmation.order_number_text\"\r\n                    />\r\n                </p>\r\n            )}\r\n\r\n            <p data-test=\"order-confirmation-order-status-text\">\r\n                <OrderStatusMessage\r\n                    orderNumber={order.orderId}\r\n                    orderStatus={order.status}\r\n                    supportEmail={supportEmail}\r\n                    supportPhoneNumber={supportPhoneNumber}\r\n                />\r\n            </p>\r\n            {paymentsWithMandates.map((payment) => {\r\n                if (payment.mandate.url) {\r\n                    return (\r\n                        <a\r\n                            data-test=\"order-confirmation-mandate-link-text\"\r\n                            href={payment.mandate.url}\r\n                            key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <TranslatedString\r\n                                id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                            />\r\n                        </a>\r\n                    );\r\n                } else if (payment.mandate.id) {\r\n                    return (\r\n                        <p\r\n                            data-test=\"order-confirmation-mandate-id-text\"\r\n                            key={`${payment.providerId}-${payment.methodId}-mandate`}\r\n                        >\r\n                            <TranslatedString\r\n                                data={{ mandate: payment.mandate.id }}\r\n                                id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\r\n                            />\r\n                        </p>\r\n                    );\r\n                }\r\n            })}\r\n\r\n            {order.hasDigitalItems && (\r\n                <p data-test=\"order-confirmation-digital-items-text\">\r\n                    <TranslatedHtml\r\n                        id={\r\n                            order.isDownloadable\r\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\r\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\r\n                        }\r\n                    />\r\n                </p>\r\n            )}\r\n        </OrderConfirmationSection>\r\n    );\r\n};\r\n\r\ninterface OrderStatusMessageProps {\r\n    orderNumber: number;\r\n    orderStatus: string;\r\n    supportEmail?: string;\r\n    supportPhoneNumber?: string;\r\n}\r\n\r\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\r\n    orderNumber,\r\n    orderStatus,\r\n    supportEmail,\r\n    supportPhoneNumber,\r\n}) => {\r\n    switch (orderStatus) {\r\n        case 'MANUAL_VERIFICATION_REQUIRED':\r\n        case 'AWAITING_PAYMENT':\r\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\r\n\r\n        case 'PENDING':\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_pending_status_text\"\r\n                />\r\n            );\r\n\r\n        case 'INCOMPLETE':\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail }}\r\n                    id=\"order_confirmation.order_incomplete_status_text\"\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <TranslatedHtml\r\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\r\n                    id={\r\n                        supportPhoneNumber\r\n                            ? 'order_confirmation.order_with_support_number_text'\r\n                            : 'order_confirmation.order_without_support_number_text'\r\n                    }\r\n                />\r\n            );\r\n    }\r\n};\r\n\r\nexport default memo(OrderStatus);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconPrint: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconPrint);\r\n","import { throttle } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { IconPrint } from '../ui/icon';\r\n\r\nexport interface PrintLinkProps {\r\n    className?: string;\r\n}\r\n\r\nconst PRINT_MODAL_THROTTLE = 500;\r\n\r\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\r\n    const handleClick = useCallback(\r\n        throttle(() => {\r\n            window.print();\r\n        }, PRINT_MODAL_THROTTLE),\r\n        [],\r\n    );\r\n\r\n    if (typeof window.print !== 'function') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <a\r\n            className={className || 'cart-header-link'}\r\n            href=\"#\"\r\n            id=\"cart-print-link\"\r\n            onClick={preventDefault(handleClick)}\r\n        >\r\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default memo(PrintLink);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface HeaderProps {\r\n    testId?: string;\r\n}\r\n\r\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\r\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\r\n        {children}\r\n    </h1>\r\n);\r\n\r\nexport default PrimaryHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { PrimaryHeader } from '../ui/header';\r\n\r\nexport interface HeaderProps {\r\n    name?: string;\r\n}\r\n\r\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\r\n    <PrimaryHeader testId=\"order-confirmation-heading\">\r\n        {name && (\r\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\r\n        )}\r\n\r\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\r\n    </PrimaryHeader>\r\n);\r\n\r\nexport default memo(ThankYouHeader);\r\n","import {\r\n    CheckoutSelectors,\r\n    EmbeddedCheckoutMessenger,\r\n    EmbeddedCheckoutMessengerOptions,\r\n    Order,\r\n    ShopperConfig,\r\n    StoreConfig,\r\n} from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport DOMPurify from 'dompurify';\r\nimport React, { Component, lazy, ReactNode } from 'react';\r\n\r\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { withAnalytics } from '../analytics';\r\nimport { withCheckout } from '../checkout';\r\nimport { ErrorLogger, ErrorModal } from '../common/error';\r\nimport { retry } from '../common/utility';\r\nimport { getPasswordRequirementsFromConfig } from '../customer';\r\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\r\nimport {\r\n    CreatedCustomer,\r\n    GuestSignUpForm,\r\n    PasswordSavedSuccessAlert,\r\n    SignedUpSuccessAlert,\r\n    SignUpFormValues,\r\n} from '../guestSignup';\r\nimport {\r\n    AccountCreationFailedError,\r\n    AccountCreationRequirementsError,\r\n} from '../guestSignup/errors';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { LazyContainer, LoadingSpinner } from '../ui/loading';\r\nimport { MobileView } from '../ui/responsive';\r\n\r\nimport getPaymentInstructions from './getPaymentInstructions';\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport OrderConfirmationSection from './OrderConfirmationSection';\r\nimport OrderStatus from './OrderStatus';\r\nimport PrintLink from './PrintLink';\r\nimport ThankYouHeader from './ThankYouHeader';\r\n\r\nconst OrderSummary = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary\" */\r\n                './OrderSummary'\r\n            ),\r\n    ),\r\n);\r\n\r\nconst OrderSummaryDrawer = lazy(() =>\r\n    retry(\r\n        () =>\r\n            import(\r\n                /* webpackChunkName: \"order-summary-drawer\" */\r\n                './OrderSummaryDrawer'\r\n            ),\r\n    ),\r\n);\r\n\r\nexport interface OrderConfirmationState {\r\n    error?: Error;\r\n    hasSignedUp?: boolean;\r\n    isSigningUp?: boolean;\r\n}\r\n\r\nexport interface OrderConfirmationProps {\r\n    containerId: string;\r\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\r\n    errorLogger: ErrorLogger;\r\n    orderId: number;\r\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\r\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\r\n}\r\n\r\ninterface WithCheckoutOrderConfirmationProps {\r\n    order?: Order;\r\n    config?: StoreConfig;\r\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\r\n    isLoadingOrder(): boolean;\r\n}\r\n\r\nclass OrderConfirmation extends Component<\r\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\r\n    OrderConfirmationState\r\n> {\r\n    state: OrderConfirmationState = {};\r\n\r\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\r\n\r\n    componentDidMount(): void {\r\n        const {\r\n            containerId,\r\n            createEmbeddedMessenger,\r\n            embeddedStylesheet,\r\n            loadOrder,\r\n            orderId,\r\n            analyticsTracker\r\n        } = this.props;\r\n\r\n        loadOrder(orderId)\r\n            .then(({ data }) => {\r\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\r\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\r\n\r\n                this.embeddedMessenger = messenger;\r\n\r\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\r\n                messenger.postFrameLoaded({ contentId: containerId });\r\n\r\n                analyticsTracker.orderPurchased();\r\n            })\r\n            .catch(this.handleUnhandledError);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { order, config, isLoadingOrder } = this.props;\r\n\r\n        if (!order || !config || isLoadingOrder()) {\r\n            return <LoadingSpinner isLoading={true} />;\r\n        }\r\n\r\n        const paymentInstructions = getPaymentInstructions(order);\r\n        const {\r\n            storeProfile: { orderEmail, storePhoneNumber },\r\n            shopperConfig,\r\n            links: { siteLink },\r\n        } = config;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('layout optimizedCheckout-contentPrimary', {\r\n                    'is-embedded': isEmbedded(),\r\n                })}\r\n            >\r\n                <div className=\"layout-main\">\r\n                    <div className=\"orderConfirmation\">\r\n                        <ThankYouHeader name={order.billingAddress.firstName} />\r\n\r\n                        <OrderStatus\r\n                            order={order}\r\n                            supportEmail={orderEmail}\r\n                            supportPhoneNumber={storePhoneNumber}\r\n                        />\r\n\r\n                        {paymentInstructions && (\r\n                            <OrderConfirmationSection>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: DOMPurify.sanitize(paymentInstructions),\r\n                                    }}\r\n                                    data-test=\"payment-instructions\"\r\n                                />\r\n                            </OrderConfirmationSection>\r\n                        )}\r\n\r\n                        {this.renderGuestSignUp({\r\n                            shouldShowPasswordForm: order.customerCanBeCreated,\r\n                            customerCanBeCreated: !order.customerId,\r\n                            shopperConfig,\r\n                        })}\r\n\r\n                        <div className=\"continueButtonContainer\">\r\n                            <form action={siteLink} method=\"get\" target=\"_top\">\r\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\r\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {this.renderOrderSummary()}\r\n                {this.renderErrorModal()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderGuestSignUp({\r\n        customerCanBeCreated,\r\n        shouldShowPasswordForm,\r\n        shopperConfig,\r\n    }: {\r\n        customerCanBeCreated: boolean;\r\n        shouldShowPasswordForm: boolean;\r\n        shopperConfig: ShopperConfig;\r\n    }): ReactNode {\r\n        const { isSigningUp, hasSignedUp } = this.state;\r\n\r\n        const { order } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {shouldShowPasswordForm && !hasSignedUp && (\r\n                    <GuestSignUpForm\r\n                        customerCanBeCreated={customerCanBeCreated}\r\n                        isSigningUp={isSigningUp}\r\n                        onSignUp={this.handleSignUp}\r\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\r\n                    />\r\n                )}\r\n\r\n                {hasSignedUp &&\r\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderOrderSummary(): ReactNode {\r\n        const { order, config } = this.props;\r\n\r\n        if (!order || !config) {\r\n            return null;\r\n        }\r\n\r\n        const { currency, shopperCurrency } = config;\r\n\r\n        return (\r\n            <MobileView>\r\n                {(matched) => {\r\n                    if (matched) {\r\n                        return (\r\n                            <LazyContainer>\r\n                                <OrderSummaryDrawer\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    headerLink={\r\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\r\n                                    }\r\n                                    isUpdatedCartSummayModal={false}\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <aside className=\"layout-cart\">\r\n                            <LazyContainer>\r\n                                <OrderSummary\r\n                                    headerLink={<PrintLink />}\r\n                                    {...mapToOrderSummarySubtotalsProps(order)}\r\n                                    lineItems={order.lineItems}\r\n                                    shopperCurrency={shopperCurrency}\r\n                                    storeCurrency={currency}\r\n                                    total={order.orderAmount}\r\n                                />\r\n                            </LazyContainer>\r\n                        </aside>\r\n                    );\r\n                }}\r\n            </MobileView>\r\n        );\r\n    }\r\n\r\n    private renderErrorModal(): ReactNode {\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <ErrorModal\r\n                error={error}\r\n                onClose={this.handleErrorModalClose}\r\n                shouldShowErrorCode={false}\r\n            />\r\n        );\r\n    }\r\n\r\n    private handleErrorModalClose: () => void = () => {\r\n        this.setState({ error: undefined });\r\n    };\r\n\r\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\r\n        const { createAccount, config } = this.props;\r\n\r\n        const shopperConfig = config && config.shopperConfig;\r\n        const passwordRequirements =\r\n            (shopperConfig &&\r\n                shopperConfig.passwordRequirements &&\r\n                shopperConfig.passwordRequirements.error) ||\r\n            '';\r\n\r\n        this.setState({\r\n            isSigningUp: true,\r\n        });\r\n\r\n        createAccount({\r\n            password,\r\n            confirmPassword,\r\n        })\r\n            .then(() => {\r\n                this.setState({\r\n                    hasSignedUp: true,\r\n                    isSigningUp: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    error:\r\n                        error.status < 500\r\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\r\n                            : new AccountCreationFailedError(error),\r\n                    hasSignedUp: false,\r\n                    isSigningUp: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    private handleUnhandledError: (error: Error) => void = (error) => {\r\n        const { errorLogger } = this.props;\r\n\r\n        this.setState({ error });\r\n        errorLogger.log(error);\r\n\r\n        if (this.embeddedMessenger) {\r\n            this.embeddedMessenger.postError(error);\r\n        }\r\n    };\r\n}\r\n\r\nexport function mapToOrderConfirmationProps(\r\n    context: CheckoutContextProps,\r\n): WithCheckoutOrderConfirmationProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getOrder, getConfig },\r\n            statuses: { isLoadingOrder },\r\n        },\r\n        checkoutService,\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n    const order = getOrder();\r\n\r\n    return {\r\n        config,\r\n        isLoadingOrder,\r\n        loadOrder: checkoutService.loadOrder,\r\n        order,\r\n    };\r\n}\r\n\r\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\r\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\r\nimport { BrowserOptions } from '@sentry/browser';\r\nimport React, { Component, ReactNode } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\r\nimport '../../scss/App.scss';\r\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\r\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\r\n\r\nimport { createErrorLogger, ErrorBoundary, ErrorLogger } from '../common/error';\r\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\r\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\r\n\r\nimport OrderConfirmation from './OrderConfirmation';\r\n\r\nexport interface OrderConfirmationAppProps {\r\n    containerId: string;\r\n    orderId: number;\r\n    publicPath?: string;\r\n    sentryConfig?: BrowserOptions;\r\n}\r\n\r\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\r\n    private accountService = new AccountService();\r\n    private checkoutService = createCheckoutService({\r\n        locale: getLanguageService().getLocale(),\r\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\r\n    });\r\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\r\n    private errorLogger: ErrorLogger;\r\n\r\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\r\n        super(props);\r\n\r\n        this.errorLogger = createErrorLogger(\r\n            { sentry: props.sentryConfig },\r\n            {\r\n                errorTypes: ['UnrecoverableError'],\r\n                publicPath: props.publicPath,\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { containerId } = this.props;\r\n\r\n        ReactModal.setAppElement(`#${containerId}`);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <ErrorBoundary logger={this.errorLogger}>\r\n                <LocaleProvider checkoutService={this.checkoutService}>\r\n                    <CheckoutProvider checkoutService={this.checkoutService}>\r\n                        <AnalyticsProvider checkoutService={ this.checkoutService }>\r\n                            <OrderConfirmation\r\n                                {...this.props}\r\n                                createAccount={this.createAccount}\r\n                                createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\r\n                                embeddedStylesheet={this.embeddedStylesheet}\r\n                                errorLogger={this.errorLogger}\r\n                            />\r\n                        </AnalyticsProvider>\r\n                    </CheckoutProvider>\r\n                </LocaleProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        const { orderId } = this.props;\r\n\r\n        return this.accountService.create({\r\n            orderId,\r\n            newsletter: false,\r\n            password,\r\n            confirmPassword,\r\n        });\r\n    };\r\n}\r\n\r\nexport default OrderConfirmationApp;\r\n","enum PaymentMethodId {\r\n    Adyen = 'adyen',\r\n    AdyenV2 = 'adyenv2',\r\n    AdyenV2GooglePay = 'googlepayadyenv2',\r\n    AdyenV3GooglePay = 'googlepayadyenv3',\r\n    AdyenV3 = 'adyenv3',\r\n    Affirm = 'affirm',\r\n    Afterpay = 'afterpay',\r\n    AmazonPay = 'amazonpay',\r\n    ApplePay = 'applepay',\r\n    Barclaycard = 'barclaycard',\r\n    BlueSnapV2 = 'bluesnapv2',\r\n    Boleto = 'boleto',\r\n    Bolt = 'bolt',\r\n    Braintree = 'braintree',\r\n    BraintreeAch = 'braintreeach',\r\n    BraintreeVenmo = 'braintreevenmo',\r\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\r\n    BNZGooglePay = 'googlepaybnz',\r\n    BraintreeGooglePay = 'googlepaybraintree',\r\n    BraintreeVisaCheckout = 'braintreevisacheckout',\r\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\r\n    BraintreePaypalCredit = 'braintreepaypalcredit',\r\n    CBAMPGS = 'cba_mpgs',\r\n    CCAvenueMars = 'ccavenuemars',\r\n    ChasePay = 'chasepay',\r\n    Checkoutcom = 'checkoutcom',\r\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\r\n    Clearpay = 'clearpay',\r\n    Converge = 'converge',\r\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\r\n    DigitalRiver = 'digitalriver',\r\n    Fawry = 'fawry',\r\n    Humm = 'humm',\r\n    Ideal = 'ideal',\r\n    Klarna = 'klarna',\r\n    Laybuy = 'laybuy',\r\n    Masterpass = 'masterpass',\r\n    Mollie = 'mollie',\r\n    Moneris = 'moneris',\r\n    Opy = 'opy',\r\n    OrbitalGooglePay = 'googlepayorbital',\r\n    Oxxo = 'oxxo',\r\n    PaypalExpress = 'paypalexpress',\r\n    PaypalPaymentsPro = 'paypal',\r\n    PaypalCommerce = 'paypalcommerce',\r\n    PaypalCommerceCredit = 'paypalcommercecredit',\r\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\r\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\r\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\r\n    Qpay = 'qpay',\r\n    Quadpay = 'quadpay',\r\n    SagePay = 'sagepay',\r\n    Sepa = 'sepa',\r\n    Sezzle = 'sezzle',\r\n    SquareV2 = 'squarev2',\r\n    StripeGooglePay = 'googlepaystripe',\r\n    StripeUPEGooglePay = 'googlepaystripeupe',\r\n    StripeV3 = 'stripev3',\r\n    StripeUPE = 'stripeupe',\r\n    WorldpayAccess = 'worldpayaccess',\r\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\r\n    Zip = 'zip',\r\n}\r\n\r\nexport default PaymentMethodId;\r\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\r\n    return payment.providerId === 'storecredit';\r\n}\r\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport findLineItems from './findLineItems';\r\nimport getLineItemsCount from './getLineItemsCount';\r\n\r\nexport interface StaticConsignmentItemListProps {\r\n    consignment: Consignment;\r\n    cart: Cart;\r\n}\r\n\r\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\r\n    cart,\r\n    consignment,\r\n}) => {\r\n    const lineItems = findLineItems(cart, consignment);\r\n\r\n    return (\r\n        <div className=\"staticConsignment-items\">\r\n            <strong>\r\n                <TranslatedString\r\n                    data={{ count: getLineItemsCount(lineItems) }}\r\n                    id=\"cart.item_count_text\"\r\n                />\r\n            </strong>\r\n\r\n            <ul>\r\n                {lineItems.map((item) => (\r\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(StaticConsignmentItemList);\r\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\r\nimport { compact, find, isNil, map } from 'lodash';\r\n\r\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\r\n    return compact(\r\n        map(consignment.lineItemIds, (itemId) =>\r\n            find(\r\n                cart.lineItems.physicalItems,\r\n                (item) => item.id === itemId && isNil(item.parentId),\r\n            ),\r\n        ),\r\n    );\r\n}\r\n","import { LineItem } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\r\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\r\n}\r\n","import { Consignment } from '@bigcommerce/checkout-sdk';\r\nimport { every } from 'lodash';\r\n\r\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\r\n    if (!consignments.length) {\r\n        return false;\r\n    }\r\n\r\n    return every(\r\n        consignments,\r\n        (consignment) =>\r\n            consignment.selectedShippingOption &&\r\n            consignment.selectedShippingOption.id &&\r\n            // Selected option is available\r\n            consignment.availableShippingOptions &&\r\n            consignment.availableShippingOptions.filter(\r\n                ({ id }) => id === consignment.selectedShippingOption?.id,\r\n            ).length,\r\n    );\r\n}\r\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\r\nimport { reduce } from 'lodash';\r\n\r\nexport default function hasUnassignedLineItems(\r\n    consignments: Consignment[],\r\n    lineItems: LineItemMap,\r\n): boolean {\r\n    const totalAssigned = reduce(\r\n        consignments,\r\n        (total, consignment) => total + consignment.lineItemIds.length,\r\n        0,\r\n    );\r\n\r\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\r\n}\r\n","import React, { memo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { preventDefault } from '../../common/dom';\r\nimport { Toggle } from '../../ui/toggle';\r\n\r\ninterface ShippingOptionAdditionalDescriptionProps {\r\n    description: string;\r\n}\r\n\r\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\r\n    ShippingOptionAdditionalDescriptionProps\r\n> = ({ description }) => {\r\n    const CHRACTER_LIMIT = 45;\r\n\r\n    return (\r\n        <div className=\"shippingOption-additionalDescription--container\">\r\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\r\n                {({ isOpen, toggle }) => (\r\n                    <>\r\n                        <span\r\n                            className={`shippingOption-additionalDescription ${\r\n                                isOpen\r\n                                    ? 'shippingOption-additionalDescription--expanded'\r\n                                    : 'shippingOption-additionalDescription--collapsed'\r\n                            }`}\r\n                        >\r\n                            {description}\r\n                        </span>\r\n                        {!isOpen && (\r\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\r\n                                <TranslatedString id=\"common.show_more\" />\r\n                            </a>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Toggle>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ShippingOptionAdditionalDescription);\r\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\r\nimport React from 'react';\r\n\r\nimport { ShopperCurrency } from '../../currency';\r\n\r\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\r\nimport './StaticShippingOption.scss';\r\n\r\ninterface StaticShippingOptionProps {\r\n    displayAdditionalInformation?: boolean;\r\n    method: ShippingOption;\r\n}\r\n\r\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\r\n    displayAdditionalInformation = true,\r\n    method,\r\n}) => {\r\n    return (\r\n        <div className=\"shippingOption shippingOption--alt\">\r\n            {method.imageUrl && (\r\n                <span className=\"shippingOption-figure\">\r\n                    <img\r\n                        alt={method.description}\r\n                        className=\"shippingOption-img\"\r\n                        src={method.imageUrl}\r\n                    />\r\n                </span>\r\n            )}\r\n            <span className=\"shippingOption-desc\">\r\n                {method.description}\r\n                {method.transitTime && (\r\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\r\n                )}\r\n                {method.additionalDescription && displayAdditionalInformation && (\r\n                    <ShippingOptionAdditionalDescription\r\n                        description={method.additionalDescription}\r\n                    />\r\n                )}\r\n            </span>\r\n            <span className=\"shippingOption-price\">\r\n                <ShopperCurrency amount={method.cost} />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StaticShippingOption;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconSuccess: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconSuccess);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconInfo: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconInfo);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nimport { IconError, IconInfo, IconSuccess } from '../icon';\r\n\r\nexport interface AlertProps {\r\n    additionalClassName?: string;\r\n    icon?: ReactNode;\r\n    testId?: string;\r\n    type?: AlertType;\r\n}\r\n\r\nexport enum AlertType {\r\n    Error = 'error',\r\n    Info = 'info',\r\n    Success = 'success',\r\n    Warning = 'warning',\r\n}\r\n\r\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\r\n    switch (type) {\r\n        case AlertType.Error:\r\n        case AlertType.Warning:\r\n            return <IconError />;\r\n\r\n        case AlertType.Success:\r\n            return <IconSuccess />;\r\n\r\n        case AlertType.Info:\r\n        default:\r\n            return <IconInfo />;\r\n    }\r\n}\r\n\r\nconst Alert: FunctionComponent<AlertProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    icon,\r\n    testId,\r\n    type,\r\n}) => (\r\n    <div\r\n        className={classNames(\r\n            'alertBox',\r\n            additionalClassName,\r\n            { 'alertBox--info': type === AlertType.Info || !type },\r\n            { 'alertBox--error': type === AlertType.Error },\r\n            { 'alertBox--success': type === AlertType.Success },\r\n            { 'alertBox--warning': type === AlertType.Warning },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\r\n\r\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Alert;\r\n","import classNames from 'classnames';\r\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    isFullWidth?: boolean;\r\n    isLoading?: boolean;\r\n    size?: ButtonSize;\r\n    testId?: string;\r\n    variant?: ButtonVariant;\r\n}\r\n\r\nexport enum ButtonVariant {\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Action = 'action',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Tiny = 'tiny',\r\n    Large = 'large',\r\n}\r\n\r\nfunction getClassName(\r\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\r\n) {\r\n    const { className, isFullWidth, isLoading, size, variant } = props;\r\n\r\n    return classNames(\r\n        'button',\r\n        className,\r\n        { 'button--primary': variant === ButtonVariant.Primary },\r\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\r\n        { 'button--action': variant === ButtonVariant.Action },\r\n        { 'button--small': size === ButtonSize.Small },\r\n        { 'button--tiny': size === ButtonSize.Tiny },\r\n        { 'button--large': size === ButtonSize.Large },\r\n        { 'button--slab': isFullWidth },\r\n        {\r\n            'optimizedCheckout-buttonPrimary':\r\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\r\n        },\r\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\r\n        { 'is-loading': isLoading },\r\n    );\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = ({\r\n    children,\r\n    className,\r\n    disabled,\r\n    isFullWidth,\r\n    isLoading,\r\n    size,\r\n    testId,\r\n    type,\r\n    variant,\r\n    ...rest\r\n}) => (\r\n    <button\r\n        {...rest}\r\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\r\n        data-test={testId}\r\n        disabled={disabled || isLoading}\r\n        type={type || 'button'}\r\n    >\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\r\nimport { isDate, noop } from 'lodash';\r\nimport React, {\r\n    Component,\r\n    createElement,\r\n    FunctionComponent,\r\n    memo,\r\n    useCallback,\r\n    useMemo,\r\n} from 'react';\r\nimport shallowEqual from 'shallowequal';\r\n\r\nimport FormFieldContainer from './FormFieldContainer';\r\n\r\nexport interface BasicFormFieldProps extends FieldConfig {\r\n    additionalClassName?: string;\r\n    className?: string;\r\n    testId?: string;\r\n    onChange?(value: any): void;\r\n}\r\n\r\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\r\n    additionalClassName,\r\n    className,\r\n    component,\r\n    render,\r\n    testId,\r\n    onChange,\r\n    ...rest\r\n}) => {\r\n    const renderInnerField = useCallback(\r\n        (props: FieldProps) => (\r\n            <InnerField\r\n                {...props}\r\n                additionalClassName={additionalClassName}\r\n                className={className}\r\n                component={component}\r\n                onChange={onChange}\r\n                render={render}\r\n                testId={testId}\r\n            />\r\n        ),\r\n        [additionalClassName, className, component, render, testId, onChange],\r\n    );\r\n\r\n    return <Field {...rest} render={renderInnerField} />;\r\n};\r\n\r\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\r\n\r\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\r\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\r\n        const input = useMemo(\r\n            () => (\r\n                <InnerFieldInput\r\n                    component={component}\r\n                    field={field}\r\n                    form={form}\r\n                    onChange={onChange}\r\n                    render={render}\r\n                />\r\n            ),\r\n            [field, form, onChange, component, render],\r\n        );\r\n\r\n        return (\r\n            <FormFieldContainer\r\n                additionalClassName={additionalClassName}\r\n                hasError={getIn(form.errors, field.name)}\r\n                testId={testId}\r\n            >\r\n                {input}\r\n            </FormFieldContainer>\r\n        );\r\n    },\r\n    (\r\n        { form: prevForm, field: prevField, ...prevProps },\r\n        { form: nextForm, field: nextField, ...nextProps },\r\n    ) =>\r\n        shallowEqual(prevProps, nextProps) &&\r\n        shallowEqual(prevForm, nextForm) &&\r\n        shallowEqual(prevField, nextField),\r\n);\r\n\r\ntype InnerFieldInputProps = FieldProps &\r\n    Pick<FieldConfig, 'component' | 'render'> & {\r\n        onChange?(value: string): void;\r\n    };\r\n\r\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\r\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\r\n        const {\r\n            field: { value },\r\n            onChange = noop,\r\n        } = this.props;\r\n        const comparableValue = isDate(value) ? value.getTime() : value;\r\n        const comparablePrevValue = isDate(prevField.value)\r\n            ? prevField.value.getTime()\r\n            : prevField.value;\r\n\r\n        if (comparableValue !== comparablePrevValue) {\r\n            onChange(value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { component = 'input', field, render } = this.props;\r\n\r\n        if (render) {\r\n            return (render as any)(this.props);\r\n        }\r\n\r\n        if (typeof component === 'string') {\r\n            return createElement(component as any, field);\r\n        }\r\n\r\n        return createElement(component as any, this.props);\r\n    }\r\n}\r\n\r\nexport default memo(BasicFormField);\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, ReactNode, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\nimport Label from './Label';\r\n\r\nexport interface CheckboxInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    label: ReactNode;\r\n    value: string;\r\n    checked: boolean;\r\n}\r\n\r\nconst CheckboxInput = forwardRef(\r\n    (\r\n        { additionalClassName, label, id, ...rest }: CheckboxInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <>\r\n            <Input\r\n                {...rest}\r\n                className={classNames(\r\n                    'form-checkbox',\r\n                    'optimizedCheckout-form-checkbox',\r\n                    additionalClassName,\r\n                )}\r\n                id={id}\r\n                ref={ref}\r\n                type=\"checkbox\"\r\n            />\r\n            <Label htmlFor={id}>{label}</Label>\r\n        </>\r\n    ),\r\n);\r\n\r\nexport default CheckboxInput;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, ReactNode, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\nimport Label from './Label';\r\n\r\nexport interface RadioInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    label: ReactNode;\r\n    value: string;\r\n    checked: boolean;\r\n}\r\n\r\nconst RadioInput = forwardRef(\r\n    (\r\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <>\r\n            <Input\r\n                {...rest}\r\n                checked={checked}\r\n                className={classNames(\r\n                    'form-radio',\r\n                    'optimizedCheckout-form-radio',\r\n                    additionalClassName,\r\n                )}\r\n                id={id}\r\n                ref={ref}\r\n                type=\"radio\"\r\n                value={value}\r\n            />\r\n            <Label htmlFor={id}>{label}</Label>\r\n        </>\r\n    ),\r\n);\r\n\r\nexport default RadioInput;\r\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { isDate, noop } from 'lodash';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\nimport ReactDatePicker from 'react-datepicker';\r\n\r\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\r\n\r\nimport { IconChevronDown } from '../icon';\r\n\r\nimport CheckboxInput from './CheckboxInput';\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport { InputProps } from './Input';\r\nimport RadioInput from './RadioInput';\r\nimport TextArea from './TextArea';\r\nimport TextInput from './TextInput';\r\n\r\nexport interface DynamicInputProps extends InputProps {\r\n    id: string;\r\n    additionalClassName?: string;\r\n    value?: string | string[];\r\n    rows?: number;\r\n    fieldType?: DynamicFormFieldType;\r\n    options?: FormFieldItem[];\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\r\n    additionalClassName,\r\n    date,\r\n    fieldType,\r\n    id,\r\n    name,\r\n    onChange = noop,\r\n    options,\r\n    placeholder,\r\n    isFloatingLabelEnabled,\r\n    value,\r\n    ...rest\r\n}) => {\r\n    const { inputFormat } = date;\r\n    const handleDateChange = useCallback(\r\n        (dateValue, event) =>\r\n            onChange({\r\n                ...event,\r\n                target: {\r\n                    name,\r\n                    value: dateValue,\r\n                },\r\n            }),\r\n        [onChange, name],\r\n    );\r\n\r\n    switch (fieldType) {\r\n        case DynamicFormFieldType.dropdown:\r\n            return (\r\n                <>\r\n                    <div\r\n                        className={classNames(\r\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\r\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\r\n                        )}>\r\n                        <IconChevronDown />\r\n                    </div>\r\n                    <select\r\n                        {...(rest as any)}\r\n                        className={classNames(\r\n                            { 'floating-select': isFloatingLabelEnabled },\r\n                            'form-select optimizedCheckout-form-select',\r\n                        )}\r\n                        data-test={`${id}-select`}\r\n                        id={id}\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        value={value === null ? '' : value}\r\n                    >\r\n                        {placeholder && <option value=\"\">{placeholder}</option>}\r\n                        {options &&\r\n                            options.map(({ label, value: optionValue }) => (\r\n                                <option key={optionValue} value={optionValue}>\r\n                                    {label}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.radio:\r\n            if (!options || !options.length) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {options.map(({ label, value: optionValue }) => (\r\n                        <RadioInput\r\n                            {...rest}\r\n                            checked={optionValue === value}\r\n                            id={`${id}-${optionValue}`}\r\n                            key={optionValue}\r\n                            label={label}\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            testId={`${id}-${optionValue}-radio`}\r\n                            value={optionValue}\r\n                        />\r\n                    ))}\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.checkbox:\r\n            if (!options || !options.length) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {options.map(({ label, value: optionValue }) => (\r\n                        <CheckboxInput\r\n                            {...rest}\r\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\r\n                            id={`${id}-${optionValue}`}\r\n                            key={optionValue}\r\n                            label={label}\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            testId={`${id}-${optionValue}-checkbox`}\r\n                            value={optionValue}\r\n                        />\r\n                    ))}\r\n                </>\r\n            );\r\n\r\n        case DynamicFormFieldType.date:\r\n            return (\r\n                <ReactDatePicker\r\n                    {...(rest as any)}\r\n                    autoComplete=\"off\"\r\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\r\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\r\n                    // onChangeRaw={ rest.onChange }\r\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\r\n                    className={classNames('form-input optimizedCheckout-form-input', {\r\n                        'floating-input': isFloatingLabelEnabled,\r\n                    })}\r\n                    dateFormat={inputFormat}\r\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\r\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\r\n                    name={name}\r\n                    onChange={handleDateChange}\r\n                    placeholderText={inputFormat.toUpperCase()}\r\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\r\n                    selected={isDate(value) ? value : undefined}\r\n                />\r\n            );\r\n\r\n        case DynamicFormFieldType.multiline:\r\n            return (\r\n                <TextArea\r\n                    {...(rest as any)}\r\n                    id={id}\r\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    testId={`${id}-text`}\r\n                    type={fieldType}\r\n                    value={value}\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <TextInput\r\n                    {...rest}\r\n                    id={id}\r\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    name={name}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    testId={`${id}-${\r\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\r\n                    }`}\r\n                    type={fieldType}\r\n                    value={value}\r\n                />\r\n            );\r\n    }\r\n};\r\n\r\nexport default memo(withDate(DynamicInput));\r\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport './MultiCheckboxControl.scss';\r\n\r\nexport interface MultiCheckboxControlProps {\r\n    testId?: string;\r\n    onSelectedAll(): void;\r\n    onSelectedNone(): void;\r\n}\r\n\r\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\r\n    testId,\r\n    onSelectedAll,\r\n    onSelectedNone,\r\n}) => {\r\n    const handleSelectAllClick = useCallback(\r\n        (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            onSelectedAll();\r\n        },\r\n        [onSelectedAll],\r\n    );\r\n\r\n    const handleSelectNoneClick = useCallback(\r\n        (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            onSelectedNone();\r\n        },\r\n        [onSelectedNone],\r\n    );\r\n\r\n    return (\r\n        <ul className=\"multiCheckbox--controls\">\r\n            <li className=\"multiCheckbox--control\">\r\n                <TranslatedString id=\"address.select\" />\r\n            </li>\r\n\r\n            <li className=\"multiCheckbox--control\">\r\n                <a\r\n                    data-test={`${testId}Checkbox-all-button`}\r\n                    href=\"#\"\r\n                    onClick={handleSelectAllClick}\r\n                >\r\n                    <TranslatedString id=\"address.select_all\" />\r\n                </a>\r\n            </li>\r\n\r\n            <li className=\"multiCheckbox--control\">\r\n                <a\r\n                    data-test={`${testId}Checkbox-none-button`}\r\n                    href=\"#\"\r\n                    onClick={handleSelectNoneClick}\r\n                >\r\n                    <TranslatedString id=\"address.select_none\" />\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(MultiCheckboxControl);\r\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\r\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\r\nimport { difference, kebabCase, noop, pick } from 'lodash';\r\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport DynamicInput from './DynamicInput';\r\nimport FormFieldContainer from './FormFieldContainer';\r\nimport FormFieldError from './FormFieldError';\r\nimport MultiCheckboxControl from './MultiCheckboxControl';\r\n\r\nexport interface CheckboxGroupFormFieldProps {\r\n    id: string;\r\n    label: ReactNode;\r\n    name: string;\r\n    options: FormFieldItem[];\r\n    onChange?(values: string[]): void;\r\n}\r\n\r\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\r\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\r\n\r\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\r\n    form: { values, errors },\r\n    id,\r\n    label,\r\n    name,\r\n    onChange = noop,\r\n    options,\r\n    push,\r\n    remove,\r\n}) => {\r\n    const handleSelectAll = useCallback(() => {\r\n        const checkedValues: string[] = getIn(values, name) || [];\r\n\r\n        difference(\r\n            options.map(({ value }) => value),\r\n            checkedValues,\r\n        ).forEach((val) => push(val));\r\n\r\n        onChange(getIn(values, name));\r\n    }, [name, onChange, options, push, values]);\r\n\r\n    const handleSelectNone = useCallback(() => {\r\n        const checkedValues: string[] = getIn(values, name) || [];\r\n\r\n        checkedValues.forEach(() => remove(0));\r\n\r\n        onChange(getIn(values, name));\r\n    }, [name, onChange, remove, values]);\r\n\r\n    const handleInputChange = useCallback(\r\n        (event: ChangeEvent<HTMLInputElement>) => {\r\n            const checkedValues: string[] = getIn(values, name) || [];\r\n            const { value, checked } = event.target;\r\n\r\n            if (checked) {\r\n                push(value);\r\n            } else {\r\n                remove(checkedValues.indexOf(value));\r\n            }\r\n\r\n            onChange(getIn(values, name));\r\n        },\r\n        [name, onChange, push, remove, values],\r\n    );\r\n\r\n    return (\r\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\r\n            {label}\r\n\r\n            {options.length > 1 && (\r\n                <MultiCheckboxControl\r\n                    onSelectedAll={handleSelectAll}\r\n                    onSelectedNone={handleSelectNone}\r\n                    testId={id}\r\n                />\r\n            )}\r\n\r\n            <DynamicInput\r\n                fieldType={DynamicFormFieldType.checkbox}\r\n                id={id}\r\n                name={name}\r\n                onChange={handleInputChange}\r\n                options={options}\r\n                value={getIn(values, name) || []}\r\n            />\r\n\r\n            <FormFieldError\r\n                errorId={`${id ?? name}-field-error-message`}\r\n                name={name}\r\n                testId={`${kebabCase(name)}-field-error-message`}\r\n            />\r\n        </FormFieldContainer>\r\n    );\r\n};\r\n\r\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\r\n    id,\r\n    label,\r\n    name,\r\n    onChange,\r\n    options,\r\n}) => {\r\n    const renderField = useCallback(\r\n        (renderProps: FieldArrayRenderProps) => (\r\n            <MultiCheckboxFormField\r\n                id={id}\r\n                label={label}\r\n                name={name}\r\n                onChange={onChange}\r\n                options={options}\r\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\r\n            />\r\n        ),\r\n        [id, label, name, onChange, options],\r\n    );\r\n\r\n    return <FieldArray name={name} render={renderField} />;\r\n};\r\n\r\nexport default memo(CheckboxGroupFormField);\r\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\r\nimport classNames from 'classnames';\r\nimport { FieldProps } from 'formik';\r\nimport { includes } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\r\nimport DynamicFormFieldType from './DynamicFormFieldType';\r\nimport DynamicInput from './DynamicInput';\r\nimport FormField from './FormField';\r\nimport Label from './Label';\r\n\r\nexport interface DynamicFormFieldOption {\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\nexport interface DynamicFormFieldProps {\r\n    field: FormFieldType;\r\n    inputId?: string;\r\n    extraClass?: string;\r\n    autocomplete?: string;\r\n    parentFieldName?: string;\r\n    placeholder?: string;\r\n    label?: ReactNode;\r\n    isFloatingLabelEnabled?: boolean;\r\n    onChange?(value: string | string[]): void;\r\n}\r\n\r\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\r\n    field: {\r\n        fieldType,\r\n        type,\r\n        secret,\r\n        name,\r\n        label: fieldLabel,\r\n        required,\r\n        options,\r\n        max,\r\n        min,\r\n        maxLength,\r\n    },\r\n    parentFieldName,\r\n    onChange,\r\n    placeholder,\r\n    inputId,\r\n    autocomplete,\r\n    label,\r\n    extraClass,\r\n    isFloatingLabelEnabled,\r\n}) => {\r\n    const fieldInputId = inputId || name;\r\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\r\n    const isFloatingLabelSupportedFieldType = Boolean(\r\n        isFloatingLabelEnabled &&\r\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\r\n                !fieldType),\r\n    );\r\n    const labelComponent = useMemo(\r\n        () => (\r\n            <Label\r\n                htmlFor={fieldInputId}\r\n                id={`${fieldInputId}-label`}\r\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n            >\r\n                {label || fieldLabel}\r\n                {!required && (\r\n                    <>\r\n                        {' '}\r\n                        <small className=\"optimizedCheckout-contentSecondary\">\r\n                            <TranslatedString id=\"common.optional_text\" />\r\n                        </small>\r\n                    </>\r\n                )}\r\n            </Label>\r\n        ),\r\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\r\n    );\r\n\r\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\r\n        if (fieldType === 'text') {\r\n            if (type === 'integer') {\r\n                return DynamicFormFieldType.number;\r\n            }\r\n\r\n            if (includes(name, 'phone') || includes(name, 'tel')) {\r\n                return DynamicFormFieldType.telephone;\r\n            }\r\n\r\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\r\n        }\r\n\r\n        return fieldType as DynamicFormFieldType;\r\n    }, [fieldType, type, secret, name]);\r\n\r\n    const renderInput = useCallback(\r\n        ({ field }: FieldProps<string>) => (\r\n            <DynamicInput\r\n                {...field}\r\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\r\n                autoComplete={autocomplete}\r\n                fieldType={dynamicFormFieldType}\r\n                id={fieldInputId}\r\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n                max={max}\r\n                maxLength={maxLength || undefined}\r\n                min={min}\r\n                options={options && options.items}\r\n                placeholder={placeholder || (options && options.helperLabel)}\r\n                rows={options && (options as any).rows}\r\n            />\r\n        ),\r\n        [\r\n            fieldInputId,\r\n            max,\r\n            maxLength,\r\n            min,\r\n            options,\r\n            placeholder,\r\n            dynamicFormFieldType,\r\n            autocomplete,\r\n        ],\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'dynamic-form-field',\r\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\r\n                extraClass,\r\n            )}\r\n        >\r\n            {fieldType === DynamicFormFieldType.checkbox ? (\r\n                <CheckboxGroupFormField\r\n                    id={fieldInputId}\r\n                    label={labelComponent}\r\n                    name={fieldName}\r\n                    onChange={onChange}\r\n                    options={(options && options.items) || []}\r\n                />\r\n            ) : (\r\n                <FormField\r\n                    id={fieldInputId}\r\n                    input={renderInput}\r\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\r\n                    label={labelComponent}\r\n                    name={fieldName}\r\n                    onChange={onChange}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(DynamicFormField);\r\n","enum DynamicFormFieldType {\r\n    telephone = 'tel',\r\n    dropdown = 'dropdown',\r\n    number = 'number',\r\n    password = 'password',\r\n    checkbox = 'checkbox',\r\n    multiline = 'multiline',\r\n    date = 'date',\r\n    radio = 'radio',\r\n    text = 'text',\r\n}\r\n\r\nexport default DynamicFormFieldType;\r\n","import classNames from 'classnames';\r\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\r\n\r\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\r\n    additionalClassName?: string;\r\n    testId?: string;\r\n    legend?: ReactNode;\r\n}\r\n\r\nconst Fieldset = forwardRef(\r\n    (\r\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\r\n        ref: Ref<HTMLFieldSetElement>,\r\n    ) => (\r\n        <fieldset\r\n            {...rest}\r\n            className={className || classNames('form-fieldset', additionalClassName)}\r\n            data-test={testId}\r\n            ref={ref}\r\n        >\r\n            {legend}\r\n\r\n            <div className=\"form-body\">{children}</div>\r\n        </fieldset>\r\n    ),\r\n);\r\n\r\nexport default Fieldset;\r\n","import { memoizeOne } from '@bigcommerce/memoize';\r\nimport { Form as FormikForm, FormikFormProps } from 'formik';\r\nimport { values } from 'lodash';\r\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\r\n\r\nimport FormProvider, { FormContextType } from './FormProvider';\r\n\r\nexport interface FormProps extends FormikFormProps {\r\n    testId?: string;\r\n}\r\n\r\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\r\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\r\n\r\n    const focusOnError = () => {\r\n        const { current } = ref.current.containerRef;\r\n\r\n        if (!current) {\r\n            return;\r\n        }\r\n\r\n        const errorInputSelectors = [\r\n            '.form-field--error input',\r\n            '.form-field--error textarea',\r\n            '.form-field--error select',\r\n        ];\r\n\r\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\r\n\r\n        if (erroredFormField) {\r\n            erroredFormField.focus({ preventScroll: true });\r\n\r\n            try {\r\n                erroredFormField.offsetParent?.scrollIntoView({\r\n                    behavior: 'smooth',\r\n                    block: 'center',\r\n                    inline: 'center',\r\n                });\r\n            } catch {\r\n                erroredFormField.offsetParent?.scrollIntoView();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmitCapture = useCallback(\r\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\r\n            return () => {\r\n                setSubmitted(true);\r\n\r\n                // use timeout to allow Formik validation to happen\r\n                setTimeout(() => focusOnError());\r\n            };\r\n        }),\r\n        [focusOnError],\r\n    );\r\n\r\n    const renderContent = useCallback(\r\n        memoizeOne(({ setSubmitted }: FormContextType) => {\r\n            return (\r\n                <div ref={ref.current.containerRef}>\r\n                    <FormikForm\r\n                        {...rest}\r\n                        className={className}\r\n                        data-test={testId}\r\n                        noValidate\r\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\r\n                    />\r\n                </div>\r\n            );\r\n        }),\r\n        [className, handleSubmitCapture, testId, ...values(rest)],\r\n    );\r\n\r\n    return <FormProvider>{renderContent}</FormProvider>;\r\n};\r\n\r\nexport default memo(Form);\r\n","import { FieldProps } from 'formik';\r\nimport { kebabCase } from 'lodash';\r\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\r\n\r\nimport BasicFormField from './BasicFormField';\r\nimport FormFieldError from './FormFieldError';\r\nimport Label from './Label';\r\n\r\nexport interface FormFieldProps {\r\n    additionalClassName?: string;\r\n    name: string;\r\n    label?: ReactNode | ((fieldName: string) => ReactNode);\r\n    labelContent?: ReactNode;\r\n    footer?: ReactNode;\r\n    id?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n    input(field: FieldProps<string>): ReactNode;\r\n    onChange?(value: string): void;\r\n}\r\n\r\nconst FormField: FunctionComponent<FormFieldProps> = ({\r\n    additionalClassName,\r\n    labelContent,\r\n    label,\r\n    onChange,\r\n    footer,\r\n    input,\r\n    name,\r\n    id,\r\n    isFloatingLabelEnabled,\r\n}) => {\r\n    const renderField = useCallback(\r\n        (props) => (\r\n            <>\r\n                {isFloatingLabelEnabled && input(props)}\r\n\r\n                {label && (typeof label === 'function' ? label(name) : label)}\r\n                {labelContent && !label && (\r\n                    <Label\r\n                        htmlFor={name}\r\n                        id={`${id ?? name}-label`}\r\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n                    >\r\n                        {labelContent}\r\n                    </Label>\r\n                )}\r\n\r\n                {!isFloatingLabelEnabled && input(props)}\r\n\r\n                <FormFieldError\r\n                    errorId={`${id ?? name}-field-error-message`}\r\n                    name={name}\r\n                    testId={`${kebabCase(name)}-field-error-message`}\r\n                />\r\n\r\n                {footer}\r\n            </>\r\n        ),\r\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\r\n    );\r\n\r\n    return (\r\n        <BasicFormField\r\n            additionalClassName={additionalClassName}\r\n            name={name}\r\n            onChange={onChange}\r\n            render={renderField}\r\n        />\r\n    );\r\n};\r\n\r\nexport default memo(FormField);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\r\n\r\nimport { FormContext } from './FormProvider';\r\n\r\nexport interface FormFieldContainerProps {\r\n    additionalClassName?: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n    hasError?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    className,\r\n    hasError,\r\n    testId,\r\n}) => (\r\n    <FormContext.Consumer>\r\n        {({ isSubmitted }) => (\r\n            <div\r\n                className={\r\n                    className ||\r\n                    classNames('form-field', additionalClassName, {\r\n                        'form-field--error': hasError && isSubmitted,\r\n                    })\r\n                }\r\n                data-test={testId}\r\n            >\r\n                {children}\r\n            </div>\r\n        )}\r\n    </FormContext.Consumer>\r\n);\r\n\r\nexport default memo(FormFieldContainer);\r\n","import { ErrorMessage } from 'formik';\r\nimport React, { FunctionComponent, memo, useCallback } from 'react';\r\n\r\nimport { FormContext } from './FormProvider';\r\n\r\nexport interface FormFieldErrorProps {\r\n    name: string;\r\n    testId?: string;\r\n    errorId: string;\r\n}\r\n\r\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\r\n    const renderMessage = useCallback(\r\n        (message: string) => (\r\n            <ul className=\"form-field-errors\" data-test={testId}>\r\n                <li className=\"form-field-error\">\r\n                    <label\r\n                        aria-live=\"polite\"\r\n                        className=\"form-inlineMessage\"\r\n                        htmlFor={name}\r\n                        id={errorId}\r\n                        role=\"alert\"\r\n                    >\r\n                        {message}\r\n                    </label>\r\n                </li>\r\n            </ul>\r\n        ),\r\n        [errorId, name, testId],\r\n    );\r\n\r\n    return (\r\n        <FormContext.Consumer>\r\n            {({ isSubmitted }) =>\r\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\r\n            }\r\n        </FormContext.Consumer>\r\n    );\r\n};\r\n\r\nexport default memo(FormFieldError);\r\n","import { isFunction, noop } from 'lodash';\r\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\r\n\r\nexport interface FormContextType {\r\n    isSubmitted: boolean;\r\n    setSubmitted(isSubmitted: boolean): void;\r\n}\r\n\r\ntype FormContextFunction = (props: FormContextType) => ReactNode;\r\n\r\nexport interface FormProviderProps {\r\n    initialIsSubmitted?: boolean;\r\n    children: ReactNode | FormContextFunction;\r\n}\r\n\r\nexport const FormContext = createContext<FormContextType>({\r\n    isSubmitted: false,\r\n    setSubmitted: noop,\r\n});\r\n\r\nconst FormProvider: FunctionComponent<FormProviderProps> = ({\r\n    children,\r\n    initialIsSubmitted = false,\r\n}) => {\r\n    const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\r\n    const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\r\n\r\n    return (\r\n        <FormContext.Provider value={contextValue}>\r\n            {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n\r\nexport default memo(FormProvider);\r\n","import classNames from 'classnames';\r\nimport { includes } from 'lodash';\r\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\r\n\r\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    testId?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst Input = forwardRef(\r\n    (\r\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => {\r\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\r\n\r\n        return (\r\n            <input\r\n                {...{\r\n                    ...rest,\r\n                    className: classNames(className, {\r\n                        'floating-input':\r\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\r\n                    }),\r\n                    name,\r\n                }}\r\n                data-test={testId}\r\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\r\n                ref={ref}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport default Input;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\r\n\r\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\r\n    testId?: string;\r\n    hidden?: boolean;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst Label: FunctionComponent<LabelProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    isFloatingLabelEnabled,\r\n    ...rest\r\n}) => (\r\n    <label\r\n        { ...rest }\r\n        className={ classNames(\r\n            { 'floating-label': isFloatingLabelEnabled },\r\n            className || 'form-label',\r\n            { 'is-srOnly': hidden },\r\n            'optimizedCheckout-form-label'\r\n        ) }\r\n        data-test={ testId }\r\n    >\r\n        { children }\r\n    </label>\r\n);\r\n\r\nexport default Label;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\r\n    hidden?: boolean;\r\n    testId?: string;\r\n}\r\n\r\nconst Legend: FunctionComponent<LegendProps> = ({\r\n    children,\r\n    className,\r\n    hidden,\r\n    testId,\r\n    ...rest\r\n}) => (\r\n    <legend\r\n        {...rest}\r\n        className={classNames(\r\n            className || 'form-legend',\r\n            { 'is-srOnly': hidden },\r\n            { 'optimizedCheckout-headingSecondary': !hidden },\r\n        )}\r\n        data-test={testId}\r\n    >\r\n        {children}\r\n    </legend>\r\n);\r\n\r\nexport default Legend;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\r\n\r\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n    additionalClassName?: string;\r\n    testId?: string;\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst TextArea = forwardRef(\r\n    (\r\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\r\n        ref: Ref<HTMLTextAreaElement>,\r\n    ) => {\r\n        return (\r\n            <textarea\r\n                {...rest}\r\n                className={\r\n                    className ||\r\n                    classNames(\r\n                        { 'floating-textarea': isFloatingLabelEnabled },\r\n                        'form-input',\r\n                        'optimizedCheckout-form-input',\r\n                        additionalClassName,\r\n                    )\r\n                }\r\n                data-test={testId}\r\n                ref={ref}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport default TextArea;\r\n","import classNames from 'classnames';\r\nimport React, { forwardRef, Ref } from 'react';\r\n\r\nimport Input, { InputProps } from './Input';\r\n\r\nexport interface TextInputProps extends InputProps {\r\n    additionalClassName?: string;\r\n    appearFocused?: boolean;\r\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\r\n    isFloatingLabelEnabled?: boolean;\r\n}\r\n\r\nconst TextInput = forwardRef(\r\n    (\r\n        {\r\n            additionalClassName,\r\n            isFloatingLabelEnabled,\r\n            appearFocused,\r\n            type = 'text',\r\n            ...rest\r\n        }: TextInputProps,\r\n        ref: Ref<HTMLInputElement>,\r\n    ) => (\r\n        <Input\r\n            {...rest}\r\n            className={classNames(\r\n                'form-input',\r\n                'optimizedCheckout-form-input',\r\n                { 'form-input--focus': appearFocused },\r\n                { 'optimizedCheckout-form-input--focus': appearFocused },\r\n                additionalClassName,\r\n            )}\r\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\r\n            ref={ref}\r\n            type={type}\r\n        />\r\n    ),\r\n);\r\n\r\nexport default TextInput;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconBolt: FunctionComponent = () => (\r\n    <svg\r\n        aria-labelledby=\"iconCardBoltTitle\"\r\n        data-test=\"bolt-icon\"\r\n        height=\"12\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 12 12\"\r\n        width=\"12\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n        <title id=\"iconCardBoltTitle\">Bolt</title>\r\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconBolt);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconChevronDown: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconChevronDown);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconClose: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconClose);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconError: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconError);\r\n","import classNames from 'classnames';\r\nimport React, { ComponentType, memo } from 'react';\r\n\r\nexport enum IconSize {\r\n    Regular = 'regular',\r\n    Small = 'small',\r\n    Medium = 'medium',\r\n    Large = 'large',\r\n}\r\n\r\nexport interface IconProps {\r\n    additionalClassName?: string;\r\n    size?: IconSize;\r\n    testId?: string;\r\n}\r\n\r\nexport default function withIconContainer<TProps extends Record<string, any>>(\r\n    OriginalComponent: ComponentType<TProps>,\r\n): ComponentType<TProps & IconProps> {\r\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\r\n        <div\r\n            className={classNames(\r\n                'icon',\r\n                additionalClassName,\r\n                size === IconSize.Small ? 'icon--small' : null,\r\n                size === IconSize.Large ? 'icon--large' : null,\r\n                size === IconSize.Medium ? 'icon--medium' : null,\r\n            )}\r\n            data-test={testId}\r\n        >\r\n            <OriginalComponent {...(rest as TProps)} />\r\n        </div>\r\n    ));\r\n}\r\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport { ErrorBoundary } from '../../common/error';\r\n\r\nimport './LazyContainer.scss';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LazyContainerProps {\r\n    children: ReactNode;\r\n    loadingSkeleton?: ReactNode;\r\n}\r\n\r\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\r\n\r\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\r\n    <ErrorBoundary\r\n        fallback={\r\n            <div className=\"lazyContainer-error\">\r\n                <TranslatedString id=\"common.unstable_network_error\" />\r\n            </div>\r\n        }\r\n        filter={filterError}\r\n    >\r\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\r\n    </ErrorBoundary>\r\n);\r\n\r\nexport default LazyContainer;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nexport interface LoadingOverlayProps {\r\n    isLoading: boolean;\r\n    hideContentWhenLoading?: boolean;\r\n    unmountContentWhenLoading?: boolean;\r\n}\r\n\r\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\r\n    children,\r\n    hideContentWhenLoading,\r\n    unmountContentWhenLoading,\r\n    isLoading,\r\n}) => {\r\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\r\n        return (\r\n            <>\r\n                <LoadingSpinner isLoading={isLoading} />\r\n                {unmountContentWhenLoading && isLoading ? null : (\r\n                    <div\r\n                        style={{\r\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingOverlay-container\">\r\n            {children}\r\n            {isLoading && <div className=\"loadingOverlay optimizedCheckout-overlay\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingOverlay;\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nexport interface LoadingSpinnerProps {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\r\n    if (!isLoading) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"loadingSpinner loadingOverlay-container\" style={{ height: 100 }}>\r\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(LoadingSpinner);\r\n","import classNames from 'classnames';\r\nimport { noop } from 'lodash';\r\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { Omit } from 'utility-types';\r\n\r\nimport { preventDefault } from '../../common/dom';\r\nimport { IconClose } from '../icon';\r\n\r\nexport type ModalProps = Omit<\r\n    ReactModal.Props,\r\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\r\n> & {\r\n    children: ReactNode;\r\n    closeButtonLabel?: string | ReactNode;\r\n    footer?: ReactNode;\r\n    header?: ReactNode;\r\n    additionalHeaderClassName?: string;\r\n    additionalBodyClassName?: string;\r\n    additionalModalClassName?: string;\r\n    shouldShowCloseButton?: boolean;\r\n};\r\n\r\nconst Modal: FunctionComponent<ModalProps> = ({\r\n    children,\r\n    closeButtonLabel = 'Close',\r\n    footer,\r\n    header,\r\n    additionalHeaderClassName,\r\n    additionalBodyClassName,\r\n    additionalModalClassName,\r\n    onRequestClose = noop,\r\n    shouldShowCloseButton = false,\r\n    ...rest\r\n}) => {\r\n    const handleClose = useCallback(\r\n        (event: MouseEvent | KeyboardEvent) => {\r\n            onRequestClose(event);\r\n        },\r\n        [onRequestClose],\r\n    );\r\n\r\n    return (\r\n        <ReactModal\r\n            {...rest}\r\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\r\n            bodyOpenClassName=\"has-activeModal\"\r\n            className={{\r\n                base: classNames(\r\n                    'modal optimizedCheckout-contentPrimary',\r\n                    additionalModalClassName,\r\n                ),\r\n                afterOpen: 'modal--afterOpen',\r\n                beforeClose: 'modal--beforeClose',\r\n            }}\r\n            closeTimeoutMS={200}\r\n            onRequestClose={onRequestClose}\r\n            overlayClassName={{\r\n                base: 'modalOverlay',\r\n                afterOpen: 'modalOverlay--afterOpen',\r\n                beforeClose: 'modalOverlay--beforeClose',\r\n            }}\r\n            shouldCloseOnEsc={true}\r\n            shouldCloseOnOverlayClick={false}\r\n        >\r\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\r\n                {header}\r\n\r\n                {shouldShowCloseButton && (\r\n                     \r\n                    <a\r\n                        className=\"modal-close\"\r\n                        data-test=\"modal-close-button\"\r\n                        href=\"#\"\r\n                        onClick={preventDefault(handleClose)}\r\n                    >\r\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\r\n\r\n                        <IconClose />\r\n                    </a>\r\n                )}\r\n            </div>\r\n\r\n            <div\r\n                className={classNames('modal-body', additionalBodyClassName)}\r\n                data-test=\"modal-body\"\r\n            >\r\n                {children}\r\n            </div>\r\n\r\n            {Boolean(footer) && (\r\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\r\n                    {footer}\r\n                </div>\r\n            )}\r\n        </ReactModal>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\ninterface ModalHeaderProps {\r\n    children: React.ReactNode;\r\n    additionalClassName?: string;\r\n}\r\n\r\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\r\n    <h2\r\n        className={classNames(\r\n            'modal-header-title optimizedCheckout-headingSecondary',\r\n            additionalClassName,\r\n        )}\r\n        data-test=\"modal-heading\"\r\n    >\r\n        {children}\r\n    </h2>\r\n);\r\n\r\nexport default ModalHeader;\r\n","import React, { FunctionComponent, memo } from 'react';\r\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\r\n\r\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\r\n\r\nconst queries = {\r\n    print: 'print',\r\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\r\n};\r\n\r\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\r\n    children,\r\n}) => {\r\n    return <Media queries={queries}>{children}</Media>;\r\n};\r\n\r\nexport default memo(ViewPicker);\r\n","import React, { FunctionComponent, memo } from 'react';\r\n\r\nimport ViewPicker from './ViewPicker';\r\n\r\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\r\n    children,\r\n}) => {\r\n    return (\r\n        <ViewPicker>\r\n            {(matches: { mobile: boolean }) => {\r\n                return children(matches.mobile);\r\n            }}\r\n        </ViewPicker>\r\n    );\r\n};\r\n\r\nexport default memo(MobileView);\r\n","// These values have to match with screensizes.scss\r\nexport const MOBILE_MAX_WIDTH = 968;\r\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\r\n","import { Component, ReactNode } from 'react';\r\n\r\nexport interface ToggleProps {\r\n    openByDefault?: boolean;\r\n    children(props: any): ReactNode;\r\n}\r\n\r\nexport interface ToggleState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\r\n    constructor(props: ToggleProps) {\r\n        super(props);\r\n\r\n        this.state = { isOpen: !!props.openByDefault };\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { isOpen } = this.state;\r\n\r\n        return children({\r\n            isOpen,\r\n            toggle: this.toggle,\r\n        });\r\n    }\r\n\r\n    private toggle: (event: Event) => void = (event) => {\r\n        const { isOpen } = this.state;\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({ isOpen: !isOpen });\r\n    };\r\n}\r\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface LocaleContextType {\r\n    language: LanguageService;\r\n    date?: {\r\n        inputFormat: string;\r\n    };\r\n    currency?: CurrencyService;\r\n}\r\n\r\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\r\n\r\nexport default LocaleContext;\r\n\r\nexport function useLocale() {\r\n    const context = useContext(LocaleContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useLocale must be used within a LocaleContextProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport getLanguageService from './getLanguageService';\r\nimport LocaleContext from './LocaleContext';\r\n\r\nexport interface LocaleProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface LocaleProviderState {\r\n    config?: StoreConfig;\r\n}\r\n\r\nclass LocaleProvider extends Component<LocaleProviderProps> {\r\n    state: Readonly<LocaleProviderState> = {};\r\n\r\n    private languageService = getLanguageService();\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\r\n        return {\r\n            currency: config ? createCurrencyService(config) : undefined,\r\n            date: config\r\n                ? {\r\n                      inputFormat: config.inputDateFormat,\r\n                  }\r\n                : undefined,\r\n            language: this.languageService,\r\n        };\r\n    });\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe(\r\n            ({ data }) => {\r\n                this.setState({ config: data.getConfig() });\r\n            },\r\n            ({ data }) => data.getConfig(),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { children } = this.props;\r\n        const { config } = this.state;\r\n\r\n        return (\r\n            <LocaleContext.Provider value={this.getContextValue(config)}>\r\n                {children}\r\n            </LocaleContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocaleProvider;\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport withLanguage, { WithLanguageProps } from './withLanguage';\r\n\r\nexport interface TranslatedHtmlProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nconst TranslatedHtml: FunctionComponent<TranslatedHtmlProps & WithLanguageProps> = ({\r\n    data,\r\n    id,\r\n    language,\r\n}) => (\r\n    <span\r\n        dangerouslySetInnerHTML={{\r\n            __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\r\n        }}\r\n    />\r\n);\r\n\r\nexport default withLanguage(TranslatedHtml);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withLanguage, { WithLanguageProps } from './withLanguage';\r\n\r\nexport interface TranslatedStringProps {\r\n    id: string;\r\n    data?: any;\r\n}\r\n\r\nconst TranslatedString: FunctionComponent<TranslatedStringProps & WithLanguageProps> = ({\r\n    data,\r\n    id,\r\n    language,\r\n}) => <>{language.translate(id, data)}</>;\r\n\r\nexport default withLanguage(TranslatedString);\r\n","import FALLBACK_TRANSLATIONS from './en.json';\r\n\r\nexport const FALLBACK_LOCALE = 'en';\r\n\r\nexport { FALLBACK_TRANSLATIONS };\r\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\r\n\r\nlet languageService: LanguageService | undefined;\r\n\r\nexport default function getLanguageService(): LanguageService {\r\n    languageService =\r\n        languageService ??\r\n        createLanguageService({\r\n            fallbackLocale: FALLBACK_LOCALE,\r\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n        });\r\n\r\n    return languageService;\r\n}\r\n\r\nexport type InitializeLanguageService = typeof initializeLanguageService;\r\n\r\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\r\n    languageService = createLanguageService({\r\n        ...config,\r\n        defaultLocale: config.locale,\r\n        defaultTranslations: config.defaultTranslations,\r\n        fallbackLocale: FALLBACK_LOCALE,\r\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\r\n    });\r\n\r\n    return languageService;\r\n}\r\n","import { isEmpty, pickBy } from 'lodash';\r\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\r\n\r\nimport InjectHoc from './InjectHoc';\r\n\r\nexport interface InjectHocOptions<TInjectedProps> {\r\n    displayNamePrefix?: string;\r\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\r\n}\r\n\r\nexport default function createInjectHoc<\r\n    TInjectedProps extends object | undefined,\r\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\r\n>(\r\n    ContextComponent: Context<TInjectedProps>,\r\n    options?: InjectHocOptions<TInjectedProps>,\r\n): InjectHoc<NonNullable<TPickedProps>> {\r\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\r\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\r\n\r\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\r\n            <OriginalComponent {...props} />\r\n        ));\r\n\r\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\r\n            const context = useContext(ContextComponent);\r\n            const injectedProps = pickBy(context, (value, key) =>\r\n                pickProps(value, key as keyof TInjectedProps),\r\n            );\r\n\r\n            if (isEmpty(injectedProps)) {\r\n                return null;\r\n            }\r\n\r\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\r\n\r\n            return <InnerDecoratedComponent {...mergedProps} />;\r\n        };\r\n\r\n        if (displayNamePrefix) {\r\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\r\n                OriginalComponent.displayName || OriginalComponent.name\r\n            })`;\r\n        }\r\n\r\n        return DecoratedComponent;\r\n    };\r\n}\r\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport LocaleContext from './LocaleContext';\r\nimport { createInjectHoc, InjectHoc } from './utils';\r\n\r\nexport interface WithCurrencyProps {\r\n    currency: CurrencyService;\r\n}\r\n\r\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithCurrency',\r\n    pickProps: (value, key) => key === 'currency' && !!value,\r\n});\r\n\r\nexport default withCurrency;\r\n","import LocaleContext from './LocaleContext';\r\nimport { createInjectHoc, InjectHoc } from './utils';\r\n\r\nexport interface WithDateProps {\r\n    date: {\r\n        inputFormat: string;\r\n    };\r\n}\r\n\r\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'withDate',\r\n    pickProps: (value, key) => key === 'date' && !!value,\r\n});\r\n\r\nexport default withDate;\r\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\r\n\r\nimport LocaleContext from './LocaleContext';\r\nimport { createInjectHoc, InjectHoc } from './utils';\r\n\r\nexport interface WithLanguageProps {\r\n    language: LanguageService;\r\n}\r\n\r\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\r\n    displayNamePrefix: 'WithLanguage',\r\n    pickProps: (value, key) => key === 'language' && !!value,\r\n});\r\n\r\nexport default withLanguage;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { createContext, useContext } from 'react';\r\n\r\nexport interface CheckoutContextProps {\r\n    checkoutService: CheckoutService;\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\r\n\r\nexport function useCheckout() {\r\n    const context = useContext(CheckoutContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport default CheckoutContext;\r\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport CheckoutContext from './CheckoutContext';\r\n\r\nexport interface CheckoutProviderProps {\r\n    checkoutService: CheckoutService;\r\n}\r\n\r\nexport interface CheckoutProviderState {\r\n    checkoutState: CheckoutSelectors;\r\n}\r\n\r\nexport default class CheckoutProvider extends Component<\r\n    CheckoutProviderProps,\r\n    CheckoutProviderState\r\n> {\r\n    state: Readonly<CheckoutProviderState>;\r\n\r\n    private unsubscribe?: () => void;\r\n\r\n    private getContextValue = memoizeOne(\r\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\r\n            return {\r\n                checkoutService,\r\n                checkoutState,\r\n            };\r\n        },\r\n    );\r\n\r\n    constructor(props: Readonly<CheckoutProviderProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checkoutState: props.checkoutService.getState(),\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const { checkoutService } = this.props;\r\n\r\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\r\n            this.setState({ checkoutState }),\r\n        );\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = undefined;\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const { checkoutService, children } = this.props;\r\n        const { checkoutState } = this.state;\r\n\r\n        return (\r\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\r\n                {children}\r\n            </CheckoutContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import React, { ComponentType } from 'react';\r\n\r\nimport ResolvableComponent from './ResolvableComponent';\r\n\r\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    Component: ComponentType<TProps>,\r\n    resolveIds: TIdentifier[],\r\n): ResolvableComponent<TProps, TIdentifier> {\r\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\r\n    const skeleton = (\r\n        <div className=\"checkout-form\">\r\n            <div className=\"form-legend-container\">\r\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\r\n            </div>\r\n            <div className=\"address-form-skeleton\">\r\n                <div className=\"name-fields-skeleton\">\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                    <div className=\"skeleton-container\">\r\n                        <div className=\"input-skeleton\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"skeleton-container\">\r\n                    <div className=\"input-skeleton\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default AddressFormSkeleton;\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\r\n\r\ninterface ChecklistSkeletonProps {\r\n    additionalClassName?: string;\r\n    rows?: number;\r\n}\r\n\r\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\r\n    additionalClassName,\r\n    children,\r\n    isLoading = true,\r\n    rows = 3,\r\n}) => {\r\n    const content = [];\r\n\r\n    for (let i = 0; i < rows; i += 1) {\r\n        content.push(\r\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\r\n                <div className=\"checklist-skeleton-circle\" />\r\n                <div className=\"checklist-skeleton-rectangle\" />\r\n            </div>,\r\n        );\r\n    }\r\n\r\n    const skeleton = (\r\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\r\n    );\r\n\r\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\r\n};\r\n\r\nexport default ChecklistSkeleton;\r\n","import React, { FunctionComponent, ReactNode } from 'react';\r\n\r\nexport interface LoadingSkeletonProps {\r\n    isLoading?: boolean;\r\n    renderWhileLoading?: boolean;\r\n    skeleton?: ReactNode;\r\n}\r\n\r\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\r\n    children,\r\n    isLoading = true,\r\n    renderWhileLoading = false,\r\n    skeleton,\r\n}) => {\r\n    const shouldShowChildren = renderWhileLoading || !isLoading;\r\n\r\n    return (\r\n        <>\r\n            {isLoading && skeleton}\r\n            {Boolean(children) && shouldShowChildren && (\r\n                <div\r\n                    className=\"loading-skeleton\"\r\n                    style={\r\n                        isLoading ? { position: 'absolute', left: '100%', top: '-100%' } : undefined\r\n                    }\r\n                >\r\n                    {children}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","clickPayButton","paymentRejected","paymentComplete","exitCheckout","AnalyticsContext","value","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","state","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","type","getBillingCountries","getBillingAddressFields","getShippingAddressFields","fields","memo","addressWithoutLocalization","isValidAddress","filter","field","custom","className","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","reduce","schema","required","label","trim","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","max","getFormFieldsValidationSchema","isValidSync","mapAddressToFormValues","values","addressFormValues","fieldName","fieldType","defaultValue","customFields","fieldValue","Date","getDefaultValue","getValue","shouldSaveAddress","displayNamePrefix","checkoutState","checkout","getCheckout","payments","payment","providerId","id","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","length","this","methods","join","UNSUPPORTED_METHODS","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","data","url","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","isApplePayWindow","window","APPLE_PAY","SUPPORTED_METHODS","containerId","initialize","isShowingWalletButtonsOnTop","methodId","onError","heightOption","buttonHeight","container","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","toString","location","pathname","replace","Promise","noop","rest","localeContext","useContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","useEffect","beautifyAmazonButton","document","querySelector","amazonButton","shadowRoot","style","height","onComplete","sortMethodIds","methodIds","order","sort","a","b","getConfig","getCustomer","isInitializedCustomer","getInitializeCustomerError","config","availableMethodIds","checkoutSettings","remoteCheckoutProviders","customer","isGuest","Boolean","initializedMethodIds","paypalCommerceIds","isPaypalCommerce","some","includes","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","error","position","left","top","TranslatedString","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","Error","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","onClick","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","isInitializing","hideText","supportedMethodIds","filterUnsupportedMethodIds","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","studentInfo","JSON","parse","sessionStorage","getItem","o","fieldId","isSignedIn","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","size","testId","variant","EMAIL_REGEXP","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getEmailValidationSchema","withLanguage","withFormik","handleSubmit","onSubmit","createAccount","signIn","CustomerPassword","val1","checkoutCustom","storeProfile","storeHash","storeId","val2","Encode","encoded","charCode","charCodeAt","String","fromCharCode","Number","btoa","mappedFields","acceptsMarketingEmails","mapCustomFormFieldsFromFormValues","mapCreateAccountFromFormValues","setItem","stringify","mapPropsToValues","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","isCreatingAccount","isFloatingLabelEnabled","Form","Fieldset","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","isReady","handleCreateAccount","handleCancelCreateAccount","clearError","onChangeViewType","createAccountError","onReady","renderCreateAccountForm","customerAccountFields","requiresMarketingConsent","onCancel","Component","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isContinuingAsGuest","isInitializingCustomer","isSigningIn","isSendingSignInEmail","isCreatingCustomerAccount","signInEmail","privacyPolicyUrl","isSignInEmailEnabled","isAccountCreationEnabled","canSubscribe","shopperConfig","showNewsletterSignup","checkoutButtonIds","createCustomerAccount","continueAsGuest","sendLoginEmail","sendSignInEmail","defaultShouldSubscribe","defaultNewsletterSignup","forgotPasswordUrl","links","forgotPasswordLink","hasBillingId","isGuestEnabled","guestCheckoutEnabled","signInEmailError","signInCustomer","signInError","Customer","withIconContainer","viewBox","width","xmlns","d","Alert","icon","dangerouslySetInnerHTML","__html","banners","result","promotion","banner","index","text","isUsingMultiShipping","consignments","lineItems","consignment","lineItemIds","hasUnassignedLineItems","cart","compactView","selectedShippingOption","StaticAddress","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","getLanguageService","title","ShippingOptionExpiredError","role","heading","isActive","isComplete","isEditable","onEdit","summary","preventDefault","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","input","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","physicalItems","lineItem","isShippingRequired","features","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isStripeLinkAuthenticated","isRequired","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","getShippingStepStatus","getShippingAddress","getConsignments","getCart","shippingAddress","shippingAddressFields","hasOptions","hasSelectedShippingOptions","hasUnassignedItems","getPaymentStepStatus","getOrder","customerStep","shippingStep","billingStep","paymentStep","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","Billing","lazy","retry","CartSummary","CartSummaryDrawer","Payment","Shipping","isBillingSameAsShipping","isRedirecting","isMultiShippingMode","isHidingStepNumbers","isSubscribed","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","Math","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","newHasSelectedShippingOptions","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","log","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","href","postSignedOut","setCustomerViewType","isEmbedded","assign","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","canCreateAccountInCheckout","createAccountUrl","handleBeforeExit","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadCheckout","subscribeToConsignments","params","include","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","removeStepNumbersFlag","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","defaultStepType","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","isWalletButtonsOnTop","onAccountCreated","onContinueAsGuest","onContinueAsGuestError","onSignIn","onSignInError","onSubscribeToNewsletter","viewType","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onCreateAccount","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","loginLink","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","getDerivedStateFromError","componentDidCatch","fallback","aria","labelledby","handleOnRequestClose","nativeEvent","Modal","additionalModalClassName","footer","renderFooter","header","renderHeader","isOpen","onRequestClose","renderBody","ModalHeader","IconError","renderErrorCode","shouldShowErrorCode","isRequestError","headers","errorCode","computeErrorCode","toUpperCase","setPrototypeOf","object","Object","__proto__","ErrorLevelType","customConsole","console","tags","level","meta","Info","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","breadcrumbs","breadcrumb","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","sampleRate","beforeSend","denyUrls","integrations","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","customError","obj","hasOwnProperty","call","createInjectHoc","pickProps","injectedProps","pickBy","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","push","EMPTY_ARRAY","freeze","lastPathName","split","pop","DEFAULT_OPTIONS","count","interval","resolve","amount","currency","toCustomerCurrency","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","kebabCase","rules","body","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","placeholder","select","checkbox","radio","checklist","checked","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","createElement","head","appendChild","sheet","CSSStyleSheet","forEach","rule","insertRule","appendStylesheet","maxValue","minValue","strict","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","toResolvableComponent","catch","hasProto","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","getElementById","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","then","response","renderPasswordInput","TextInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","FormField","labelContent","confirmPassword","onSignUp","oneOf","isSigningUp","customerCanBeCreated","legend","Legend","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","remaining","used","balance","purchaseDate","getStoreCreditAmount","total","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","subtotalAmount","shippingAmount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","isPaymentWithMandate","mandate","OrderStatusMessage","orderNumber","orderStatus","supportEmail","supportPhoneNumber","paymentsWithMandates","status","rel","target","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","LoadingSpinner","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","isUpdatedCartSummayModal","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","itemId","item","isNil","parentId","findLineItems","getLineItemsCount","quantity","availableShippingOptions","addedByPromotion","Toggle","openByDefault","toggle","imageUrl","alt","transitTime","additionalDescription","ShopperCurrency","cost","AlertType","Success","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Primary","Secondary","Action","Small","Tiny","Large","InnerField","form","onChange","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","forwardRef","htmlFor","Input","Label","withDate","date","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","IconChevronDown","optionValue","CheckboxInput","isArray","autoComplete","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","FormFieldContainer","FormFieldError","errorId","renderField","renderProps","pick","FieldArray","secret","fieldLabel","maxLength","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","renderInput","items","helperLabel","rows","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","isSubmitted","renderMessage","ErrorMessage","FormContext","initialIsSubmitted","contextValue","Provider","isFunction","hidden","appearFocused","IconSize","Medium","filterError","Suspense","unmountContentWhenLoading","display","closeButtonLabel","additionalHeaderClassName","additionalBodyClassName","shouldShowCloseButton","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","useCheckout","getState","content","shouldShowChildren"],"sourceRoot":""}