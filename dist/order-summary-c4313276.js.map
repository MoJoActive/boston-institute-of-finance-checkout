{"version":3,"file":"order-summary-c4313276.js","mappings":"uKAaA,QAT8C,SAAC,G,IAAEA,EAAQ,WAAO,OAC5D,0BAAQC,UAAU,eACd,sBAAIA,UAAU,iDACV,gBAACC,EAAA,EAAgB,CAACC,GAAG,uBAExBH,EALuD,E,2DC2EhE,QAzDwF,SAAC,GACrF,IAAAI,EAAa,gBACbC,EAAK,QACLC,EAAa,gBACbC,EAAe,kBACfC,EAAU,aACVC,EAAmB,sBACnBC,EAAS,YACTC,EAAK,QACFC,GAA0B,cATwD,oHAW/EC,GAAsB,IAAAC,UAAQ,WAAM,OC/B/B,SAA4BJ,GACvC,OAAO,gCACAA,GAAS,CACZK,cAAeL,EAAUK,cAAcC,QAAO,SAACC,GAAS,MAAyB,iBAAlBA,EAAKC,QAAZ,IACxDC,aAAcT,EAAUS,aAAaH,QAAO,SAACC,GAAS,MAAyB,iBAAlBA,EAAKC,QAAZ,KAE9D,CDyB8CE,CAAmBV,EAAnB,GAA+B,CAACA,IACpEW,EAAsBjB,GAAiBC,GAASA,EAAMiB,OAAS,EAErE,OACI,2BAASrB,UAAU,sCAAqC,YAAW,QAC/D,gBAAC,EAAkB,KAAEO,GAErB,gBAACe,EAAA,EAAmB,KAChB,gBAACC,EAAA,EAAiB,CAACC,uBAAqB,EAACC,MAAOb,KAGpD,gBAACU,EAAA,EAAmB,KAChB,gBAACI,EAAA,GAAqB,eAACvB,cAAeA,EAAeC,MAAOA,GAAWO,IACtEH,GAGL,gBAACc,EAAA,EAAmB,KAChB,gBAACK,EAAA,EAAiB,CACdC,YAAalB,EACbmB,oBAAqBvB,EAAgBwB,KACrCC,kBAAmB1B,EAAcyB,QAIxCV,GAAuB,gBAACE,EAAA,EAAmB,KACxC,sBACItB,UAAU,uEAAsE,YACtE,YAEV,gBAACC,EAAA,EAAgB,CACbC,GAAG,0BAGTE,GAAS,IAAI4B,KAAI,SAACC,EAAKC,GAAU,OAC/B,gBAACC,EAAA,EAAiB,CACdC,OAAQH,EAAIG,OACZC,IAAKH,EACLI,MAAOL,EAAIM,KACXC,OAAO,cALoB,KAWnD,C","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n        {children}\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent, ReactNode, useMemo } from 'react';\r\n\r\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\r\n\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummaryPrice from './OrderSummaryPrice';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\nimport removeBundledItems from './removeBundledItems';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    isTaxIncluded,\r\n    taxes,\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\r\n    const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\r\n\r\n    return (\r\n        <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n            <OrderSummaryHeader>{headerLink}</OrderSummaryHeader>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryItems displayLineItemsCount items={nonBundledLineItems} />\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\r\n                {additionalLineItems}\r\n            </OrderSummarySection>\r\n\r\n            <OrderSummarySection>\r\n                <OrderSummaryTotal\r\n                    orderAmount={total}\r\n                    shopperCurrencyCode={shopperCurrency.code}\r\n                    storeCurrencyCode={storeCurrency.code}\r\n                />\r\n            </OrderSummarySection>\r\n\r\n            {displayInclusiveTax && <OrderSummarySection>\r\n                <h5\r\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\r\n                    data-test=\"tax-text\"\r\n                >\r\n                    <TranslatedString\r\n                        id=\"tax.inclusive_label\"\r\n                    />\r\n                </h5>\r\n                {(taxes || []).map((tax, index) => (\r\n                    <OrderSummaryPrice\r\n                        amount={tax.amount}\r\n                        key={index}\r\n                        label={tax.name}\r\n                        testId=\"cart-taxes\"\r\n                    />\r\n                ))}\r\n            </OrderSummarySection>}\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\r\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\r\n    };\r\n}\r\n"],"names":["children","className","TranslatedString","id","isTaxIncluded","taxes","storeCurrency","shopperCurrency","headerLink","additionalLineItems","lineItems","total","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","physicalItems","filter","item","parentId","digitalItems","removeBundledItems","displayInclusiveTax","length","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","map","tax","index","OrderSummaryPrice","amount","key","label","name","testId"],"sourceRoot":""}